{"version":3,"sources":["../../../src/server/scripts/migrateNewsCount.ts"],"names":["console","log","WeightRangeModel","RentalPeriodModel","migrateNewsCount","mongoose","connect","config","database","connectionString","useNewUrlParser","updateBrandNewsCount","brandId","NewsModel","find","brand","countDocuments","exec","totalNews","BrandModel","findByIdAndUpdate","$set","updateCategoryNewsCount","categoryId","CategoryModel","updateModelNewsCount","modelId","model","ModelModel","updateProvinceNewsCount","provinceId","location","ProvinceModel","brands","provinces","models","categories","updateBrands","updateModels","updateProvinces","updateCategories","push","_id","province","category","Promise","all","process","exit"],"mappings":"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","sourcesContent":["// tslint:disable\nimport mongoose from 'mongoose';\nimport { config } from '@app/config';\nimport { BrandModel, NewsModel, CategoryModel, ModelModel, ProvinceModel } from '@app/machine-news';\nimport { WeightRangeModel } from '../modules/machine-news/aggregates/weight-ranges/weight-ranges.repository';\nimport { RentalPeriodModel } from '../modules/machine-news/aggregates/rental-periods/rental-periods.repository';\n\nconsole.log(WeightRangeModel, RentalPeriodModel);\n\nconst migrateNewsCount = async () => {\n  await mongoose.connect(config.database.connectionString, { useNewUrlParser: true });\n\n  const updateBrandNewsCount = async (brandId: string) => {\n    const totalNews = await NewsModel.find({brand: brandId}).countDocuments().exec();\n    await BrandModel.findByIdAndUpdate(brandId, {$set: {totalNews}});\n  };\n\n  const updateCategoryNewsCount = async (categoryId: string) => {\n    const totalNews = await NewsModel.find({categoryId}).countDocuments().exec();\n    await CategoryModel.findByIdAndUpdate(categoryId, {$set: {totalNews}});\n  };\n\n  const updateModelNewsCount = async (modelId: string) => {\n    const totalNews = await NewsModel.find({model: modelId}).countDocuments().exec();\n    await ModelModel.findByIdAndUpdate(modelId, {$set: {totalNews}});\n  };\n\n  const updateProvinceNewsCount = async (provinceId: string) => {\n    const totalNews = await NewsModel.find({location: provinceId}).countDocuments().exec();\n    await ProvinceModel.findByIdAndUpdate(provinceId, {$set: {totalNews}});\n  };\n\n  const brands = await BrandModel.find().exec();\n  const provinces = await ProvinceModel.find().exec();\n  const models = await ModelModel.find().exec();\n  const categories = await CategoryModel.find().exec();\n\n  const updateBrands: any = [];\n  const updateModels: any = [];\n  const updateProvinces: any = [];\n  const updateCategories: any = [];\n\n  for (let brand of brands) {\n    updateBrands.push(updateBrandNewsCount(brand._id));\n  }\n  for (let province of provinces) {\n    updateProvinces.push(updateProvinceNewsCount(province._id));\n  }\n  for (let model of models) {\n    updateModels.push(updateModelNewsCount(model._id));\n  }\n  for (let category of categories) {\n    updateCategories.push(updateCategoryNewsCount(category._id));\n  }\n\n  await Promise.all(updateBrands);\n  await Promise.all(updateModels);\n  await Promise.all(updateProvinces);\n  await Promise.all(updateCategories);\n\n  console.log('Migrate news count success');\n  process.exit();\n};\nmigrateNewsCount();\n"],"file":"migrateNewsCount.js"}