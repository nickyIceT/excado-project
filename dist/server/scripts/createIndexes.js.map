{"version":3,"sources":["../../../src/server/scripts/createIndexes.ts"],"names":["createIndexes","mongoose","connect","config","database","connectionString","useNewUrlParser","isDev","moduleNames","excludedModules","excludedAggregates","createIndexPromises","module","indexOf","aggregateNames","aggregateName","logger","info","serviceRepositoryUrl","repository","require","createRepoIndexes","Object","keys","length","ensureIndexes","push","error","Promise","all","console","log","process","exit"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AACA,IAAMA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdC,kBAASC,OAAT,CAAiBC,eAAOC,QAAP,CAAgBC,gBAAjC,EAAmD;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aAAnD,CADc;;AAAA;AAAA;AAAA,mBAGM,gCAAWC,cAAQ,KAAR,GAAgB,MAA3B,qBAHN;;AAAA;AAGdC,YAAAA,WAHc;AAIdC,YAAAA,eAJc,GAIc,CAAC,SAAD,EAAY,WAAZ,CAJd;AAKdC,YAAAA,kBALc,GAKiB,CAAC,SAAD,EAAY,WAAZ,CALjB;AAOdC,YAAAA,mBAPc,GAOQ,EAPR;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQCH,WARD;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQTI,YAAAA,MARS;;AAAA,kBASdH,eAAe,CAACI,OAAhB,CAAwBD,MAAxB,MAAoC,CAAC,CATvB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAaW,gCAAWL,cAAQ,KAAR,GAAgB,MAA3B,6BAAoDK,MAApD,iBAbX;;AAAA;AAaZE,YAAAA,cAbY;AAAA;AAAA;AAAA;AAAA;AAAA,yBAcUA,cAdV;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcPC,YAAAA,aAdO;;AAAA,kBAeZL,kBAAkB,CAACG,OAAnB,CAA2BE,aAA3B,MAA8C,CAAC,CAA/C,IAAoDA,aAAa,CAACF,OAAd,CAAsB,OAAtB,MAAmC,CAf3E;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAmBhBG,yBAAOC,IAAP,2BAA+BL,MAA/B,eAA0CG,aAA1C;;AACMG,YAAAA,oBApBU,wBAoB2BN,MApB3B,yBAoBgDG,aApBhD,cAoBiEA,aApBjE;;AAqBhB,gBAAI;AACII,cAAAA,UADJ,GACsBC,OAAO,CAACF,oBAAD,CAD7B;AAEIG,cAAAA,iBAFJ,GAEwBF,UAAU,CAACG,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBG,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,MAAxB,GAAiC,CAAzD,CAAD,CAAV,CAAwEC,aAFhG;;AAGF,kBAAIJ,iBAAJ,EAAuB;AACrBV,gBAAAA,mBAAmB,CAACe,IAApB,CAAyBL,iBAAiB,EAA1C;AACD;AACF,aAND,CAME,OAAOM,KAAP,EAAc,CACd;AACD;;AA7Be;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAiCdC,OAAO,CAACC,GAAR,CAAYlB,mBAAZ,CAjCc;;AAAA;AAkCpBmB,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAC,YAAAA,OAAO,CAACC,IAAR;;AAnCoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbjC,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAsCAA,aAAa","sourcesContent":["import { readdir } from 'fs-extra';\nimport { logger, isDev } from '@app/core';\nimport mongoose from 'mongoose';\nimport { config } from '@app/config';\n\n// tslint:disable:no-console\nconst createIndexes = async () => {\n  await mongoose.connect(config.database.connectionString, { useNewUrlParser: true });\n\n  const moduleNames = await readdir(`${isDev ? 'src' : 'dist'}/server/modules`);\n  const excludedModules: string[] = ['website', '.DS_Store'];\n  const excludedAggregates: string[] = ['helpers', '.DS_Store'];\n\n  const createIndexPromises = [];\n  for (const module of moduleNames) {\n    if (excludedModules.indexOf(module) !== -1) {\n      continue;\n    }\n\n    const aggregateNames = await readdir(`${isDev ? 'src' : 'dist'}/server/modules/${module}/aggregates`);\n    for (const aggregateName of aggregateNames) {\n      if (excludedAggregates.indexOf(aggregateName) !== -1 || aggregateName.indexOf('index') === 0) {\n        continue;\n      }\n\n      logger.info(`[Create Index] [${module}] ${aggregateName} ...`);\n      const serviceRepositoryUrl = `../modules/${module}/aggregates/${aggregateName}/${aggregateName}.repository`;\n      try {\n        const repository: any = require(serviceRepositoryUrl);\n        const createRepoIndexes = repository[Object.keys(repository)[Object.keys(repository).length - 1]].ensureIndexes;\n        if (createRepoIndexes) {\n          createIndexPromises.push(createRepoIndexes());\n        }\n      } catch (error) {\n        // console.log(error);\n      }\n    }\n  }\n\n  await Promise.all(createIndexPromises);\n  console.log('Create indexes success');\n  process.exit();\n};\n\ncreateIndexes();\n"],"file":"createIndexes.js"}