{"version":3,"sources":["../../../../src/server/core/helpers/validateQuery.ts"],"names":["validateQuery","query","UserInputError","first","isNaN"],"mappings":";;;;;;;AACA;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAkC;AAC7D,MAAI,CAACA,KAAL,EAAY;AACV,UAAM,IAAIC,8BAAJ,CAAmB,oBAAnB,CAAN;AACD;;AACD,MAAI,CAACD,KAAK,CAACE,KAAP,IAAgBC,KAAK,CAACH,KAAK,CAACE,KAAP,CAArB,IAAsCF,KAAK,CAACE,KAAN,GAAc,CAApD,IAAyDF,KAAK,CAACE,KAAN,GAAc,EAA3E,EAA+E;AAC7E,UAAM,IAAID,8BAAJ,CAAmB,wBAAnB,CAAN;AACD;AACF,CAPM","sourcesContent":["import { FindQuery } from '@app/core';\nimport { UserInputError } from '../errors/UserInputError';\n\nexport const validateQuery = (query: FindQuery | undefined) => {\n  if (!query) {\n    throw new UserInputError('Query is undefined');\n  }\n  if (!query.first || isNaN(query.first) || query.first < 0 || query.first > 50) {\n    throw new UserInputError('Query.first is invalid');\n  }\n};\n"],"file":"validateQuery.js"}