{"version":3,"sources":["../../../../src/server/core/helpers/validatePayload.ts"],"names":["validatePayload","rules","data","validationSchema","yup","object","shape","validate","UserInputError","message"],"mappings":";;;;;;;;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,iBAAOC,KAAP,EAA8CC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,YAAAA,gBAFqB,GAEFC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmBL,KAAnB,CAFE;AAAA;AAAA,mBAGrBE,gBAAgB,CAACI,QAAjB,CAA0BL,IAA1B,CAHqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAKrB,IAAIM,8BAAJ,CAAmB,YAAMC,OAAzB,CALqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfT,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["\nimport * as yup from 'yup';\nimport { UserInputError } from '../errors/UserInputError';\n\nexport const validatePayload = async (rules: yup.ObjectSchemaDefinition<{}>, data: object) => {\n  try {\n    const validationSchema = yup.object().shape(rules);\n    await validationSchema.validate(data);\n  } catch (error) {\n    throw new UserInputError(error.message);\n  }\n};\n"],"file":"validatePayload.js"}