{"version":3,"sources":["../../../../../../src/server/modules/auth/aggregates/users/users.repository.ts"],"names":["UsersSchema","mongoose","Schema","_id","String","email","givenName","familyName","fullName","phoneNo","address","description","avatarUrl","province","dob","Number","gender","loginDetail","Object","roles","type","Types","ObjectId","ref","default","completeSignUp","Boolean","isActive","followBy","counterFollow","index","UsersModel","model","userRepository","getAll","find","exec","findById","id","populate","findOne","query","filters","search","push","$text","$search","length","$all","sortBy","first","before","after","count","_query","NotImplementedError","create","payload","newUser","save","update","findByIdAndUpdate","$set","del","follow","findOneAndUpdate","$push","followerId","new","unfollow","$pull","findFollowByUser","checkFollow","$and","userId","followId","ensureIndexes","increaseFollowCount","$inc","decreaseFollowCount"],"mappings":"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","sourcesContent":["import { addDeletableSchema, addAuditableSchema, NotImplementedError, execCursorPaging } from '@app/core';\nimport mongoose from 'mongoose';\nimport { UsersRepository } from './interfaces/UsersRepository';\n\nexport const UsersSchema = new mongoose.Schema(addAuditableSchema(addDeletableSchema({\n  _id: String,\n  email: String,\n  givenName: String,\n  familyName: String,\n  fullName: String,\n  phoneNo: String,\n  address: String,\n  description: String,\n  avatarUrl: String,\n  province: String,\n  dob: Number,\n  gender: String,\n  loginDetail: Object,\n  roles: {\n    type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Role' }],\n    default: [],\n  },\n  completeSignUp: {\n    type: Boolean,\n    default: false,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n  followBy: {\n    type: [{ type: String, ref: 'User' }],\n    default: [],\n  },\n  counterFollow: {\n    type: Number,\n    default: 0,\n  },\n})));\nUsersSchema.index({ email: 'text', fullName: 'text', phoneNo: 'text' });\nexport const UsersModel = mongoose.model('User', UsersSchema);\n\nexport const userRepository: UsersRepository = {\n  getAll: async () => {\n    return await UsersModel.find().exec() as any;\n  },\n  findById: async (id) => {\n    return await UsersModel.findById(id)\n      .populate('roles', '_id name')\n      .exec() as any;\n  },\n  findOne: async (query: { email?: string; phoneNo?: string }) => {\n    if (query.email) {\n      return await UsersModel.findOne({ email: query.email }).exec() as any;\n    }\n    if (query.phoneNo) {\n      return await UsersModel.findOne({ phoneNo: query.phoneNo }).exec() as any;\n    }\n  },\n  find: async (query) => {\n    const filters: any[] = [];\n    if (query.search) {\n      filters.push({ $text: { $search: `\"${query.search}\"` } });\n    }\n    if (query.roles && query.roles.length > 0) {\n      filters.push({\n        roles: { $all: query.roles },\n      });\n    }\n\n    return await execCursorPaging(\n      UsersModel,\n      filters,\n      query.sortBy,\n      Number(query.first),\n      ['roles'],\n      query.before,\n      query.after,\n    );\n  },\n  count: async (_query) => {\n    throw new NotImplementedError();\n  },\n  create: async (payload) => {\n    const newUser = new UsersModel({\n      ...payload,\n      _id: payload.id,\n    });\n    await newUser.save();\n    return newUser.id;\n  },\n  update: async (payload) => {\n    await UsersModel.findByIdAndUpdate(payload.id, { $set: payload }).exec();\n  },\n  del: async (_id): Promise<void> => {\n    throw new NotImplementedError();\n  },\n  follow: async (payload) => {\n    await UsersModel.findOneAndUpdate({ _id: payload.id }, { $push: { followBy: payload.followerId } }, { new: true }).exec();\n  },\n  unfollow: async (payload) => {\n    await UsersModel.findOneAndUpdate({ _id: payload.id }, { $pull: { followBy: payload.followerId } }, { new: true }).exec();\n  },\n  findFollowByUser: async (query) => {\n    const filters: any[] = [{ followBy: query.id }];\n    return await execCursorPaging(UsersModel, filters, query.sortBy, Number(query.first), ['users'], query.before, query.after);\n  },\n  checkFollow: async (payload) => {\n    return await UsersModel.findOne({ $and: [{ _id: payload.userId }, { followBy: payload.followId }] });\n  },\n  ensureIndexes: async () => {\n    await UsersModel.ensureIndexes({ email: 'text', fullName: 'text', phoneNo: 'text' });\n  },\n  increaseFollowCount: async (id: string) => {\n    await UsersModel.findByIdAndUpdate(id, {$inc: {counterFollow: 1}}).exec();\n  },\n  decreaseFollowCount: async (id: string) => {\n    await UsersModel.findByIdAndUpdate(id, {$inc: {counterFollow: -1}}).exec();\n  },\n};\n"],"file":"users.repository.js"}