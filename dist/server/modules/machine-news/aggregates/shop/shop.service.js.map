{"version":3,"sources":["../../../../../../src/server/modules/machine-news/aggregates/shop/shop.service.ts"],"names":["domainNameRegex","shopService","setup","app","path","get","req","res","shopRepository","findOne","domain","params","shopDomain","shopInfo","shopInfoJSON","JSON","parse","stringify","query","authId","shopId","_id","userId","followShopRepository","user","shop","followShop","isFollowing","Boolean","status","json","logger","error","end","message","owner","ownerId","find","repository","authUser","PERMISSIONS","SHOPS","VIEW","id","UserInputError","findById","NotAuthorizedError","create","data","CREATE","yup","string","required","matches","name","min","max","description","email","phone","expiryDate","number","introImages","array","of","logoImage","userRepository","ownerInfo","existedDomain","creationInfo","existedShop","patch","operation","payload","updateDetail","EntityNotFoundError","validationSchema","object","shape","address","geocode","lng","lat","validate","toString","EDIT","update","modificationInfo","activate","_data","isActive","deactivate","updateLogoImage","updateIntroImages","updateFollowCount","type","increaseFollowCount","decreaseFollowCount"],"mappings":"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","sourcesContent":["import { ShopService } from './interfaces/ShopService';\nimport { validateQuery, UserInputError, validatePayload, validateOperation, EntityNotFoundError, ensurePermission, hasPermission, isOwner, NotAuthorizedError, logger } from '@app/core';\nimport * as yup from 'yup';\nimport { PERMISSIONS } from '../../permissions';\nimport { shopRepository } from './shop.repository';\nimport { Request, Response } from 'express';\nimport { followShopRepository } from '../follows/follow-shops.repository';\n\nconst domainNameRegex = /^(?=.*[a-z0-9-])[a-z0-9-\\d]{3,}$/;\nconst shopService: ShopService = {\n  setup: (app, path) => {\n    app.get(path + '/get-by-domain/:shopDomain', async (req: Request, res: Response) => {\n      try {\n        const shopInfo = await shopRepository.findOne({ domain: req.params.shopDomain });\n        let shopInfoJSON = JSON.parse(JSON.stringify(shopInfo));\n        if (req.query.authId) {\n          const shopId = shopInfo._id;\n          const userId = req.query.authId;\n          const followShop = await followShopRepository.findOne({\n            user: userId,\n            shop: shopId,\n          });\n\n          shopInfoJSON = {\n            ...shopInfoJSON,\n            isFollowing: Boolean(followShop),\n          };\n        }\n\n        res.status(200).json(shopInfoJSON);\n      } catch (error) {\n        logger.error(error);\n        res.status(error.status || 500).end(error.message || 'Internal server error');\n      }\n    });\n    app.get(path + '/get-by-owner/:ownerId', async (req: any, res: any) => {\n      try {\n        const shopInfo = await shopRepository.findOne({ owner: req.params.ownerId });\n        res.status(200).json(shopInfo);\n      } catch (error) {\n        logger.error(error);\n        res.status(error.status || 500).end(error.message || 'Internal server error');\n      }\n    });\n  },\n  find: async ({ query, repository, authUser }) => {\n    // 1. authorize\n    if (!query.owner) {\n      ensurePermission(authUser, PERMISSIONS.SHOPS.VIEW);\n    }\n\n    // 2. validate\n    validateQuery(query);\n\n    // 3. do business logic\n\n    // 4. persist to db\n    return await repository.find(query);\n  },\n  get: async (id, params) => {\n    // 1. validate\n    if (!id) {\n      throw new UserInputError('Invalid id');\n    }\n\n    // 2. authorize\n    const shopInfo = await params.repository.findById(id);\n    if (!hasPermission(params.authUser, PERMISSIONS.SHOPS.VIEW) && !isOwner(params.authUser, shopInfo.owner._id)) {\n      throw new NotAuthorizedError();\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    return shopInfo;\n  },\n  create: async (data, params) => {\n    // 1. authorize\n    if (hasPermission(params.authUser, PERMISSIONS.SHOPS.CREATE)) {\n      // 2. validate\n      await validatePayload({\n        owner: yup.string().required('Owner is required'),\n        domain: yup.string().matches(domainNameRegex, 'Domain name can only contain letters, numbers and hyphens').required('Domain name is required'),\n        name: yup.string().min(5, 'Too short').max(100, 'Too long').required('Shop name is required'),\n        // address: yup.string().min(20, 'Too short').max(500, 'Too long').required('Address is required'),\n        // geocode: yup.object().required('Geocode is required').shape({lng: yup.number(), lat: yup.number()}),\n        description: yup.string().min(20, 'Too short').max(2000, 'Too long').required('Description is required'),\n        email: yup.string().required('Email is required').email('Invalid email address'),\n        phone: yup.string().matches(/^([0-9]){4,15}$/, 'Invalid phone number').required('Phone number is required'),\n        expiryDate: yup.number().required('Expiry date is required'),\n        introImages: yup.array().of(yup.string()),\n        logoImage: yup.string(),\n      }, data);\n      const ownerInfo = await params.userRepository.findById(data.owner);\n      if (!ownerInfo) {\n        throw new UserInputError(`Owner didn't exist`);\n      }\n      const existedDomain = await params.repository.findOne({ domain: data.domain });\n      if (existedDomain) {\n        throw new UserInputError('Domain name already exist');\n      }\n\n      // 3. do business logic\n\n      // 4. persist to db\n      const id = await params.repository.create({\n        ...data,\n        ...params.creationInfo,\n      });\n\n      return {\n        id,\n      };\n    } else {\n      await validatePayload({\n        owner: yup.string().required('Owner is required'),\n        domain: yup.string().matches(domainNameRegex, 'Domain name can only contain letters, numbers and hyphens').required('Domain name is required'),\n        name: yup.string().min(5, 'Too short').max(100, 'Too long').required('Shop name is required'),\n        // address: yup.string().min(20, 'Too short').max(500, 'Too long').required('Address is required'),\n        // geocode: yup.object().required('Geocode is required').shape({lng: yup.number(), lat: yup.number()}),\n        description: yup.string().min(20, 'Too short').max(2000, 'Too long').required('Description is required'),\n        phone: yup.string().matches(/^([0-9]){4,15}$/, 'Invalid phone number').required('Phone number is required'),\n        email: yup.string().required('Email is required').email('Invalid email address'),\n        expiryDate: yup.number().required('Expiry date is required'),\n        introImages: yup.array().of(yup.string()),\n        logoImage: yup.string(),\n      }, data);\n      const existedShop = await params.repository.findOne({ owner: data.owner });\n      if (existedShop) {\n        throw new NotAuthorizedError();\n      }\n      if (data.owner !== params.authUser!.id) {\n        throw new NotAuthorizedError();\n      }\n      const existedDomain = await params.repository.findOne({ domain: data.domain });\n      if (existedDomain) {\n        throw new UserInputError('Domain name already exist');\n      }\n\n      // 3. do business logic\n\n      // 4. persist to db\n      const id = await params.repository.create({\n        ...data,\n        ...params.creationInfo,\n      });\n\n      return {\n        id,\n      };\n    }\n  },\n  patch: async (id, data, params) => {\n    validateOperation(data.operation, ['updateDetail', 'activate', 'deactivate', 'updateIntroImages', 'updateLogoImage']);\n    await shopService[data.operation](id, data.payload, params);\n    return {};\n  },\n  updateDetail: async (id, data, params) => {\n    // 1. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedShop = await params.repository.findById(id);\n    if (!existedShop) {\n      throw new EntityNotFoundError('Shop');\n    }\n    const validationSchema = yup.object().shape({\n      domain: yup.string().matches(domainNameRegex, 'Domain name can only contain letters, numbers and hyphens'),\n      name: yup.string().min(5, 'Too short').max(100, 'Too long'),\n      address: yup.string().min(20, 'Too short').max(500, 'Too long'),\n      geocode: yup.object().shape({ lng: yup.number(), lat: yup.number() }),\n      description: yup.string().min(20, 'Too short').max(2000, 'Too long'),\n      phone: yup.string().matches(/^([0-9]){4,15}$/, 'Invalid phone number'),\n      email: yup.string().email('Invalid email address'),\n      expiryDate: yup.number(),\n      introImages: yup.array().of(yup.string()),\n      logoImage: yup.string(),\n    });\n    await validationSchema.validate(data);\n    if (data.domain) {\n      const existedDomain = await params.repository.findOne({ domain: data.domain });\n      if (existedDomain && existedDomain._id.toString() !== id) {\n        throw new UserInputError('Domain has been used');\n      }\n    }\n\n    // 2. authorize\n    if (!hasPermission(params.authUser, PERMISSIONS.SHOPS.EDIT) && !isOwner(params.authUser, existedShop.owner._id)) {\n      throw new NotAuthorizedError();\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    await params.repository.update({\n      id,\n      ...data,\n      ...params.modificationInfo,\n    });\n    return {};\n  },\n  activate: async (id, _data, params) => {\n    // 1. authorize\n    ensurePermission(params.authUser, PERMISSIONS.SHOPS.EDIT);\n\n    // 2. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedShop = await params.repository.findById(id);\n    if (!existedShop) {\n      throw new EntityNotFoundError('Shop');\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    await params.repository.update({\n      id,\n      isActive: true,\n      ...params.modificationInfo,\n    });\n\n    return {};\n  },\n  deactivate: async (id, _data, params) => {\n    // 1. authorize\n    ensurePermission(params.authUser, PERMISSIONS.SHOPS.EDIT);\n\n    // 2. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedShop = await params.repository.findById(id);\n    if (!existedShop) {\n      throw new EntityNotFoundError('Shop');\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    await params.repository.update({\n      id,\n      isActive: false,\n      ...params.modificationInfo,\n    });\n\n    return {};\n  },\n  updateLogoImage: async (id, data, params) => {\n    // 1. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedShop = await params.repository.findById(id);\n    if (!existedShop) {\n      throw new EntityNotFoundError('Shop');\n    }\n\n    // 2. authorize\n    if (!hasPermission(params.authUser, PERMISSIONS.SHOPS.EDIT) && !isOwner(params.authUser, existedShop.owner._id)) {\n      throw new NotAuthorizedError();\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    await params.repository.update({\n      id,\n      logoImage: data.logoImage,\n      ...params.modificationInfo,\n    });\n\n    return {};\n  },\n  updateIntroImages: async (id, data, params) => {\n    // 1. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedShop = await params.repository.findById(id);\n    if (!existedShop) {\n      throw new EntityNotFoundError('Shop');\n    }\n\n    // 2. authorize\n    if (!hasPermission(params.authUser, PERMISSIONS.SHOPS.EDIT) && !isOwner(params.authUser, existedShop.owner._id)) {\n      throw new NotAuthorizedError();\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    await params.repository.update({\n      id,\n      introImages: data.introImages,\n      ...params.modificationInfo,\n    });\n\n    return {};\n  },\n  updateFollowCount: async (shopId, type) => {\n    // 1. authorize\n\n    // 2. validate\n    if (!shopId || !type) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedShop = await shopRepository.findById(shopId);\n    if (!existedShop) {\n      throw new EntityNotFoundError('News');\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    type === 'follow' ? await shopRepository.increaseFollowCount(shopId) : await shopRepository.decreaseFollowCount(shopId);\n  },\n};\n\nexport default shopService;\n"],"file":"shop.service.js"}