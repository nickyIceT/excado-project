{"version":3,"sources":["../../../../../../../src/server/modules/machine-news/aggregates/brands/middlewares/readFromCache.middleware.ts"],"names":["readFromCache","req","res","next","key","url","getCacheValue","apiCache","get","value","status","json"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AAEO,IAAMA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,iBAAOC,GAAP,EAAiBC,GAAjB,EAA2BC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,GADqB,GACfH,GAAG,CAACI,GADW;AAErBC,YAAAA,aAFqB,GAEL,qBAAUC,eAASC,GAAnB,CAFK;AAAA;AAAA,mBAGPF,aAAa,CAACF,GAAD,CAHN;;AAAA;AAGrBK,YAAAA,KAHqB;;AAK3B,gBAAIA,KAAJ,EAAW;AACTP,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AACD,aAFD,MAEO;AACLN,cAAAA,IAAI;AACL;;AAT0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbH,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import { promisify } from 'util';\nimport { apiCache } from '@app/core';\n\nexport const readFromCache = async (req: any, res: any, next: any) => {\n  const key = req.url;\n  const getCacheValue = promisify(apiCache.get);\n  const value = await getCacheValue(key);\n\n  if (value) {\n    res.status(200).json(value);\n  } else {\n    next();\n  }\n};\n"],"file":"readFromCache.middleware.js"}