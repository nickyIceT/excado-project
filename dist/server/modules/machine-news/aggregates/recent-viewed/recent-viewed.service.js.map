{"version":3,"sources":["../../../../../../src/server/modules/machine-news/aggregates/recent-viewed/recent-viewed.service.ts"],"names":["recentViewedKey","recentViewedService","find","params","query","filter","user","authUser","id","uuid","cookies","repository","data","create","validationSchema","yup","object","shape","news","string","required","validate","newsRepository","findById","existedNews","UserInputError","update","createdAt","Date","getTime","lastModifiedAt"],"mappings":";;;;;;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAG,eAAxB;AACA,IAAMC,mBAAwC,GAAG;AAC/CC,EAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;AAEA;AACA,uCAAcA,MAAM,CAACC,KAArB,EAJI,CAMJ;AAEA;;AACMC,cAAAA,MATF,qBAUCF,MAAM,CAACC,KAVR;AAWFE,gBAAAA,IAAI,EAAEH,MAAM,CAACI,QAAP,GAAkBJ,MAAM,CAACI,QAAP,CAAgBC,EAAlC,GAAuC;AAX3C;;AAaJ,kBAAI,CAACH,MAAM,CAACC,IAAZ,EAAkB;AAChBD,gBAAAA,MAAM,CAACI,IAAP,GAAcN,MAAM,CAACO,OAAP,CAAeV,eAAf,CAAd;AACD;;AAfG,oBAiBGK,MAAM,CAACI,IAAP,IAAeJ,MAAM,CAACC,IAjBzB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAiBsCH,MAAM,CAACQ,UAAP,CAAkBT,IAAlB,CAAuBG,MAAvB,CAjBtC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,4BAiB8E;AAACO,gBAAAA,IAAI,EAAE;AAAP,eAjB9E;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAD2C;AAoB/CC,EAAAA,MAAM;AAAA;AAAA;AAAA,8BAAE,kBAAOD,IAAP,EAAaT,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACN;AAEA;AACMW,cAAAA,gBAJA,GAImBC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,gBAAAA,IAAI,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB;AADoC,eAAnB,CAJnB;AAAA;AAAA,qBAOAN,gBAAgB,CAACO,QAAjB,CAA0BT,IAA1B,CAPA;;AAAA;AAAA;AAAA,qBAQqBT,MAAD,CAAgBmB,cAAhB,CAA+BC,QAA/B,CAAwCX,IAAI,CAACM,IAA7C,CARpB;;AAAA;AAQAM,cAAAA,WARA;;AAAA,kBASDA,WATC;AAAA;AAAA;AAAA;;AAAA,oBAUE,IAAIC,oBAAJ,CAAmB,gBAAnB,CAVF;;AAAA;AAAA,oBAcFtB,MAAM,CAACI,QAAP,IAAmBJ,MAAM,CAACI,QAAP,CAAgBC,EAdjC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAgBEL,MAAM,CAACQ,UAAP,CAAkBe,MAAlB,CAAyB;AAC7BR,gBAAAA,IAAI,EAAEN,IAAI,CAACM,IADkB;AAE7BZ,gBAAAA,IAAI,EAAEH,MAAM,CAACI,QAAP,CAAgBC,EAFO;AAG7BmB,gBAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAHkB;AAI7BC,gBAAAA,cAAc,EAAE,IAAIF,IAAJ,GAAWC,OAAX;AAJa,eAAzB,CAhBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAwBE1B,MAAM,CAACQ,UAAP,CAAkBe,MAAlB,CAAyB;AAC7BR,gBAAAA,IAAI,EAAEN,IAAI,CAACM,IADkB;AAE7BT,gBAAAA,IAAI,EAAEN,MAAM,CAACO,OAAP,CAAeV,eAAf,CAFuB;AAG7B2B,gBAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAHkB;AAI7BC,gBAAAA,cAAc,EAAE,IAAIF,IAAJ,GAAWC,OAAX;AAJa,eAAzB,CAxBF;;AAAA;AAAA,gDAgCC,EAhCD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AApByC,CAAjD;eAwDe5B,mB","sourcesContent":["import { RecentViewedService } from './interfaces/RecentViewedService';\nimport { validateQuery, UserInputError } from '@app/core';\nimport * as yup from 'yup';\n\nconst recentViewedKey = 'recent_viewed';\nconst recentViewedService: RecentViewedService = {\n  find: async (params) => {\n    // 1. authorize\n\n    // 2. validate\n    validateQuery(params.query);\n\n    // 3. do business logic\n\n    // 4. persist to db\n    const filter = {\n      ...params.query,\n      user: params.authUser ? params.authUser.id : '',\n    };\n    if (!filter.user) {\n      filter.uuid = params.cookies[recentViewedKey];\n    }\n\n    return filter.uuid || filter.user ? await params.repository.find(filter as any) : {data: []};\n  },\n  create: async (data, params) => {\n    // 1. authorize\n\n    // 2. validate\n    const validationSchema = yup.object().shape({\n      news: yup.string().required('News is required'),\n    });\n    await validationSchema.validate(data);\n    const existedNews = await (params as any).newsRepository.findById(data.news);\n    if (!existedNews) {\n      throw new UserInputError('News not found');\n    }\n\n    // 3. do business logic\n    if (params.authUser && params.authUser.id) {\n      // 4. persist to db\n      await params.repository.update({\n        news: data.news,\n        user: params.authUser.id,\n        createdAt: new Date().getTime(),\n        lastModifiedAt: new Date().getTime(),\n      });\n    } else {\n      // 4. persist to db\n      await params.repository.update({\n        news: data.news,\n        uuid: params.cookies[recentViewedKey],\n        createdAt: new Date().getTime(),\n        lastModifiedAt: new Date().getTime(),\n      });\n    }\n\n    return {} as any;\n  },\n};\n\nexport default recentViewedService;\n"],"file":"recent-viewed.service.js"}