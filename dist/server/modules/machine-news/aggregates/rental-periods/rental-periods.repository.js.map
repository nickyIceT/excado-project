{"version":3,"sources":["../../../../../../src/server/modules/machine-news/aggregates/rental-periods/rental-periods.repository.ts"],"names":["RentalPeriodSchema","mongoose","Schema","min","Number","max","RentalPeriodModel","model","rentalPeriodRepository","findAll","find","exec","NotImplementedError","findById","id","create","payload","newRentalPeriod","save","data","_id","update","findByIdAndUpdate","$set","del","ensureIndexes","findOne","count"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\nimport { addAuditableSchema, addDeletableSchema, NotImplementedError } from '@app/core';\nimport { RentalPeriodRepository } from './interfaces/RentalPeriodRepository';\n\nexport const RentalPeriodSchema = new mongoose.Schema(addAuditableSchema(addDeletableSchema({\n  min: Number,\n  max: Number,\n})));\nexport const RentalPeriodModel = mongoose.model('RentalPeriod', RentalPeriodSchema);\n\nexport const rentalPeriodRepository: RentalPeriodRepository = {\n  findAll: async () => {\n    return await RentalPeriodModel.find().exec() as any;\n  },\n  find: async () => {\n    throw new NotImplementedError();\n  },\n  findById: async (id) => {\n    return await RentalPeriodModel.findById(id).exec() as any;\n  },\n  create: async (payload) => {\n    const newRentalPeriod = new RentalPeriodModel(payload);\n    const data = await newRentalPeriod.save();\n    return data._id;\n  },\n  update: async (payload) => {\n    return await RentalPeriodModel.findByIdAndUpdate(payload.id, {$set: payload}).exec() as any;\n  },\n  del: async () => {\n    throw new NotImplementedError();\n  },\n  ensureIndexes: async () => {\n    throw new NotImplementedError();\n  },\n  findOne: async () => {\n    throw new NotImplementedError();\n  },\n  count: async () => {\n    throw new NotImplementedError();\n  },\n};\n"],"file":"rental-periods.repository.js"}