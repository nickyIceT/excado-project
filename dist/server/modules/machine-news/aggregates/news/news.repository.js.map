{"version":3,"sources":["../../../../../../src/server/modules/machine-news/aggregates/news/news.repository.ts"],"names":["NewsSchema","mongoose","Schema","title","type","String","es_type","elasticsearchTitle","elasticsearchKeywords","elasticsearchPrice","Number","elasticsearchCreatedAt","state","description","imageUrls","price","default","priceType","newsType","owner","ref","shop","Types","ObjectId","location","status","usedHours","serialNo","categoryId","brand","model","weight","weightRange","year","rentalPeriod","reviewedAt","Date","reviewedBy","followBy","elasticsearchID","counterView","counterFollow","createdDate","plugin","mongoosastic","esClient","populate","path","transform","data","_news","_id","createdAt","name","NewsModel","createMapping","err","mapping","console","log","stream","synchronize","countIndex","on","error","searchNews","query","Promise","resolve","reject","conditions","shouldConditions","sortCondition","mustNotConditions","searchAfterCondition","sortField","sortBy","split","sortOrder","invertSortOrder","push","range","lte","before","sortFieldValue","secondSortValue","after","keyword","queryKeyword","replace","match","nested","bool","must","match_phrase","otherNewsType","minPrice","maxPrice","gte","lt","search","from","size","first","should","must_not","sort","length","search_after","esSearch","hydrate","results","message","hits","map","item","_source","slice","reverse","undefined","Error","find","filters","$and","where","$gt","limit","exec","$lt","increaseView","id","findOneAndUpdate","$inc","new","findById","result","create","payload","newNews","save","update","$set","checkFollow","newsId","userId","findOne","follow","$push","followerId","unfollow","$pull","findFollowByNews","searchNewsHaveMostFollower","objectId","$or","shopId","queryMongo","$project","isDeleted","lastModifiedAt","$sort","otherSortBy","$match","$limit","$lookup","localField","foreignField","as","$unwind","aggregate","getNewsByOwnerId","ownerId","authUser","value","_doc","isFollowing","indexOf","del","NotImplementedError","ensureIndexes","_query","count","increaseFollowCount","findByIdAndUpdate","decreaseFollowCount","getStatisticsInfo","startDate","endDate","all","$gte","$lte","dayOfWeek","$dayOfWeek","date","timezone","$group","totalNews","$sum","hourOfDay","$hour","slug","logoImage","imageUrl","daysOfWeek","hoursOfDay","brands","categories","provinces","newsRepository"],"mappings":"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","sourcesContent":["import { addDeletableSchema, addAuditableSchema, FindResult, execCursorPaging, NotImplementedError, getElasticInstance, decodeBase64, encodeBase64, changeToSlug } from '@app/core';\nimport { News, FindNewsQuery, FindNewsESResult, FindFollowsQuery, SearchQuery, NewsRepository, MostFollowQuery, FindNewsDetail } from '@app/machine-news';\nimport mongoose from 'mongoose';\nimport mongoosastic from 'mongoosastic';\nimport { UpdateFollower } from '@app/auth';\nimport { GetNewsByOwnerIdQuery } from './interfaces/GetNewsByOwnerIdQuery';\nimport slugify from 'slugify';\n\nconst NewsSchema = new mongoose.Schema(addAuditableSchema(addDeletableSchema({\n  title: {\n    type: String,\n    es_type: 'text',\n  },\n  elasticsearchTitle: {\n    type: String,\n    es_type: 'keyword',\n  },\n  elasticsearchKeywords: {\n    type: String,\n    es_type: 'text',\n  },\n  elasticsearchPrice: {\n    type: Number,\n    es_type: 'keyword',\n  },\n  elasticsearchCreatedAt: {\n    type: Number,\n    es_type: 'keyword',\n  },\n  state: {\n    type: String,\n    es_type: 'text',\n  },\n  description: {\n    type: String,\n    es_type: 'text',\n  },\n  imageUrls: [{\n    type: String,\n    es_type: 'text',\n  }],\n  price: {\n    type: Number,\n    es_type: 'float',\n    default: 0,\n  },\n  priceType: {\n    type: String,\n    es_type: 'text',\n  },\n  newsType: {\n    type: String,\n    es_type: 'text',\n  },\n  owner: {\n    type: String,\n    ref: 'User',\n    es_type: 'nested',\n  },\n  shop: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Shop',\n    es_type: 'nested',\n  },\n  location: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Province',\n    es_type: 'nested',\n  },\n  status: {\n    type: String,\n    es_type: 'text',\n  },\n  usedHours: {\n    type: Number,\n    es_type: 'integer',\n    default: 0,\n  },\n  serialNo: {\n    type: String,\n    es_type: 'text',\n  },\n  categoryId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    es_type: 'nested',\n  },\n  type: {\n    type: String,\n    es_type: 'text',\n  },\n  brand: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Brand',\n    es_type: 'nested',\n  },\n  model: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Model',\n    es_type: 'nested',\n  },\n  weight: {\n    type: Number,\n    es_type: 'integer',\n    default: 0,\n  },\n  weightRange: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'WeightRange',\n    es_type: 'nested',\n  },\n  year: {\n    type: Number,\n    es_type: 'integer',\n    default: 0,\n  },\n  rentalPeriod: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'RentalPeriod',\n    es_type: 'nested',\n  },\n  reviewedAt: {\n    type: Date,\n    es_type: 'date',\n  },\n  reviewedBy: {\n    type: String,\n    es_type: 'text',\n  },\n  followBy: [{\n    type: String,\n    ref: 'User',\n    es_type: 'text',\n  }],\n  elasticsearchID: {\n    type: String,\n    es_type: 'keyword',\n  },\n  counterView: {\n    type: Number,\n    default: 0,\n  },\n  counterFollow: {\n    type: Number,\n    default: 0,\n  },\n  createdDate: {\n    type: Date,\n    default: new Date(),\n  },\n})));\ninterface INewsModel extends mongoose.Model<any> {\n  synchronize(criteria?: any): any;\n  search(query: any, options: any, callback: any): any;\n  esSearch(query: any, options: any, callback: any): any;\n  createMapping(options: any, callback?: any): any;\n}\n\n// Connect mongoose plugin Mongoosastic with ElasticSearch\nNewsSchema.plugin(mongoosastic, {\n  esClient: getElasticInstance(),\n  populate: [\n    {\n      path: 'owner',\n      model: 'User',\n    },\n    {\n      path: 'categoryId',\n      model: 'Category',\n    },\n    {\n      path: 'brand',\n      model: 'Brand',\n    },\n    {\n      path: 'location',\n      model: 'Province',\n    },\n    {\n      path: 'model',\n      model: 'Model',\n    },\n    {\n      path: 'shop',\n      model: 'Shop',\n    },\n    {\n      path: 'weightRange',\n      model: 'WeightRange',\n    },\n    {\n      path: 'rentalPeriod',\n      model: 'RentalPeriod',\n    },\n  ],\n  transform(data: any, _news: any) {\n    return {\n      ...data,\n      elasticsearchID: _news._id,\n      elasticsearchTitle: _news.title,\n      elasticsearchPrice: _news.price,\n      elasticsearchCreatedAt: _news.createdAt,\n      elasticsearchKeywords:\n        changeToSlug(_news.title ? _news.title : '')\n        + changeToSlug(_news.categoryId && _news.categoryId.name ? _news.categoryId.name : '')\n        + changeToSlug(_news.location && _news.location.name ? _news.location.name : '')\n        + changeToSlug(_news.model && _news.model.name ? _news.model.name : ''),\n    };\n  },\n});\nexport const NewsModel = mongoose.model<any, INewsModel>('News', NewsSchema);\nNewsModel.createMapping(\n  {\n    'settings': {\n      'number_of_shards': 1,\n      'analysis': {\n        'filter': {\n          'nGram_filter': {\n            'type': 'ngram',\n            'min_gram': 3,\n            'max_gram': 4,\n            'token_chars': [\n              'letter',\n              'digit',\n              'punctuation',\n              'whitespace',\n              'symbol',\n            ],\n          },\n        },\n        'analyzer': {\n          'default': {\n            'tokenizer': 'my_tokenizer',\n            'filter': [\n              'lowercase',\n              'asciifolding',\n              'nGram_filter',\n            ],\n          },\n        },\n        'tokenizer': {\n          'my_tokenizer': {\n            'type': 'ngram',\n            'min_gram': 3,\n            'max_gram': 4,\n            'token_chars': [\n              'letter',\n              'digit',\n              // 'whitespace',\n              'symbol',\n            ],\n          },\n        },\n      },\n    },\n  },\n  (err: any, mapping: any) => {\n    if (err) {\n      // tslint:disable-next-line:no-console\n      console.log('error creating mapping', err);\n    } else {\n      // tslint:disable-next-line:no-console\n      console.log('Mapping Created', mapping);\n      // Synchronize records from mongodb to elasticsearch index\n      // tslint:disable-next-line\n      var stream = NewsModel.synchronize();\n      // tslint:disable-next-line:no-var-keyword\n      var countIndex = 0;\n      stream.on('data', () => {\n        countIndex++;\n      });\n      stream.on('close', () => {\n        // tslint:disable-next-line:no-console\n        console.log('Indexed ' + countIndex + ' Documents');\n      });\n      stream.on('error', (error: any) => {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n      });\n    }\n  },\n);\n\nconst searchNews = (\n  query: SearchQuery,\n): Promise<FindNewsESResult> => {\n  try {\n    return new Promise((resolve, reject) => {\n      const conditions: any[] = [];\n      const shouldConditions: any[] = [];\n      const sortCondition: any[] = [];\n      const mustNotConditions: any[] = [];\n      const searchAfterCondition: any[] = [];\n      const sortField = query.sortBy.split('|')[0];\n      const sortOrder = query.sortBy.split('|')[1];\n      const invertSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n      // must not conditions\n      if (query.sortBy && sortField === 'year') {\n        mustNotConditions.push(\n          {\n            range: {\n              'year': { lte: 0 },\n            },\n          },\n        );\n      }\n      // search after condition\n      if (query.before) {\n        const { sortFieldValue, secondSortValue } = decodeBase64(query.before);\n        searchAfterCondition.push(\n          sortFieldValue,\n        );\n        searchAfterCondition.push(\n          secondSortValue,\n        );\n      } else if (query.after) {\n        const { sortFieldValue, secondSortValue } = decodeBase64(query.after);\n        searchAfterCondition.push(\n          sortFieldValue,\n        );\n        searchAfterCondition.push(\n          secondSortValue,\n        );\n      }\n      // sort\n      if (query.before) {\n        sortCondition.push(\n          {\n            [sortField]: invertSortOrder,\n          },\n        );\n        sortCondition.push(\n          {\n            elasticsearchID: invertSortOrder,\n          },\n        );\n      } else {\n        sortCondition.push(\n          {\n            [sortField]: sortOrder,\n          },\n        );\n        sortCondition.push(\n          {\n            elasticsearchID: sortOrder,\n          },\n        );\n      }\n      // condition\n      if (query.keyword) {\n        const queryKeyword = slugify(query.keyword).replace(/-/g, ' ');\n        conditions.push(\n          {\n            match: {\n              'elasticsearchKeywords':\n              {\n                query: queryKeyword,\n                'minimum_should_match': '100%',\n              },\n            },\n          },\n        );\n      }\n      if (query.location) {\n        conditions.push(\n          {\n            nested: {\n              path: 'location',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'location._id': query.location,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.model) {\n        conditions.push(\n          {\n            nested: {\n              path: 'model',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'model._id': query.model,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.newsType && !query.otherNewsType) {\n        conditions.push(\n          {\n            match_phrase: { 'newsType': query.newsType },\n          },\n        );\n      }\n      if (query.newsType && query.otherNewsType) {\n        shouldConditions.push(\n          { match_phrase: { 'newsType': query.newsType } },\n          { match_phrase: { 'newsType': query.otherNewsType } },\n        );\n      }\n      if (query.status) {\n        conditions.push(\n          {\n            match_phrase: { 'status': query.status },\n          },\n        );\n      }\n      if (query.brand) {\n        conditions.push(\n          {\n            nested: {\n              path: 'brand',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'brand._id': query.brand,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.categoryId) {\n        conditions.push(\n          {\n            nested: {\n              path: 'categoryId',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'categoryId._id': query.categoryId,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.weightRange) {\n        conditions.push(\n          {\n            nested: {\n              path: 'weightRange',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'weightRange._id': query.weightRange,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.owner) {\n        conditions.push(\n          {\n            nested: {\n              path: 'owner',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'owner._id': query.owner,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.priceType) {\n        conditions.push(\n          {\n            match_phrase: { 'priceType': query.priceType },\n          },\n        );\n      }\n      if (query.shop) {\n        conditions.push(\n          {\n            nested: {\n              path: 'shop',\n              query: {\n                bool: {\n                  must: [\n                    {\n                      match_phrase: {\n                        'shop._id': query.shop,\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        );\n      }\n      if (query.state) {\n        conditions.push(\n          {\n            match_phrase: { 'state': query.state },\n          },\n        );\n      }\n      if (query.type) {\n        conditions.push(\n          {\n            match_phrase: { 'type': query.type },\n          },\n        );\n      }\n      if (query.minPrice && query.maxPrice) {\n        conditions.push(\n          {\n            range: {\n              'price': {\n                gte: query.minPrice,\n                lt: query.maxPrice,\n              },\n            },\n          },\n        );\n      }\n      const search: any = {\n        from: 0,\n        size: Number(Number(query.first)) + 1,\n        query: {\n          bool: {\n            must: conditions,\n            should: shouldConditions,\n            must_not: mustNotConditions,\n          },\n        },\n        sort: sortCondition,\n      };\n      if (searchAfterCondition.length > 0) {\n        search.search_after = searchAfterCondition;\n      }\n      NewsModel.esSearch(\n        search,\n        {\n          hydrate: false,\n        },\n        (err: any, results: any) => {\n          if (err) {\n            // tslint:disable-next-line:no-console\n            console.log(err);\n            reject(err.message || 'Internal server error.');\n          }\n          const data = results.hits.hits.map((item: any) => {\n            return {\n              ...item._source,\n              _id: item._id,\n            };\n          });\n          if (query.before) {\n            resolve(\n              {\n                data: data.length === Number(query.first) + 1 ? data.slice(0, Number(query.first)).reverse() : [...data].reverse(),\n                before: data.length === Number(query.first) + 1 ? encodeBase64({\n                  sortFieldValue: data[Number(query.first) - 1][sortField],\n                  secondSortValue: data[Number(query.first) - 1]._id,\n                }) : undefined,\n                after: encodeBase64({\n                  sortFieldValue: data[0][sortField],\n                  secondSortValue: data[0]._id,\n                }),\n              } as any,\n            );\n          }\n          else {\n            resolve(\n              {\n                data: data.length === Number(query.first) + 1 ? data.slice(0, Number(query.first)) : data,\n                before: query.after ? encodeBase64({ sortFieldValue: data[0][sortField], secondSortValue: data[0]._id }) : undefined,\n                after: data.length === Number(query.first) + 1\n                  ? encodeBase64({\n                    sortFieldValue: data[Number(query.first) - 1][sortField], secondSortValue\n                      : data[Number(query.first) - 1]._id,\n                  }) : undefined,\n              } as any,\n            );\n          }\n        },\n      );\n    });\n  } catch (err) {\n    throw new Error(err.message || 'Internal server error.');\n  }\n};\n\nconst find = async (query: FindNewsQuery): Promise<FindResult<News>> => {\n  const filters: any[] = [];\n\n  if (query.before) {\n    const data = await NewsModel.find(filters.length > 0 ? { $and: filters } : {})\n      .sort({ [query.sortBy]: 1 })\n      .where({ _id: { $gt: query.before } })\n      .limit(Number(query.first) + 1)\n      .exec() as any;\n\n    return {\n      data: data.length > Number(query.first) ? data.slice(0, Number(query.first) - 1).reverse() : [...data].reverse(),\n      before: data.length > Number(query.first) ? data[Number(query.first) - 1]._id : undefined,\n      after: data[0]._id,\n    };\n  } else {\n    const data = await NewsModel.find(filters.length > 0 ? { $and: filters } : {})\n      .sort({ [query.sortBy]: -1 })\n      .where({ _id: { $lt: query.before } })\n      .limit(Number(Number(query.first)) + 1)\n      .exec() as any;\n\n    return {\n      data: data.length > Number(query.first) ? data.slice(0, Number(query.first)) : data,\n      before: query.after ? data[0]._id : undefined,\n      after: data.length > Number(query.first) ? data[Number(query.first) - 1]._id : undefined,\n    };\n  }\n};\n\nconst increaseView = async (id: string): Promise<void> => {\n  await NewsModel.findOneAndUpdate({ _id: id }, { $inc: { counterView: 1 } }, { new: true }).exec();\n};\n\nconst findById = async (id: string): Promise<News> => {\n  const result = await NewsModel.findById(id)\n    .populate('brand')\n    .populate('categoryId')\n    .populate('location')\n    .populate('model')\n    .populate('owner')\n    .populate('shop')\n    .populate('weightRange')\n    .populate('rentalPeriod')\n    .exec();\n  return result;\n};\n\nconst create = async (payload: Partial<News>): Promise<string> => {\n  const newNews = new NewsModel(payload);\n  const data = await newNews.save();\n  return data._id;\n};\n\nconst update = async (payload: any): Promise<void> => {\n  // tslint:disable-next-line:no-console\n  console.log(payload);\n  await NewsModel.findOneAndUpdate({ _id: payload._id }, { $set: payload }, { new: true }).exec();\n};\n\nconst checkFollow = async (newsId: string, userId: string): Promise<any> => {\n  const data = await NewsModel.findOne({ $and: [{ _id: newsId }, { followBy: userId }] }).exec();\n  return data;\n};\n\nconst follow = async (payload: UpdateFollower): Promise<void> => {\n  await NewsModel.findOneAndUpdate({ _id: payload.id }, { $push: { followBy: payload.followerId }, $inc: { counterFollow: 1 } }, { new: true }).exec();\n};\n\nconst unfollow = async (payload: UpdateFollower): Promise<void> => {\n  await NewsModel.findOneAndUpdate({ _id: payload.id }, { $pull: { followBy: payload.followerId }, $inc: { counterFollow: -1 } }, { new: true }).exec();\n};\n\nconst findFollowByNews = async (query: FindFollowsQuery): Promise<FindResult<News>> => {\n  const filters: any[] = [{ followBy: query.id, newsType: query.newsType }];\n  return await execCursorPaging(NewsModel, filters, query.sortBy, Number(query.first), ['brand', 'categoryId', 'location', 'model', 'owner', 'shop'], query.before, query.after);\n};\n\nconst searchNewsHaveMostFollower = async (query: MostFollowQuery): Promise<any> => {\n  const objectId = mongoose.Types.ObjectId;\n  const sortOrder = query.before ? 1 : -1;\n  let filters = {};\n  if (query.before) {\n    const sortFieldValue = query.before ? Number((decodeBase64(query.before) as any).sortFieldValue) : '';\n    const secondSortValue = query.before ? objectId((decodeBase64(query.before) as any).secondSortValue) : '';\n    filters = {\n      $or: [\n        { counterFollow: sortOrder === 1 ? { $gt: sortFieldValue } : { $lt: sortFieldValue } },\n        {\n          $and: [\n            { counterFollow: sortFieldValue },\n            { _id: sortOrder === 1 ? { $gt: secondSortValue } : { $lt: secondSortValue } },\n          ],\n        },\n      ],\n    };\n  } else if (query.after) {\n    const sortFieldValue = query.after ? (decodeBase64(query.after) as any).sortFieldValue : '';\n    const secondSortValue = query.after ? objectId((decodeBase64(query.after) as any).secondSortValue) : '';\n    filters = {\n      $or: [\n        { counterFollow: sortOrder === 1 ? { $gt: sortFieldValue } : { $lt: sortFieldValue } },\n        {\n          $and: [\n            { counterFollow: sortFieldValue },\n            { _id: sortOrder === 1 ? { $gt: secondSortValue } : { $lt: secondSortValue } },\n          ],\n        },\n      ],\n    };\n  } else if (query.shopId) {\n    filters = {\n      shop: objectId(query.shopId),\n    };\n  }\n  const queryMongo = [\n    {\n      $project: {\n        _id: 1,\n        isDeleted: 1,\n        lastModifiedAt: 1,\n        title: 1,\n        imageUrls: 1,\n        newsType: 1,\n        state: 1,\n        followBy: 1,\n        counterFollow: 1,\n        shop: 1,\n        owner: 1,\n        categoryId: 1,\n        model: 1,\n        brand: 1,\n        location: 1,\n        counterView: 1,\n      },\n    },\n    { $sort: { [query.sortBy]: sortOrder, [query.otherSortBy]: sortOrder } },\n    { $match: filters },\n    { $limit: Number(query.first) + 1 },\n    { $lookup: { from: 'categories', localField: 'categoryId', foreignField: '_id', as: 'categoryId' } },\n    { $lookup: { from: 'brands', localField: 'brand', foreignField: '_id', as: 'brand' } },\n    { $lookup: { from: 'models', localField: 'model', foreignField: '_id', as: 'model' } },\n    { $lookup: { from: 'users', localField: 'owner', foreignField: '_id', as: 'owner' } },\n    { $lookup: { from: 'provinces', localField: 'location', foreignField: '_id', as: 'location' } },\n    { $unwind: '$categoryId' },\n    { $unwind: '$brand' },\n    { $unwind: '$model' },\n    { $unwind: '$owner' },\n    { $unwind: '$location' },\n  ];\n  const data = await NewsModel.aggregate(queryMongo);\n  if (query.before) {\n    const result = {\n      data: data.length === Number(query.first) + 1 ? data.slice(0, Number(query.first)).reverse() : [...data].reverse(),\n      before: data.length === Number(query.first) + 1 ? encodeBase64({\n        sortFieldValue: data[Number(query.first) - 1]['counterFollow'],\n        secondSortValue: data[Number(query.first) - 1]._id,\n      }) : undefined,\n      after: encodeBase64({\n        sortFieldValue: data[0]['counterFollow'],\n        secondSortValue: data[0]._id,\n      }),\n    };\n\n    return result;\n  } else {\n    const result = {\n      data: data.length === Number(query.first) + 1 ? data.slice(0, Number(query.first)) : data,\n      before: query.after ? encodeBase64({ sortFieldValue: data[0]['counterFollow'], secondSortValue: data[0]._id }) : undefined,\n      after: data.length === Number(query.first) + 1 ? encodeBase64({ sortFieldValue: data[Number(query.first) - 1]['counterFollow'], secondSortValue: data[Number(query.first) - 1]._id }) : undefined,\n    };\n\n    return result;\n  }\n};\n\nconst getNewsByOwnerId = async (query: GetNewsByOwnerIdQuery): Promise<FindResult<FindNewsDetail>> => {\n  const filters: any[] = [{ status: query.status, owner: query.ownerId }];\n  const result = await execCursorPaging(NewsModel, filters, query.sortBy, Number(query.first), ['brand', 'categoryId', 'location', 'model', 'owner', 'shop'], query.before, query.after);\n  if (!query.authUser) {\n    return {\n      ...result,\n      data: result.data.map((value: any) => {\n        return {\n          ...value._doc,\n          followBy: [],\n          isFollowing: false,\n        };\n      }),\n    };\n  }\n  else {\n    return {\n      ...result,\n      data: result.data.map((value: any) => {\n        if (value.followBy.indexOf(query.authUser.id) !== -1) {\n          return {\n            ...value._doc,\n            followBy: [],\n            isFollowing: true,\n          };\n        } else {\n          return {\n            ...value._doc,\n            followBy: [],\n            isFollowing: false,\n          };\n        }\n      }),\n    };\n  }\n};\n\nconst del = async (_id: string): Promise<void> => {\n  throw new NotImplementedError();\n};\n\nconst ensureIndexes = async () => {\n  await NewsModel.ensureIndexes({ brand: 1 });\n  await NewsModel.ensureIndexes({ brand: 1, categoryId: 1, model: 1 });\n};\n\nconst findOne = async (_query: any): Promise<News> => {\n  throw new NotImplementedError();\n};\n\nconst count = async (): Promise<number> => {\n  throw new NotImplementedError();\n};\n\nconst increaseFollowCount = async (id: string) => {\n  await NewsModel.findByIdAndUpdate(id, { $inc: { counterFollow: 1 } }).exec();\n};\n\nconst decreaseFollowCount = async (id: string) => {\n  await NewsModel.findByIdAndUpdate(id, { $inc: { counterFollow: -1 } }).exec();\n};\n\nconst getStatisticsInfo = async (startDate: string, endDate: string) => {\n  const [daysOfWeek, hoursOfDay, brands, categories, provinces]: any = await Promise.all([\n    NewsModel.aggregate([\n      { $match: { createdDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $project: { dayOfWeek: { $dayOfWeek: { date: '$createdDate', timezone: '+07:00' } } } },\n      { $group: { _id: '$dayOfWeek', totalNews: { $sum: 1 } } },\n    ]),\n    NewsModel.aggregate([\n      { $match: { createdDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $project: { hourOfDay: { $hour: { date: '$createdDate', timezone: '+07:00' } } } },\n      { $group: { _id: '$hourOfDay', totalNews: { $sum: 1 } } },\n    ]),\n    NewsModel.aggregate([\n      { $match: { createdDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $group: { _id: '$brand', totalNews: { $sum: 1 } } },\n      { $lookup: { from: 'brands', localField: '_id', foreignField: '_id', as: 'brand' } },\n      { $unwind: '$brand' },\n      { $project: { _id: 1, totalNews: 1, slug: '$brand.slug', name: '$brand.name', logoImage: '$brand.logoImage', createdAt: '$brand.createdAt' } },\n    ]),\n    NewsModel.aggregate([\n      { $match: { createdDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $group: { _id: '$categoryId', totalNews: { $sum: 1 } } },\n      { $lookup: { from: 'categories', localField: '_id', foreignField: '_id', as: 'category' } },\n      { $unwind: '$category' },\n      { $project: { _id: 1, totalNews: 1, slug: '$category.slug', name: '$category.name', imageUrl: '$category.imageUrl', createdAt: '$category.createdAt' } },\n    ]),\n    NewsModel.aggregate([\n      { $match: { createdDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $group: { _id: '$location', totalNews: { $sum: 1 } } },\n      { $lookup: { from: 'provinces', localField: '_id', foreignField: '_id', as: 'location' } },\n      { $unwind: '$location' },\n      { $project: { _id: 1, totalNews: 1, slug: '$location.slug', name: '$location.name', createdAt: '$location.createdAt' } },\n    ]),\n  ] as any);\n\n  return {\n    daysOfWeek,\n    hoursOfDay,\n    brands,\n    categories,\n    provinces,\n  };\n};\n\nexport const newsRepository: NewsRepository = {\n  getStatisticsInfo,\n  find,\n  findById,\n  create,\n  update,\n  follow,\n  unfollow,\n  searchNews,\n  findFollowByNews,\n  del,\n  ensureIndexes,\n  findOne,\n  count,\n  checkFollow,\n  searchNewsHaveMostFollower,\n  getNewsByOwnerId,\n  increaseView,\n  increaseFollowCount,\n  decreaseFollowCount,\n};\n"],"file":"news.repository.js"}