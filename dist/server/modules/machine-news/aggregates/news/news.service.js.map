{"version":3,"sources":["../../../../../../src/server/modules/machine-news/aggregates/news/news.service.ts"],"names":["newsService","setup","app","path","get","getByOwner","getStatisticsInfo","find","params","authUser","PERMISSIONS","NEWS","VIEW","query","newsRepository","id","_params","UserInputError","increaseView","findById","create","data","validationSchema","yup","object","shape","title","string","required","state","newsType","priceType","location","owner","status","usedHours","number","serialNo","categoryId","type","brand","model","weight","year","shop","weightRange","rentalPeriod","validate","shopRepository","existedShop","imageUrls","length","promises","map","val","imageService","moveFilesToUploadFolder","url","Promise","all","deleteByUrls","creationInfo","lastDot","lastIndexOf","fileHash","slice","trim","ids","createdDate","Date","createdAt","patch","operation","payload","updatePending","Error","existedNews","EntityNotFoundError","filter","indexOf","update","indexOfSrc","modificationInfo","updateFollowCount","newsId","increaseFollowCount","decreaseFollowCount","req","res","idToken","headers","authorization","admin","auth","verifyIdToken","decodedIdToken","uid","roles","permissions","getNewsByOwnerId","ownerId","first","before","after","sortBy","json","logger","error","end","message","cookies","token","NotAuthorizedError","roleRepository","findOne","name","adminRole","String","_id","startDate","endDate","getTime","result"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,WAAwB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,eAACC,GAAD,EAAwBC,IAAxB,EAAyC;AAC9CD,IAAAA,GAAG,CAACE,GAAJ,CAAQD,IAAI,GAAG,wBAAf,EAAyCH,WAAW,CAACK,UAArD;AACAH,IAAAA,GAAG,CAACE,GAAJ,CAAQD,IAAI,GAAG,kBAAf,EAAmCH,WAAW,CAACM,iBAA/C;AACD,GAJ8B;AAK/BC,EAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACJ;AACA,0CAAiBA,MAAM,CAACC,QAAxB,EAAkCC,cAAYC,IAAZ,CAAiBC,IAAnD,EAFI,CAIJ;;AACA,uCAAcJ,MAAM,CAACK,KAArB,EALI,CAOJ;AAEA;;AATI;AAAA,qBAUSC,iBAAeP,IAAf,CAAoBC,MAAM,CAACK,KAA3B,CAVT;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAL2B;AAiB/BT,EAAAA,GAAG;AAAA;AAAA;AAAA,8BAAE,kBAAOW,EAAP,EAAWC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKED,EALF;AAAA;AAAA;AAAA;;AAAA,oBAMK,IAAIE,oBAAJ,CAAmB,sBAAnB,CANL;;AAAA;AAAA;AAAA,qBAUGH,iBAAeI,YAAf,CAA4BH,EAA5B,CAVH;;AAAA;AAAA;AAAA,qBAYUD,iBAAeK,QAAf,CAAwBJ,EAAxB,CAZV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAjB4B;AA+B/BK,EAAAA,MAAM;AAAA;AAAA;AAAA,8BAAE,kBAAOC,IAAP,EAAab,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACN;AACA;AAEA;AACMc,cAAAA,gBALA,GAKmBC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,gBAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADmC;AAE1CC,gBAAAA,KAAK,EAAEN,GAAG,CAACI,MAAJ,EAFmC;AAG1CG,gBAAAA,QAAQ,EAAEP,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAHgC;AAI1CG,gBAAAA,SAAS,EAAER,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAJ+B;AAK1CI,gBAAAA,QAAQ,EAAET,GAAG,CAACI,MAAJ,EALgC;AAM1CM,gBAAAA,KAAK,EAAEV,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CANmC;AAO1CM,gBAAAA,MAAM,EAAEX,GAAG,CAACI,MAAJ,EAPkC;AAQ1CQ,gBAAAA,SAAS,EAAEZ,GAAG,CAACa,MAAJ,EAR+B;AAS1CC,gBAAAA,QAAQ,EAAEd,GAAG,CAACI,MAAJ,EATgC;AAU1CW,gBAAAA,UAAU,EAAEf,GAAG,CAACI,MAAJ,EAV8B;AAW1CY,gBAAAA,IAAI,EAAEhB,GAAG,CAACI,MAAJ,EAXoC;AAY1Ca,gBAAAA,KAAK,EAAEjB,GAAG,CAACI,MAAJ,EAZmC;AAa1Cc,gBAAAA,KAAK,EAAElB,GAAG,CAACI,MAAJ,EAbmC;AAc1Ce,gBAAAA,MAAM,EAAEnB,GAAG,CAACa,MAAJ,EAdkC;AAe1CO,gBAAAA,IAAI,EAAEpB,GAAG,CAACa,MAAJ,EAfoC;AAgB1CQ,gBAAAA,IAAI,EAAErB,GAAG,CAACI,MAAJ,EAhBoC;AAiB1CkB,gBAAAA,WAAW,EAAEtB,GAAG,CAACa,MAAJ,EAjB6B;AAkB1CU,gBAAAA,YAAY,EAAEvB,GAAG,CAACa,MAAJ;AAlB4B,eAAnB,CALnB;AAAA;AAAA,qBAyBAd,gBAAgB,CAACyB,QAAjB,CAA0B1B,IAA1B,CAzBA;;AAAA;AAAA,mBA0BFA,IAAI,CAACuB,IA1BH;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA2BsBI,qBAAe7B,QAAf,CAAwBE,IAAI,CAACuB,IAA7B,CA3BtB;;AAAA;AA2BEK,cAAAA,WA3BF;;AAAA,kBA4BCA,WA5BD;AAAA;AAAA;AAAA;;AAAA,oBA6BI,IAAIhC,oBAAJ,CAAmB,kBAAnB,CA7BJ;;AAAA;AAAA,oBAkCFI,IAAI,CAAC6B,SAAL,IAAkB7B,IAAI,CAAC6B,SAAL,CAAeC,MAlC/B;AAAA;AAAA;AAAA;;AAmCEC,cAAAA,QAnCF,GAmCa/B,IAAI,CAAC6B,SAAL,CAAeG,GAAf,CAAmB,UAACC,GAAD,EAAc;AAChD,uBAAOC,sBAAaC,uBAAb,CAAqCF,GAAG,CAACG,GAAzC,CAAP;AACD,eAFgB,CAnCb;AAAA;AAAA,qBAuCEC,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAvCF;;AAAA;AAAA;AAAA,qBA0CEG,sBAAaK,YAAb,CAA0BvC,IAAI,CAAC6B,SAAL,CAAeG,GAAf,CAAmB,UAACC,GAAD;AAAA,uBAAcA,GAAG,CAACG,GAAlB;AAAA,eAAnB,CAA1B,CA1CF;;AAAA;AAAA;AAAA,qBA2Cc3C,iBAAeM,MAAf,mBACbC,IADa,EAEbb,MAAM,CAACqD,YAFM;AAGhBX,gBAAAA,SAAS,EAAE7B,IAAI,CAAC6B,SAAL,CAAeG,GAAf,CAAmB,UAACC,GAAD,EAAc;AAC1C,sBAAMQ,OAAO,GAAGR,GAAG,CAACG,GAAJ,CAAQM,WAAR,CAAoB,GAApB,CAAhB;AACA,sBAAMC,QAAQ,GAAGV,GAAG,CAACG,GAAJ,CAAQQ,KAAR,CAAc,CAAd,EAAiBH,OAAjB,EAA0BI,IAA1B,EAAjB;AACA,2CAAkBF,QAAlB;AACD,iBAJU;AAHK,iBA3Cd;;AAAA;AA2CEG,cAAAA,GA3CF;AAAA,gDAoDG;AACLpD,gBAAAA,EAAE,EAAEoD;AADC,eApDH;;AAAA;AAAA;AAAA,qBA0DWrD,iBAAeM,MAAf,mBACZC,IADY,EAEZb,MAAM,CAACqD,YAFK;AAGfO,gBAAAA,WAAW,EAAE,IAAIC,IAAJ,CAAS7D,MAAM,CAACqD,YAAP,CAAqBS,SAA9B;AAHE,iBA1DX;;AAAA;AA0DAvD,cAAAA,EA1DA;AAAA,gDA+DC;AACLA,gBAAAA,EAAE,EAAFA;AADK,eA/DD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/ByB;AAkG/BwD,EAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,kBAAOxD,EAAP,EAAWM,IAAX,EAAiBb,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCR,WAAW,CAACqB,IAAI,CAACmD,SAAN,CAAX,CAA4BzD,EAA5B,EAAgCM,IAAI,CAACoD,OAArC,EAA8CjE,MAA9C,CADD;;AAAA;AAAA,gDAEE,EAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlG0B;AAsG/BkE,EAAAA,aAAa;AAAA;AAAA;AAAA,8BAAE,kBAAO3D,EAAP,EAAWM,IAAX,EAAiBb,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGT,CAACA,MAAM,CAACC,QAAR,IAAoBD,MAAM,CAACC,QAAP,CAAgBM,EAAhB,KAAuBM,IAAI,CAACY,KAHvC;AAAA;AAAA;AAAA;;AAAA,oBAIL,IAAI0C,KAAJ,CAAU,cAAV,CAJK;;AAAA;AAAA,kBAQR5D,EARQ;AAAA;AAAA;AAAA;;AAAA,oBASL,IAAIE,oBAAJ,CAAmB,sBAAnB,CATK;;AAAA;AAAA;AAAA,qBAWaH,iBAAeK,QAAf,CAAwBJ,EAAxB,CAXb;;AAAA;AAWP6D,cAAAA,WAXO;;AAAA,kBAYRA,WAZQ;AAAA;AAAA;AAAA;;AAAA,oBAaL,IAAIC,yBAAJ,CAAwB,MAAxB,CAbK;;AAAA;AAePvD,cAAAA,gBAfO,GAeYC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,gBAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,EADmC;AAE1CG,gBAAAA,QAAQ,EAAEP,GAAG,CAACI,MAAJ,EAFgC;AAG1CI,gBAAAA,SAAS,EAAER,GAAG,CAACI,MAAJ,EAH+B;AAI1CK,gBAAAA,QAAQ,EAAET,GAAG,CAACI,MAAJ,EAJgC;AAK1CO,gBAAAA,MAAM,EAAEX,GAAG,CAACI,MAAJ,EALkC;AAM1CQ,gBAAAA,SAAS,EAAEZ,GAAG,CAACa,MAAJ,EAN+B;AAO1CC,gBAAAA,QAAQ,EAAEd,GAAG,CAACI,MAAJ,EAPgC;AAQ1CW,gBAAAA,UAAU,EAAEf,GAAG,CAACI,MAAJ,EAR8B;AAS1CY,gBAAAA,IAAI,EAAEhB,GAAG,CAACI,MAAJ,EAToC;AAU1Ca,gBAAAA,KAAK,EAAEjB,GAAG,CAACI,MAAJ,EAVmC;AAW1Cc,gBAAAA,KAAK,EAAElB,GAAG,CAACI,MAAJ,EAXmC;AAY1Ce,gBAAAA,MAAM,EAAEnB,GAAG,CAACa,MAAJ,EAZkC;AAa1CO,gBAAAA,IAAI,EAAEpB,GAAG,CAACa,MAAJ;AAboC,eAAnB,CAfZ;AAAA;AAAA,qBA8BPd,gBAAgB,CAACyB,QAAjB,CAA0B1B,IAA1B,CA9BO;;AAAA;AAAA,oBAmCTA,IAAI,CAAC6B,SAAL,IAAkB7B,IAAI,CAAC6B,SAAL,CAAeC,MAnCxB;AAAA;AAAA;AAAA;;AAoCLC,cAAAA,QApCK,GAoCM/B,IAAI,CAAC6B,SAAL,CAAe4B,MAAf,CAAsB,UAACxB,GAAD;AAAA,uBAAcA,GAAG,CAACG,GAAJ,CAAQsB,OAAR,CAAgB,SAAhB,IAA6B,CAA3C;AAAA,eAAtB,EAAoE1B,GAApE,CAAwE,UAACC,GAAD,EAAc;AACrG,uBAAOC,sBAAaC,uBAAb,CAAqCF,GAAG,CAACG,GAAzC,CAAP;AACD,eAFgB,CApCN;AAAA;AAAA,qBAwCLC,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAxCK;;AAAA;AAAA;AAAA,qBA2CLG,sBAAaK,YAAb,CAA0BvC,IAAI,CAAC6B,SAAL,CAAe4B,MAAf,CAAsB,UAACxB,GAAD;AAAA,uBAAcA,GAAG,CAACG,GAAJ,CAAQsB,OAAR,CAAgB,SAAhB,IAA6B,CAA3C;AAAA,eAAtB,EAAoE1B,GAApE,CAAwE,UAACC,GAAD;AAAA,uBAAcA,GAAG,CAACG,GAAlB;AAAA,eAAxE,CAA1B,CA3CK;;AAAA;AAAA;AAAA,qBA4CL3C,iBAAekE,MAAf;AACJjE,gBAAAA,EAAE,EAAFA;AADI,iBAEDM,IAFC;AAGJ6B,gBAAAA,SAAS,EAAE7B,IAAI,CAAC6B,SAAL,CAAeG,GAAf,CAAmB,UAACC,GAAD,EAAc;AAC1C,sBAAMQ,OAAO,GAAGR,GAAG,CAACG,GAAJ,CAAQM,WAAR,CAAoB,GAApB,CAAhB;AACA,sBAAMC,QAAQ,GAAGV,GAAG,CAACG,GAAJ,CAAQQ,KAAR,CAAc,CAAd,EAAiBH,OAAjB,EAA0BI,IAA1B,EAAjB;AACA,sBAAMe,UAAU,GAAG3B,GAAG,CAACG,GAAJ,CAAQsB,OAAR,CAAgB,SAAhB,CAAnB;AACA,yBAAOE,UAAU,IAAI,CAAd,GAAkB3B,GAAG,CAACG,GAAtB,qBAAuCO,QAAvC,CAAP;AACD,iBALU;AAHP,iBASDxD,MAAM,CAAC0E,gBATN,EA5CK;;AAAA;AAAA,gDAuDJ,EAvDI;;AAAA;AAAA;AAAA,qBAyDLpE,iBAAekE,MAAf;AACJjE,gBAAAA,EAAE,EAAFA;AADI,iBAEDM,IAFC,EAGDb,MAAM,CAAC0E,gBAHN,EAzDK;;AAAA;AAAA,gDA8DJ,EA9DI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtGkB;AAuK/BC,EAAAA,iBAAiB;AAAA;AAAA;AAAA,8BAAE,kBAAOC,MAAP,EAAe7C,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIb,CAAC6C,MAAD,IAAW,CAAC7C,IAJC;AAAA;AAAA;AAAA;;AAAA,oBAKT,IAAItB,oBAAJ,CAAmB,sBAAnB,CALS;;AAAA;AAAA;AAAA,qBAOSH,iBAAeK,QAAf,CAAwBiE,MAAxB,CAPT;;AAAA;AAOXR,cAAAA,WAPW;;AAAA,kBAQZA,WARY;AAAA;AAAA;AAAA;;AAAA,oBAST,IAAIC,yBAAJ,CAAwB,MAAxB,CATS;;AAAA;AAAA,oBAejBtC,IAAI,KAAK,QAfQ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAeSzB,iBAAeuE,mBAAf,CAAmCD,MAAnC,CAfT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAe4DtE,iBAAewE,mBAAf,CAAmCF,MAAnC,CAf5D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvKc;AAwL/B/E,EAAAA,UAAU;AAAA;AAAA;AAAA,8BAAE,kBAAOkF,GAAP,EAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFC,cAAAA,OAFE,GAEQ,qBAAQF,GAAG,CAACG,OAAJ,CAAYC,aAApB,EAAmC,SAAnC,EAA8C,EAA9C,CAFR;AAAA;AAAA,qBAGqBC,uBAAMC,IAAN,GAAaC,aAAb,CAA2BL,OAA3B,CAHrB;;AAAA;AAGFM,cAAAA,cAHE;AAIFtF,cAAAA,QAJE,GAImB;AACzBM,gBAAAA,EAAE,EAAEgF,cAAc,CAACC,GADM;AAEzBC,gBAAAA,KAAK,EAAEF,cAAc,CAACE,KAFG;AAGzBC,gBAAAA,WAAW,EAAEH,cAAc,CAACG;AAHH,eAJnB;AASR,uCAAcX,GAAG,CAAC1E,KAAlB;AATQ;AAAA,qBAUWC,iBAAeqF,gBAAf,CAAgC;AACjDjE,gBAAAA,MAAM,EAAEqD,GAAG,CAAC1E,KAAJ,CAAUqB,MAD+B;AAEjDkE,gBAAAA,OAAO,EAAEb,GAAG,CAAC/E,MAAJ,CAAW4F,OAF6B;AAGjDC,gBAAAA,KAAK,EAAEd,GAAG,CAAC1E,KAAJ,CAAUwF,KAHgC;AAIjDC,gBAAAA,MAAM,EAAEf,GAAG,CAAC1E,KAAJ,CAAUyF,MAJ+B;AAKjDC,gBAAAA,KAAK,EAAEhB,GAAG,CAAC1E,KAAJ,CAAU0F,KALgC;AAMjDC,gBAAAA,MAAM,EAAEjB,GAAG,CAAC1E,KAAJ,CAAU2F,MAN+B;AAOjD/F,gBAAAA,QAAQ,EAARA;AAPiD,eAAhC,CAVX;;AAAA;AAUFY,cAAAA,IAVE;AAmBRmE,cAAAA,GAAG,CAACtD,MAAJ,CAAW,GAAX,EAAgBuE,IAAhB,CAAqBpF,IAArB;AAnBQ;AAAA;;AAAA;AAAA;AAAA;;AAqBRqF,2BAAOC,KAAP;;AACAnB,cAAAA,GAAG,CAACtD,MAAJ,CAAW,aAAMA,MAAN,IAAgB,GAA3B,EAAgC0E,GAAhC,CAAoC,aAAMC,OAAN,IAAiB,uBAArD;;AAtBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxLqB;AAiN/BvG,EAAAA,iBAAiB;AAAA;AAAA;AAAA,8BAAE,kBAAOiF,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf;AACMC,cAAAA,OAHS,GAGC,qBAAQF,GAAG,CAACuB,OAAJ,CAAYC,KAAZ,IAAqBxB,GAAG,CAACG,OAAJ,CAAYC,aAAzC,EAAwD,SAAxD,EAAmE,EAAnE,CAHD,EAIf;;AAJe,kBAKVF,OALU;AAAA;AAAA;AAAA;;AAAA,oBAMP,IAAIuB,wBAAJ,EANO;;AAAA;AAAA;AAAA,qBAQcpB,uBAAMC,IAAN,GAAaC,aAAb,CAA2BL,OAA3B,CARd;;AAAA;AAQTM,cAAAA,cARS;AAAA;AAAA,qBASSkB,qBAAeC,OAAf,CAAuB;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAvB,CATT;;AAAA;AASTC,cAAAA,SATS;AAUf;AACA,oCAAW;AACTrG,gBAAAA,EAAE,EAAEgF,cAAc,CAACC,GADV;AAETC,gBAAAA,KAAK,EAAEF,cAAc,CAACE,KAFb;AAGTC,gBAAAA,WAAW,EAAEH,cAAc,CAACG;AAHnB,eAAX,EAIGmB,MAAM,CAAED,SAAD,CAAmBE,GAApB,CAJT,EAXe,CAiBf;;AAjBe,2BAkBgB/B,GAAG,CAAC1E,KAlBpB,EAkBP0G,SAlBO,cAkBPA,SAlBO,EAkBIC,OAlBJ,cAkBIA,OAlBJ;AAmBTlG,cAAAA,gBAnBS,GAmBUC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC1C8F,gBAAAA,SAAS,EAAEhG,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,aAAtB,CAD+B;AAE1C4F,gBAAAA,OAAO,EAAEjG,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,aAAtB;AAFiC,eAAnB,CAnBV;AAAA;AAAA,qBAuBTN,gBAAgB,CAACyB,QAAjB,CAA0B;AAC9BwE,gBAAAA,SAAS,EAATA,SAD8B;AAE9BC,gBAAAA,OAAO,EAAPA;AAF8B,eAA1B,CAvBS;;AAAA;AAAA,oBA2BX,IAAInD,IAAJ,CAASkD,SAAT,EAAoBE,OAApB,KAAgC,IAAIpD,IAAJ,CAASmD,OAAT,EAAkBC,OAAlB,EA3BrB;AAAA;AAAA;AAAA;;AAAA,oBA4BP,IAAIxG,oBAAJ,CAAmB,YAAnB,CA5BO;;AAAA;AAAA;AAAA,qBAgCMH,iBAAeR,iBAAf,CAAiCiH,SAAjC,EAA4CC,OAA5C,CAhCN;;AAAA;AAgCTE,cAAAA,MAhCS;AAiCflC,cAAAA,GAAG,CAACtD,MAAJ,CAAW,GAAX,EAAgBuE,IAAhB,CAAqBiB,MAArB;AAjCe;AAAA;;AAAA;AAAA;AAAA;;AAmCfhB,2BAAOC,KAAP;;AACAnB,cAAAA,GAAG,CAACtD,MAAJ,CAAW,aAAMA,MAAN,IAAgB,GAA3B,EAAgC0E,GAAhC,CAAoC,aAAMC,OAAN,IAAiB,uBAArD;;AApCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjNc,CAAjC;eA0Pe7G,W","sourcesContent":["import { EntityNotFoundError, validateQuery, ensurePermission, UserInputError, logger, AuthUser, NotAuthorizedError, ensureRole } from '@app/core';\nimport { newsRepository, PERMISSIONS, NewsService } from '@app/machine-news';\nimport { imageService } from '@app/website';\nimport * as yup from 'yup';\nimport { Application } from '@feathersjs/express';\nimport { shopRepository } from '../shop/shop.repository';\nimport { replace } from 'lodash';\nimport admin from 'firebase-admin';\nimport { roleRepository } from '@app/auth';\n\nconst newsService: NewsService = {\n  setup: (app: Application<any>, path: string) => {\n    app.get(path + '/get-by-owner/:ownerId', newsService.getByOwner);\n    app.get(path + '/statistics/info', newsService.getStatisticsInfo);\n  },\n  find: async (params) => {\n    // 1. authorize\n    ensurePermission(params.authUser, PERMISSIONS.NEWS.VIEW);\n\n    // 2. validate\n    validateQuery(params.query);\n\n    // 3. do business logic\n\n    // 4. persist to db\n    return await newsRepository.find(params.query);\n  },\n  get: async (id, _params) => {\n    // 1. authorize\n    // ensurePermission(params.authUser, PERMISSIONS.NEWS.VIEW);\n\n    // 2. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n\n    // 3. do business logic\n    await newsRepository.increaseView(id);\n    // 4. persist to db\n    return await newsRepository.findById(id);\n  },\n  create: async (data, params) => {\n    // 1. authorize\n    // ensurePermission(params.authUser, PERMISSIONS.NEWS.CREATE);\n\n    // 2. validate\n    const validationSchema = yup.object().shape({\n      title: yup.string().required('Title is required'),\n      state: yup.string(),\n      newsType: yup.string().required('News type is required'),\n      priceType: yup.string().required('Price type is required'),\n      location: yup.string(),\n      owner: yup.string().required('Owner ID is required'),\n      status: yup.string(),\n      usedHours: yup.number(),\n      serialNo: yup.string(),\n      categoryId: yup.string(),\n      type: yup.string(),\n      brand: yup.string(),\n      model: yup.string(),\n      weight: yup.number(),\n      year: yup.number(),\n      shop: yup.string(),\n      weightRange: yup.number(),\n      rentalPeriod: yup.number(),\n    });\n    await validationSchema.validate(data);\n    if (data.shop) {\n      const existedShop = await shopRepository.findById(data.shop);\n      if (!existedShop) {\n        throw new UserInputError('Shop didnt exist');\n      }\n    }\n\n    // 3. do business logic\n    if (data.imageUrls && data.imageUrls.length) {\n      const promises = data.imageUrls.map((val: any) => {\n        return imageService.moveFilesToUploadFolder(val.url);\n      });\n\n      await Promise.all(promises);\n\n      // Delete records in temporaryImage collection\n      await imageService.deleteByUrls(data.imageUrls.map((val: any) => val.url));\n      const ids = await newsRepository.create({\n        ...data,\n        ...params.creationInfo,\n        imageUrls: data.imageUrls.map((val: any) => {\n          const lastDot = val.url.lastIndexOf('.');\n          const fileHash = val.url.slice(0, lastDot).trim();\n          return `/upload/${fileHash}`;\n        }),\n      });\n      return {\n        id: ids,\n      };\n    }\n\n    // 4. persist to db\n    const id = await newsRepository.create({\n      ...data,\n      ...params.creationInfo,\n      createdDate: new Date(params.creationInfo!.createdAt!),\n    });\n    return {\n      id,\n    };\n  },\n  patch: async (id, data, params) => {\n    await newsService[data.operation](id, data.payload, params);\n    return {};\n  },\n  updatePending: async (id, data, params) => {\n    // 1. authorize\n    // ensurePermission(params.authUser, PERMISSIONS.NEWS.EDIT_PENDING);\n    if (!params.authUser || params.authUser.id !== data.owner) {\n      throw new Error('Unauthorized');\n    }\n\n    // 2. validate\n    if (!id) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedNews = await newsRepository.findById(id);\n    if (!existedNews) {\n      throw new EntityNotFoundError('News');\n    }\n    const validationSchema = yup.object().shape({\n      title: yup.string(),\n      newsType: yup.string(),\n      priceType: yup.string(),\n      location: yup.string(),\n      status: yup.string(),\n      usedHours: yup.number(),\n      serialNo: yup.string(),\n      categoryId: yup.string(),\n      type: yup.string(),\n      brand: yup.string(),\n      model: yup.string(),\n      weight: yup.number(),\n      year: yup.number(),\n    });\n    await validationSchema.validate(data);\n\n    // 3. do business logic\n\n    // 4. persist to db\n    if (data.imageUrls && data.imageUrls.length) {\n      const promises = data.imageUrls.filter((val: any) => val.url.indexOf('/upload') < 0).map((val: any) => {\n        return imageService.moveFilesToUploadFolder(val.url);\n      });\n\n      await Promise.all(promises);\n\n      // Delete records in temporaryImage collection\n      await imageService.deleteByUrls(data.imageUrls.filter((val: any) => val.url.indexOf('/upload') < 0).map((val: any) => val.url));\n      await newsRepository.update({\n        id,\n        ...data,\n        imageUrls: data.imageUrls.map((val: any) => {\n          const lastDot = val.url.lastIndexOf('.');\n          const fileHash = val.url.slice(0, lastDot).trim();\n          const indexOfSrc = val.url.indexOf('/upload');\n          return indexOfSrc >= 0 ? val.url : `/upload/${fileHash}`;\n        }),\n        ...params.modificationInfo,\n      });\n      return {};\n    } else {\n      await newsRepository.update({\n        id,\n        ...data,\n        ...params.modificationInfo,\n      });\n      return {};\n    }\n  },\n  updateFollowCount: async (newsId, type) => {\n    // 1. authorize\n\n    // 2. validate\n    if (!newsId || !type) {\n      throw new UserInputError('Invalid query params');\n    }\n    const existedNews = await newsRepository.findById(newsId);\n    if (!existedNews) {\n      throw new EntityNotFoundError('News');\n    }\n\n    // 3. do business logic\n\n    // 4. persist to db\n    type === 'follow' ? await newsRepository.increaseFollowCount(newsId) : await newsRepository.decreaseFollowCount(newsId);\n  },\n  getByOwner: async (req: any, res: any) => {\n    try {\n      const idToken = replace(req.headers.authorization, 'Bearer ', '');\n      const decodedIdToken = await admin.auth().verifyIdToken(idToken);\n      const authUser: AuthUser = {\n        id: decodedIdToken.uid,\n        roles: decodedIdToken.roles,\n        permissions: decodedIdToken.permissions,\n      };\n      validateQuery(req.query);\n      const data = await newsRepository.getNewsByOwnerId({\n        status: req.query.status,\n        ownerId: req.params.ownerId,\n        first: req.query.first,\n        before: req.query.before,\n        after: req.query.after,\n        sortBy: req.query.sortBy,\n        authUser,\n      });\n      res.status(200).json(data);\n    } catch (error) {\n      logger.error(error);\n      res.status(error.status || 500).end(error.message || 'Internal server error');\n    }\n  },\n  getStatisticsInfo: async (req, res) => {\n    try {\n      // authorization\n      const idToken = replace(req.cookies.token || req.headers.authorization, 'Bearer ', '');\n      // console.log('idToken', idToken);\n      if (!idToken) {\n        throw new NotAuthorizedError();\n      }\n      const decodedIdToken = await admin.auth().verifyIdToken(idToken);\n      const adminRole = await roleRepository.findOne({name: 'admin'});\n      // console.log('decodedIdToken', 'adminRole', decodedIdToken, adminRole);\n      ensureRole({\n        id: decodedIdToken.uid,\n        roles: decodedIdToken.roles,\n        permissions: decodedIdToken.permissions,\n      }, String((adminRole as any)._id));\n\n      // validate start/end date\n      const { startDate, endDate } = req.query;\n      const validationSchema = yup.object().shape({\n        startDate: yup.string().required('Bad request'),\n        endDate: yup.string().required('Bad request'),\n      });\n      await validationSchema.validate({\n        startDate,\n        endDate,\n      });\n      if (new Date(startDate).getTime() > new Date(endDate).getTime()) {\n        throw new UserInputError('Date range');\n      }\n\n      // get result\n      const result = await newsRepository.getStatisticsInfo(startDate, endDate);\n      res.status(200).json(result);\n    } catch (error) {\n      logger.error(error);\n      res.status(error.status || 500).end(error.message || 'Internal server error');\n    }\n  },\n};\n\nexport default newsService;\n"],"file":"news.service.js"}