{"version":3,"sources":["../../../../../../src/server/modules/machine-news/aggregates/follows/follow-users.repository.ts"],"names":["FollowUsersSchema","mongoose","Schema","user","type","String","ref","followee","FollowUsersModel","model","followUsersRepository","findByFollowee","followeeId","find","exec","findOne","query","create","payload","newFollow","save","id","del","deleteOne"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AAGA,IAAMA,iBAAiB,GAAG,IAAIC,kBAASC,MAAb,CAAoB,8BAAmB;AAC/DC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,GAAG,EAAE;AAFD,GADyD;AAK/DC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,GAAG,EAAE;AAFG;AALqD,CAAnB,CAApB,CAA1B;;AAUA,IAAME,gBAAgB,GAAGP,kBAASQ,KAAT,CAAe,aAAf,EAA8BT,iBAA9B,CAAzB;;AAEO,IAAMU,qBAA4C,GAAG;AAC1DC,EAAAA,cAAc;AAAA;AAAA;AAAA,8BAAE,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDJ,gBAAgB,CAACK,IAAjB,CAAsB;AAACN,gBAAAA,QAAQ,EAAEK;AAAX,eAAtB,EAA8CE,IAA9C,EADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAD4C;AAI1DC,EAAAA,OAAO;AAAA;AAAA;AAAA,8BAAE,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMR,gBAAgB,CAACO,OAAjB,CAAyB;AAACZ,gBAAAA,IAAI,EAAEa,KAAK,CAACb,IAAb;AAAmBI,gBAAAA,QAAQ,EAAES,KAAK,CAACT;AAAnC,eAAzB,EAAuEO,IAAvE,EADN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAJmD;AAO1DG,EAAAA,MAAM;AAAA;AAAA;AAAA,8BAAE,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,cAAAA,SADA,GACY,IAAIX,gBAAJ,CAAqBU,OAArB,CADZ;AAAA;AAAA,qBAEAC,SAAS,CAACC,IAAV,EAFA;;AAAA;AAAA,gDAGCD,SAAS,CAACE,EAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAPoD;AAY1DC,EAAAA,GAAG;AAAA;AAAA;AAAA,8BAAE,kBAAOJ,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGV,gBAAgB,CAACe,SAAjB,CAA2B;AAACpB,gBAAAA,IAAI,EAAEe,OAAO,CAACf,IAAf;AAAqBI,gBAAAA,QAAQ,EAAEW,OAAO,CAACX;AAAvC,eAA3B,EAA6EO,IAA7E,EADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAZuD,CAArD","sourcesContent":["import mongoose from 'mongoose';\nimport { addAuditableSchema } from '@app/core';\nimport { FollowUsersRepository } from './interfaces/FollowUsersRepository';\n\nconst FollowUsersSchema = new mongoose.Schema(addAuditableSchema({\n  user: {\n    type: String,\n    ref: 'User',\n  },\n  followee: {\n    type: String,\n    ref: 'User',\n  },\n}));\nconst FollowUsersModel = mongoose.model('FollowUsers', FollowUsersSchema);\n\nexport const followUsersRepository: FollowUsersRepository = {\n  findByFollowee: async (followeeId: string) => {\n    return await FollowUsersModel.find({followee: followeeId}).exec() as any;\n  },\n  findOne: async (query) => {\n    return await FollowUsersModel.findOne({user: query.user, followee: query.followee}).exec() as any;\n  },\n  create: async (payload) => {\n    const newFollow = new FollowUsersModel(payload);\n    await newFollow.save();\n    return newFollow.id;\n  },\n  del: async (payload: {user: string; followee: string}) => {\n    await FollowUsersModel.deleteOne({user: payload.user, followee: payload.followee}).exec();\n  },\n};\n"],"file":"follow-users.repository.js"}