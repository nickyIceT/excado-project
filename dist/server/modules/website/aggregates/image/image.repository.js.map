{"version":3,"sources":["../../../../../../src/server/modules/website/aggregates/image/image.repository.ts"],"names":["ImageSchema","mongoose","Schema","name","String","url","timestamps","index","location","ImageModel","model","find","exec","findById","id","create","payload","newImage","save","update","findByIdAndUpdate","_id","$set","deleteByUrls","urls","deleteMany","$in","imageRepository"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,IAAIC,kBAASC,MAAb,CAAoB,8BAAmB,8BAAmB;AAC5EC,EAAAA,IAAI,EAAEC,MADsE;AAE5EC,EAAAA,GAAG,EAAED;AAFuE,CAAnB,CAAnB,CAApB,EAGf;AAACE,EAAAA,UAAU,EAAE;AAAb,CAHe,CAApB;AAIAN,WAAW,CAACO,KAAZ,CAAkB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAlB;;AACA,IAAMC,UAAU,GAAGR,kBAASS,KAAT,CAAe,OAAf,EAAwBV,WAAxB,CAAnB;;AAEA,IAAMW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEF,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoBC,IAApB,EADF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJD,IAAI;AAAA;AAAA;AAAA,GAAV;;AAIA,IAAME,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,8CACRL,UAAU,CAACI,QAAX,CAAoBC,EAApB,EAAwBF,IAAxB,EADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARC,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAIA,IAAME,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,QADO,GACI,IAAIR,UAAJ,CAAeO,OAAf,CADJ;AAAA;AAAA,mBAEPC,QAAQ,CAACC,IAAT,EAFO;;AAAA;AAAA,8CAGND,QAHM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANF,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAMA,IAAMI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,kBAAOH,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPP,UAAU,CAACW,iBAAX,CAA6BJ,OAAO,CAACK,GAArC,EAA0C;AAAEC,cAAAA,IAAI,EAAEN;AAAR,aAA1C,EAA6DJ,IAA7D,EADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANO,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAIA,IAAMI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNf,UAAU,CAACgB,UAAX,CAAsB;AAACpB,cAAAA,GAAG,EAAE;AAACqB,gBAAAA,GAAG,EAAEF;AAAN;AAAN,aAAtB,EAA0CZ,IAA1C,EADM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZW,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAIO,IAAMI,eAAe,GAAG;AAC7BhB,EAAAA,IAAI,EAAJA,IAD6B;AAE7BE,EAAAA,QAAQ,EAARA,QAF6B;AAG7BE,EAAAA,MAAM,EAANA,MAH6B;AAI7BI,EAAAA,MAAM,EAANA,MAJ6B;AAK7BI,EAAAA,YAAY,EAAZA;AAL6B,CAAxB","sourcesContent":["import { addDeletableSchema, addAuditableSchema } from '@app/core';\nimport { Image } from '@app/website';\nimport mongoose from 'mongoose';\n\nconst ImageSchema = new mongoose.Schema(addAuditableSchema(addDeletableSchema({\n  name: String,\n  url: String,\n})), {timestamps: true});\nImageSchema.index({ location: 'text'});\nconst ImageModel = mongoose.model('Image', ImageSchema);\n\nconst find = async (): Promise<Image[]> => {\n  return await ImageModel.find({}).exec() as any;\n};\n\nconst findById = async (id: string): Promise<Image> => {\n  return ImageModel.findById(id).exec() as any;\n};\n\nconst create = async (payload: Partial<Image>): Promise<Image> => {\n  const newImage = new ImageModel(payload);\n  await newImage.save();\n  return newImage as any;\n};\n\nconst update = async (payload: any): Promise<void> => {\n  await ImageModel.findByIdAndUpdate(payload._id, { $set: payload }).exec();\n};\n\nconst deleteByUrls = async (urls: any) => {\n  return await ImageModel.deleteMany({url: {$in: urls}}).exec();\n};\n\nexport const imageRepository = {\n  find,\n  findById,\n  create,\n  update,\n  deleteByUrls,\n};\n"],"file":"image.repository.js"}