{"version":3,"sources":["../../../../../../src/server/modules/website/aggregates/image/image.router.ts"],"names":["uploadRouter","express","Router","post","productImageMiddleware","single","req","res","file","filename","path","process","cwd","lastDot","lastIndexOf","fileHash","slice","trim","imageService","create","name","url","resize","toFormat","toFile","status","send","end","message","shopImageMiddleware","array","config","upload","shopIntroImageNumber","json","introImages","files","map","item","error","logoImage","avatarUrl","categoryImage","adsenseImage","imageRouter"],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport sharp from 'sharp';\nimport { imageService } from '@app/website';\nimport { productImageMiddleware } from './multer/productImage.middleware';\nimport { shopImageMiddleware } from './multer/shopImage.middleware';\nimport { config } from '@app/config';\n\nconst uploadRouter = express.Router();\nuploadRouter.post('/', productImageMiddleware.single('image'), async (req: any, res) => {\n  try {\n    if (req.file) {\n      if (req.file.filename) {\n        const path = process.cwd();\n        const lastDot = req.file.filename.lastIndexOf('.');\n        const fileHash = req.file.filename.slice(0, lastDot).trim();\n\n        await imageService.create({\n          name: req.file.filename,\n          url: req.file.filename,\n        });\n\n        // Resize\n        await sharp(`${path}/temp/${req.file.filename}`).resize(300).toFormat('jpg').toFile(`${path}/temp/${fileHash}-small.jpg`);\n        await sharp(`${path}/temp/${req.file.filename}`).resize(900).toFormat('jpg').toFile(`${path}/temp/${fileHash}-large.jpg`);\n        res.status(200).send(`${req.file.filename}`);\n      }\n    } else {\n      res.status(200).end();\n    }\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/shop-intro-images', shopImageMiddleware.array('introImage', config.upload.shopIntroImageNumber), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      introImages: req.files.map((item: any) => `/upload/${item.filename}`),\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/shop-logo-image', shopImageMiddleware.array('logoImage'), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      logoImage: `/upload/${req.files[0].filename}`,\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/avatar-image', shopImageMiddleware.array('avatarImage'), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      avatarUrl: `/upload/${req.files[0].filename}`,\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/brand-logo-image', shopImageMiddleware.array('brandLogoImage'), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      logoImage: `/upload/${req.files[0].filename}`,\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/category-image', shopImageMiddleware.array('categoryImage'), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      categoryImage: `/upload/${req.files[0].filename}`,\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/feature-brand-logo-image', shopImageMiddleware.array('featureBrandLogoImage'), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      logoImage: `/upload/${req.files[0].filename}`,\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nuploadRouter.post('/adsense-image', shopImageMiddleware.array('adsenseImage'), async (req: any, res) => {\n  try {\n    res.status(200).json({\n      adsenseImage: `/upload/${req.files[0].filename}`,\n    });\n  } catch (error) {\n    res.status(error.status || 500).send(error.message || 'Internal Server Error');\n  }\n});\n\nexport const imageRouter = uploadRouter;\n"],"file":"image.router.js"}