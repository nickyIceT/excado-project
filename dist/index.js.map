{"version":3,"sources":["../src/index.ts"],"names":["server","mongoDatabase","startDatabase","config","database","connectionString","use","express","notFound","errorHandler","logger","port","parseInt","process","env","PORT","listen","info"],"mappings":";;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AAAA;AAAA,0BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACOA,UAAAA,MADP,GACgB,sBAAQ,wBAAR,CADhB,EAGC;;AAHD;AAAA,iBAIOC,oBAAcC,aAAd,CAA4BC,eAAOC,QAAP,CAAgBC,gBAA5C,CAJP;;AAAA;AAAA;AAAA,iBAOO,sCAAgB;AAAEL,YAAAA,MAAM,EAANA;AAAF,WAAhB,CAPP;;AAAA;AAAA;AAAA,iBAUO,sCAAgB;AAAEA,YAAAA,MAAM,EAANA;AAAF,WAAhB,CAVP;;AAAA;AAYC;AACAA,UAAAA,MAAM,CAACM,GAAP,CAAWC,iBAAQC,QAAR,EAAX,EACGF,GADH,CACOC,iBAAQE,YAAR,CAAqB;AAAEC,YAAAA,MAAM,EAANA;AAAF,WAArB,CADP,EAbD,CAgBC;;AACMC,UAAAA,IAjBP,GAiBcC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAZ,GAAmBF,OAAO,CAACC,GAAR,CAAYC,IAA/B,GAAsC,EAAvC,EAA2C,EAA3C,CAAR,IAA0D,IAjBxE;AAAA;AAAA,iBAkBOf,MAAM,CAACgB,MAAP,CAAcL,IAAd,CAlBP;;AAAA;AAoBCD,uBAAOO,IAAP,2CAA+CN,IAA/C;;AApBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD","sourcesContent":["\nimport { mongoDatabase, logger } from './server/core';\nimport feathers from '@feathersjs/feathers';\nimport express from '@feathersjs/express';\nimport { bootstrapClient } from './client/bootstrap-client';\nimport { bootstrapServer } from './server/bootstrap-server';\nimport { config } from '@app/config';\n\n(async () => {\n  const server = express(feathers());\n\n  // 1. connect to mongo\n  await mongoDatabase.startDatabase(config.database.connectionString);\n\n  // 2. bootstrap server\n  await bootstrapServer({ server });\n\n  // 3. bootstrap client (nextjs);\n  await bootstrapClient({ server });\n\n  // 4. setup error handler\n  server.use(express.notFound())\n    .use(express.errorHandler({ logger }));\n\n  // 5. start server\n  const port = parseInt(process.env.PORT ? process.env.PORT : '', 10) || 3000;\n  await server.listen(port);\n\n  logger.info(`[Server] Server listens on port ${port} ...`);\n})();\n"],"file":"index.js"}