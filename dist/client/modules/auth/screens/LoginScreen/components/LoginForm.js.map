{"version":3,"sources":["../../../../../../../src/client/modules/auth/screens/LoginScreen/components/LoginForm.tsx"],"names":["LoginForm","props","prefixSelector","getFieldDecorator","rules","required","message","validateFirst","validateTrigger","initialValue","width","fontSize","activeTab","loginTabChange","isSendingVerificationCode","getVerificationCode","isLogin","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Icon, Checkbox, Button, Tabs, Select } from 'antd';\nimport './LoginForm.less';\n\ninterface Props {\n  isLogin: boolean;\n  isSendingVerificationCode: boolean;\n  activeTab: string;\n  getFieldDecorator: any;\n  loginTabChange: (payload: {activeTab: string}) => void;\n  handleSubmit: (loginType: string) => void;\n  getVerificationCode: () => void;\n}\nconst LoginForm = (props: Props) => {\n  const prefixSelector = props.getFieldDecorator('phoneId', {\n    rules: [{ required: true, message: 'Please input your password!' }],\n    validateFirst: true,\n    validateTrigger: 'onBlur',\n    initialValue: '+84',\n  })(\n    <Select style={{ width: 120, fontSize: '13px' }}>\n      <Select.Option value='+84'>VN (+84)</Select.Option>\n    </Select>,\n  );\n\n  return (\n    <div className='login-form'>\n      <Tabs defaultActiveKey={props.activeTab} onChange={(activeTab) => props.loginTabChange({ activeTab })}>\n        <Tabs.TabPane tab={<span><Icon type='mail' />Email</span>} key='email'>\n          <Form.Item>\n            {props.getFieldDecorator('email', {\n              rules: [{ required: true, message: 'Please input your email!' }],\n              validateFirst: true,\n              validateTrigger: 'onBlur',\n            })(\n              <Input prefix={<Icon type='mail' />} placeholder='Email' size='large' type='email' name='email' />,\n            )}\n          </Form.Item>\n\n          <Form.Item>\n            {props.getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your password!' }],\n              validateFirst: true,\n              validateTrigger: 'onBlur',\n            })(\n              <Input prefix={<Icon type='lock' />} placeholder='Password' size='large' type='password' name='password' />,\n            )}\n          </Form.Item>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={<span><Icon type='phone' />SMS</span>} key='phone'>\n          <Form.Item>\n            {props.getFieldDecorator('phoneNumber', {\n              rules: [{ required: true, message: 'Please input your phone number!' }],\n              validateFirst: true,\n              validateTrigger: 'onBlur',\n            })(\n              <Input.Search\n                addonBefore={prefixSelector}\n                placeholder='Phone number'\n                size='large'\n                enterButton={<Button type='primary' loading={props.isSendingVerificationCode} style={{ fontSize: '13px' }}>Send code</Button>}\n                onSearch={props.getVerificationCode}\n                name='phoneNumber'\n              />,\n            )}\n          </Form.Item>\n          <Form.Item>\n            {props.getFieldDecorator('verificationCode', {\n              rules: [{ required: true, message: 'Please input your verify code!' }],\n              validateFirst: true,\n              validateTrigger: 'onBlur',\n            })(\n              <Input placeholder='Verification code' size='large' />,\n            )}\n          </Form.Item>\n        </Tabs.TabPane>\n      </Tabs>\n\n      <Form.Item className='button-container'>\n        {props.getFieldDecorator('rememberMe')(\n          <Checkbox>Remember me</Checkbox>,\n        )}\n        <Button type='primary' loading={props.isLogin} onClick={() => props.handleSubmit(props.activeTab)}>Log in</Button>\n      </Form.Item>\n    </div>\n  );\n};\n\nexport {\n  LoginForm,\n};\n"],"file":"LoginForm.js"}