{"version":3,"sources":["../../../../../../src/client/modules/auth/screens/EditProfileScreen/EditProfileScreen.tsx"],"names":["EditProfileScreen","loading","userProfile","props","avatarImageList","payload","setState","firebase","auth","currentUser","getIdToken","idToken","serviceProxy","updateProfile","_id","operation","newPassword","avatarUrl","state","familyName","givenName","profileReducers","updateProfileInfo","fullName","join","success","t","error","message","JSON","parse","response","file","config","upload","allowImageExt","test","name","avatarImageFormData","FormData","append","fetch","url","api","method","body","then","res","json","avatarImageResult","editUserProfile","uploadAvatar","translate","updateFilters","searchKeyword","profileState","isMobile","padding","margin","maxWidth","width","height","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","avatarImageBeforeUpload","provinces","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CommonLayout from '@client/layouts/Page/CommonLayout';\nimport { User, Province } from '@client/services/service-proxies';\nimport { ProfileState, ProfileReducers, ProfileEffects } from '@client/store';\nimport UserTitle from '@client/modules/machine-news/screens/DashboardScreen/components/UserTitle';\nimport { Row, Col, Card, Upload, Button, message } from 'antd';\nimport './EditProfileScreen.less';\nimport UserProfileForm from './components/UserProfileForm';\nimport { initializeFirebaseApp } from '@client/core';\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport { config } from '@client/config';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport { isMobile } from 'react-device-detect';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  userProfile: Partial<User>;\n  searchKeyword: string;\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  provinces: Province[];\n  t: (key: string) => string;\n  updateFilters: (payload: { [key: string]: string | number }) => void;\n}\ninterface State {\n  loading: boolean;\n  userProfile: Partial<User>;\n  avatarImageList: {\n    file: UploadFile;\n    base64Url: string;\n  }[];\n  fullName?: string;\n}\n\nclass EditProfileScreen extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    userProfile: this.props.userProfile,\n    avatarImageList: [],\n  };\n\n  editUserProfile = async (payload: any): Promise<boolean> => {\n    this.setState({\n      loading: true,\n    });\n    try {\n      initializeFirebaseApp();\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n\n      await serviceProxy.updateProfile(this.props.userProfile._id!, {\n        operation: payload.newPassword ? 'changePassword' : payload.avatarUrl ? 'updateAvatar' : 'updateDetail',\n        payload,\n      });\n      this.setState({\n        loading: false,\n        userProfile: {\n          ...this.state.userProfile,\n          ...payload,\n        },\n      });\n\n      if (payload.familyName || payload.givenName) {\n        this.props.profileReducers.updateProfileInfo({\n          fullName: [payload.familyName, payload.givenName].join(' '),\n        });\n        this.setState({\n          fullName: [payload.familyName, payload.givenName].join(' '),\n        });\n      }\n      message.success(this.props.t('edit-profile:updateProfileSuccess'));\n      return true;\n    } catch (error) {\n      message.error(error.message || JSON.parse(error.response).message);\n      this.setState({\n        loading: false,\n      });\n      return false;\n    }\n  }\n\n  uploadAvatar = async (file: UploadFile) => {\n    if (config.upload.allowImageExt.test(file.name)) {\n      let avatarImageResult: any;\n      const avatarImageFormData = new FormData();\n      avatarImageFormData.append('avatarImage', file as any);\n\n      avatarImageResult = await fetch(`${config.url.api}/upload-image/avatar-image`, {\n        method: 'POST',\n        body: avatarImageFormData,\n      }).then((res) => res.json());\n\n      await this.editUserProfile(avatarImageResult);\n      this.setState({\n        userProfile: {\n          ...this.state.userProfile,\n          ...avatarImageResult,\n        },\n      });\n    } else {\n      message.error('Ảnh chỉ nhận các định dạng PNG, JPG, JPEG');\n    }\n  };\n\n  avatarImageBeforeUpload = async (file: UploadFile) => {\n    this.uploadAvatar(file);\n    return false;\n  }\n\n  render() {\n    const translate = this.props.t;\n    return (\n      <div className='edit-profile-screen'>\n        <CommonLayout\n          updateFilters={this.props.updateFilters}\n          topBrands={[]}\n          searchKeyword={this.props.searchKeyword}\n          hasSideBar={false}\n          hasMenuItems={false}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n          fullName={this.state.fullName}\n        >\n          <UserTitle title={translate('edit-profile:profile-settings')} />\n          <div className='edit-profile-container'>\n            <Row type='flex' gutter={!isMobile ? 24 : 0}>\n              <Col lg={8} md={8} sm={24} xs={24}>\n                <Card\n                  style={{\n                    padding: '20px 20px 0px 20px',\n                    margin: '0 auto',\n                    maxWidth: '240px',\n                  }}\n                  cover={\n                    <div className='circular--landscape'>\n                      <div\n                        style={{\n                          width: '100%',\n                          height: '100%',\n                          backgroundImage: `url(${this.state.userProfile.avatarUrl ? this.state.userProfile.avatarUrl : '/static/images/default-avatar.jpg'})`,\n                          backgroundRepeat: 'no-repeat',\n                          backgroundPosition: 'center',\n                          backgroundSize: 'cover',\n                        }}\n                      />\n                    </div>\n                  }\n                >\n                  <Card.Meta\n                    title={\n                      <Upload beforeUpload={this.avatarImageBeforeUpload} showUploadList={false}>\n                        <Button icon='upload'>{translate('edit-profile:uploadAvatar')}</Button>\n                      </Upload>\n                    }\n                  />\n                </Card>\n              </Col>\n\n              <Col lg={16} md={16} sm={24} xs={24}>\n                <UserProfileForm\n                  loading={this.state.loading}\n                  userProfile={this.state.userProfile}\n                  editUserProfile={this.editUserProfile}\n                  provinces={this.props.provinces}\n                  t={this.props.t}\n                />\n              </Col>\n            </Row>\n          </div>\n        </CommonLayout>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces('edit-profile')(EditProfileScreen);\n"],"file":"EditProfileScreen.js"}