{"version":3,"sources":["../../../../../../../src/client/modules/machine-news/screens/ShopInfoScreen/components/Map.tsx"],"names":["MyMapComponent","props","locationGeocode","isMarkerShown","Map","geocode","lat","lng","t","config","googleMaps","apiKey","state","height","textAlign","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAMA,cAAc,GAAG,mCAAa,oCAAc,UAACC,KAAD;AAAA,SAChD,6BAAC,0BAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAEA,KAAK,CAACC;AAFvB,KAIGD,KAAK,CAACE,aAAN,IAAuB,6BAAC,uBAAD;AAAQ,IAAA,QAAQ,EAAEF,KAAK,CAACC;AAAxB,IAJ1B,CADgD;AAAA,CAAd,CAAb,CAAvB;;IAuBME,G;;;;;;;;;;;;;;;;;;4DACW;AACbF,MAAAA,eAAe,EAAE,MAAKD,KAAL,CAAWI,OAAX,GAAqB,MAAKJ,KAAL,CAAWI,OAAhC,GAA0C;AAACC,QAAAA,GAAG,EAAE,UAAN;AAAkBC,QAAAA,GAAG,EAAE;AAAvB;AAD9C,K;;;;;;;6BAIL;AACR,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6CAAS,KAAKN,KAAL,CAAWO,CAAX,CAAa,eAAb,CAAT,CADF,CADF,EAIE,6BAAC,cAAD;AACE,QAAA,aAAa,EAAE,IADjB;AAEE,QAAA,YAAY,wDAAiDC,eAAOC,UAAP,CAAkBC,MAAnE,uCAFd;AAGE,QAAA,eAAe,EAAE,KAAKC,KAAL,CAAWV,eAH9B;AAIE,QAAA,cAAc,EACZ;AAAK,UAAA,KAAK,EAAE;AACVW,YAAAA,MAAM,QADI;AAEVC,YAAAA,SAAS,EAAE;AAFD;AAAZ,WAIE,iDAJF,CALJ;AAYE,QAAA,gBAAgB,EAAE;AAAK,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM;AAAR;AAAZ,UAZpB;AAaE,QAAA,UAAU,EAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM;AAAR;AAAZ;AAbd,QAJF,CADF;AAsBD;;;;EA5BeE,eAAMC,S;;eA+BT,0BAAe,WAAf,EAA4BZ,GAA5B,C","sourcesContent":["import React from 'react';\nimport { Row, Spin } from 'antd';\nimport './Map.less';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { config } from '@client/config';\nimport { withNamespaces } from '@client/i18n';\n\ninterface MyMapComponentProps {\n  isMarkerShown: boolean;\n  googleMapURL: string;\n  loadingElement: JSX.Element;\n  containerElement: JSX.Element;\n  mapElement: JSX.Element;\n  locationGeocode: {\n    lng: number;\n    lat: number;\n  };\n}\nconst MyMapComponent = withScriptjs(withGoogleMap((props: MyMapComponentProps) =>\n  <GoogleMap\n    defaultZoom={16}\n    defaultCenter={props.locationGeocode}\n  >\n    {props.isMarkerShown && <Marker position={props.locationGeocode} />}\n  </GoogleMap>,\n));\n\ninterface Props {\n  location: string;\n  geocode: {\n    lng: number;\n    lat: number;\n  };\n  t: (key: string) => string;\n}\ninterface State {\n  locationGeocode: {\n    lng: number;\n    lat: number;\n  };\n}\nclass Map extends React.Component<Props, State> {\n  state: State = {\n    locationGeocode: this.props.geocode ? this.props.geocode : {lat: 21.0277644, lng: 105.8341598},\n  };\n\n  render () {\n    return (\n      <Row className='outline-map'>\n        <Row className='title'>\n          <strong>{this.props.t('shop-info:map')}</strong>\n        </Row>\n        <MyMapComponent\n          isMarkerShown={true}\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${config.googleMaps.apiKey}&libraries=geometry,drawing,places`}\n          locationGeocode={this.state.locationGeocode}\n          loadingElement={(\n            <div style={{\n              height: `100%`,\n              textAlign: 'center',\n            }}>\n              <Spin />\n            </div>\n          )}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </Row>\n    );\n  }\n}\n\nexport default withNamespaces('shop-info')(Map);\n"],"file":"Map.js"}