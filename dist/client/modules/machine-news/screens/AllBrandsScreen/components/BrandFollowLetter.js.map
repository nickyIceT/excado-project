{"version":3,"sources":["../../../../../../../src/client/modules/machine-news/screens/AllBrandsScreen/components/BrandFollowLetter.tsx"],"names":["BrandFollowLetter","props","classifyObject","result","listBrands","filter","item","name","sort","map","brand","letter","toUpperCase","listBrandAlphabet","Object","keys","index","_id","window","location","href","slug","totalNews","loading","textAlign","marginTop","fontSize"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAQA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAkB;AAC1C,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,MAAM,GAAG,EAAf;AACAF,IAAAA,KAAK,CAACG,UAAN,CAAiBC,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAf;AAAA,KAAxB,EAA6CC,IAA7C,GAAoDC,GAApD,CAAwD,UAACC,KAAD,EAAW;AACjE,UAAMC,MAAM,GAAGD,KAAK,CAACH,IAAN,CAAW,CAAX,EAAcK,WAAd,EAAf;AACAT,MAAAA,MAAM,CAACQ,MAAD,CAAN,GAAiBR,MAAM,CAACQ,MAAD,CAAN,gCAAqBR,MAAM,CAACQ,MAAD,CAA3B,IAAqCD,KAArC,EAAjB,GAA+DP,MAAM,CAACQ,MAAD,CAAN,GAAiB,CAACD,KAAD,CAAhF;AACD,KAHD;AAIA,WAAOP,MAAP;AACD,GAPD;;AASA,MAAMU,iBAAiB,GAAGX,cAAc,EAAxC;AAEA,SACE,6BAAC,eAAD,QACGY,MAAM,CAACC,IAAP,CAAYF,iBAAZ,EAA+BJ,GAA/B,CAAmC,UAACH,IAAD,EAAOU,KAAP;AAAA,WAClC;AAAK,MAAA,GAAG,EAAEA;AAAV,OACE;AAAI,MAAA,SAAS,EAAC;AAAd,OAA2BV,IAA3B,CADF,EAEE;AAAK,MAAA,MAAM,EAAE;AAAb,OACGO,iBAAiB,CAACP,IAAD,CAAjB,CAAwBG,GAAxB,CAA4B,UAACC,KAAD;AAAA,aAC3B;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACO,GAAhB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,EAAE,EAAE,EAAhC;AAAoC,QAAA,EAAE,EAAE,EAAxC;AAA4C,QAAA,EAAE,EAAE;AAAhD,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAA0B,QAAA,KAAK,EAAEP,KAAK,CAACH,IAAvC;AAA6C,QAAA,OAAO,EAAE,mBAAM;AAC1DW,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,6BAA0CV,KAAK,CAACW,IAAhD;AACD;AAFD,SAGGX,KAAK,CAACH,IAAN,CAAWK,WAAX,EAHH,QAG+BF,KAAK,CAACY,SAHrC,MADF,CAD2B;AAAA,KAA5B,CADH,CAFF,CADkC;AAAA,GAAnC,CADH,EAiBKrB,KAAK,CAACsB,OAAN,IACC;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,SAAS,EAAE;AAAjC;AAAZ,KACE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX;AAA9B,IADF,CAlBN,CADF;AAyBD,CArCD;;eAuCe1B,iB","sourcesContent":["import React, { Fragment } from 'react';\nimport { Row, Col, Icon } from 'antd';\nimport './BrandFollowLetter.less';\nimport { Brand } from '../../../../../services/service-proxies';\n\ninterface Props {\n  arrayLetter: string[];\n  listBrands: Brand[];\n  loading: boolean;\n}\nconst BrandFollowLetter = (props: Props) => {\n  const classifyObject = () => {\n    const result = {};\n    props.listBrands.filter((item) => item.name).sort().map((brand) => {\n      const letter = brand.name[0].toUpperCase();\n      result[letter] ? result[letter] = [...result[letter], brand] : result[letter] = [brand];\n    });\n    return result;\n  };\n\n  const listBrandAlphabet = classifyObject();\n\n  return (\n    <Fragment>\n      {Object.keys(listBrandAlphabet).map((item, index) =>\n        <Row key={index}>\n          <h1 className='row-brand'>{item}</h1>\n          <Row gutter={10}>\n            {listBrandAlphabet[item].map((brand: Brand) => (\n              <Col key={brand._id} lg={6} md={12} sm={12} xs={24}>\n                <a className='brand-link' title={brand.name} onClick={() => {\n                  window.location.href = `/danh-sach-hang/${brand.slug}`;\n                }}>\n                  {brand.name.toUpperCase()} ({brand.totalNews})\n                </a>\n              </Col>\n            ))}\n          </Row>\n        </Row>)}\n\n        {props.loading && (\n          <Row style={{textAlign: 'center', marginTop: '24px'}}>\n            <Icon type='sync' spin style={{fontSize: '42px'}}/>\n          </Row>\n        )}\n    </Fragment>\n  );\n};\n\nexport default BrandFollowLetter;\n"],"file":"BrandFollowLetter.js"}