{"version":3,"sources":["../../../../../../../src/client/modules/machine-news/screens/CreateNewsScreen/components/CreatePostStep1.tsx"],"names":["CreatePostStep1","getCode","loading","error","value","props","changeData","newsType","setState","nextStep","values","idToken","jsCookies","get","fetch","method","headers","body","JSON","stringify","then","res","json","getCustomTokenResult","window","confirmationResult","confirm","verifyCode","result","serviceProxy","updateProfile","userProfile","_id","operation","payload","phoneNo","user","phoneNumber","updateUserPhoneNo","firebase","auth","signInWithCustomToken","customToken","success","t","message","fullPhoneNumber","countryCode","appVerifier","recaptchaVerifier","signInWithPhoneNumber","RecaptchaVerifier","PhoneNumberValidateSchema","yup","object","shape","string","required","matches","VerifyCodeValidateSchema","span","offset","newsTypes","map","val","background","select","toLowerCase","state","color","marginTop","toUpperCase","Boolean","updatePhoneNo","context","errors","undefined","width","handleChange","fieldName","validateSchema","handleSubmit","formikBag","resetForm","textAlign","marginBottom","Component","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Icon, Form, Modal, Input, message, Select, Button } from 'antd';\nimport './CreatePost.less';\nimport { newsTypes, initializeFirebaseApp, validateField } from '@client/core';\nimport { User } from '@client/services/service-proxies';\nimport { FormComponentProps } from 'antd/lib/form';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Formik, FormikContext } from 'formik';\nimport * as yup from 'yup';\nimport { getServiceProxy } from '@client/services';\nimport * as jsCookies from 'js-cookie';\n\ninterface Props extends FormComponentProps {\n  newsType?: string;\n  userProfile?: User;\n  changeData: (payload: { [key: string]: any }) => void;\n  nextStep: () => void;\n  updateUserPhoneNo: (payload: { phoneNo: string }) => void;\n  t: (key: string) => string;\n}\ninterface State {\n  getCode: boolean;\n  loading: boolean;\n  error: boolean;\n}\nclass CreatePostStep1 extends Component<Props, State> {\n  state: State = {\n    getCode: false,\n    loading: false,\n    error: false,\n  };\n\n  componentDidMount() {\n    initializeFirebaseApp();\n    (window as any).recaptchaVerifier = new firebase.auth.RecaptchaVerifier('phoneRecaptcha', {\n      'size': 'invisible',\n    });\n  }\n\n  select = (value: string) => {\n    this.props.changeData({ newsType: value });\n    this.setState({\n      error: false,\n    });\n    this.props.nextStep();\n  }\n\n  nextStep = () => {\n    if (this.props.newsType) {\n      this.setState({\n        error: false,\n      });\n      this.props.nextStep();\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  }\n\n  updatePhoneNo = async (values: { [key: string]: any }) => {\n    this.setState({\n      loading: true,\n    });\n\n    try {\n      const idToken = jsCookies.get('token');\n      const getCustomTokenResult = await fetch(`/api/auth/get-custom-token`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          idToken,\n        }),\n      }).then((res) => res.json());\n\n      const result = await (window as any).confirmationResult.confirm(values.verifyCode);\n      const serviceProxy = getServiceProxy(idToken);\n      await serviceProxy.updateProfile(this.props.userProfile!._id, {\n        operation: 'updateDetail',\n        payload: {\n          phoneNo: result.user.phoneNumber,\n        },\n      });\n\n      this.props.updateUserPhoneNo({\n        phoneNo: result.user.phoneNumber,\n      });\n\n      await firebase.auth().signInWithCustomToken(getCustomTokenResult.customToken);\n\n      this.setState({\n        loading: false,\n      });\n      message.success(`${this.props.t('create-news:update-phone-number-successful')}`, 5);\n    } catch (error) {\n      this.setState({\n        loading: false,\n      });\n      message.error(error.message);\n    }\n  }\n\n  getCode = async (values: { countryCode: string; phoneNo: string }) => {\n    this.setState({\n      getCode: true,\n    });\n\n    try {\n      const fullPhoneNumber = `${values.countryCode}${values.phoneNo}`;\n      const appVerifier = (window as any).recaptchaVerifier;\n      const confirmationResult = await firebase.auth().signInWithPhoneNumber(fullPhoneNumber, appVerifier);\n      (window as any).confirmationResult = confirmationResult;\n      message.success(`${this.props.t('create-news:send-code-successful')}`);\n\n      this.setState({\n        getCode: false,\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        getCode: false,\n      });\n    }\n  }\n\n  render() {\n    const PhoneNumberValidateSchema = yup.object().shape({\n      countryCode: yup.string()\n        .required(`${this.props.t('create-news:input-country-code')}`),\n      phoneNo: yup.string()\n        .matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/, 'Số điện thoại không hợp lệ')\n        .required(`${this.props.t('create-news:input-phone-number')}`),\n    });\n    const VerifyCodeValidateSchema = yup.object().shape({\n      verifyCode: yup.string()\n        .required(`${this.props.t('create-news:input-validate-phone')}`),\n    });\n\n    return (\n      <Row className='create-post-step1'>\n        <Col xs={{ span: 22, offset: 1 }} sm={{ span: 20, offset: 2 }} md={{ span: 16, offset: 4 }} lg={{ span: 12, offset: 6 }}>\n          <div className='white-box text-center'>\n            <h3 className='create-post__headline text-bold no-margin'>{this.props.t('create-news:select-type')}</h3>\n          </div>\n          <div className='slight-margin-top'>\n            <h3 className=''>{this.props.t('create-news:news-type')}</h3>\n          </div>\n\n          {newsTypes.map((val: any) => {\n            return <div className='white-box justify-space-between vertical-center cursor-pointer' style={{ background: (this.props.newsType === val.value ? '#FFC500' : 'white') }} key={val.value}\n              onClick={() => this.select(val.value)}>\n              <h3 className='create-post__headline text-bold no-margin'>{this.props.t(`common:${val.value.toLowerCase()}`)}</h3>\n              <Icon type='right' />\n            </div>;\n          })}\n\n          <div>\n            {this.state.error && <h4 style={{ color: '#f5222d', marginTop: '15px' }}>{this.props.t('create-news:news-type-required')}</h4>}\n          </div>\n          <div className='create-post__next-button text-center big-margin-top cursor-pointer' onClick={this.nextStep}>\n            <h3 className='no-margin text-bold text-white'>{this.props.t('create-news:next').toUpperCase()}</h3>\n          </div>\n        </Col>\n\n        <Modal\n          title={this.props.t('create-news:update-phone-number')}\n          visible={this.props.userProfile ? !Boolean(this.props.userProfile.phoneNo) : false}\n          onOk={this.updatePhoneNo}\n          closable={false}\n          footer={null}\n        >\n          <Formik\n            initialValues={{\n              countryCode: '+84',\n              phoneNo: '',\n            }}\n            validateOnChange={false}\n            validationSchema={PhoneNumberValidateSchema}\n            onSubmit={async (values) => {\n              await this.getCode(values);\n            }}\n          >\n            {(context: FormikContext<any>) => (\n              <Form>\n                <Form.Item validateStatus={context.errors.phoneNo || context.errors.countryCode ? 'error' : undefined} help={context.errors.phoneNo || context.errors.countryCode}>\n                  <Input.Search\n                    addonBefore={(\n                      <Select style={{ width: 120 }} value={context.values.countryCode} onChange={context.handleChange}>\n                        <Select.Option value='+84'>VN (+84)</Select.Option>\n                      </Select>\n                    )}\n                    value={context.values.phoneNo}\n                    onChange={context.handleChange}\n                    onBlur={() => validateField({\n                      fieldName: 'phoneNo',\n                      validateSchema: PhoneNumberValidateSchema,\n                      context,\n                    })}\n                    placeholder={this.props.t('create-news:phone-number')}\n                    enterButton={<Button type='primary' loading={this.state.getCode}>{this.props.t('create-news:send-code')}</Button>}\n                    onSearch={context.handleSubmit as any}\n                    name='phoneNo'\n                  />\n                </Form.Item>\n              </Form>\n            )}\n          </Formik>\n\n          <Formik\n            initialValues={{\n              verifyCode: '',\n            }}\n            validateOnChange={false}\n            validationSchema={VerifyCodeValidateSchema}\n            onSubmit={async (values, formikBag) => {\n              await this.updatePhoneNo(values);\n              formikBag.resetForm({});\n            }}\n          >\n            {(context: FormikContext<any>) => (\n              <Form onSubmit={context.handleSubmit}>\n                <Form.Item validateStatus={context.errors.verifyCode ? 'error' : undefined} help={context.errors.verifyCode}>\n                  <Input\n                    value={context.values.verifyCode}\n                    onChange={context.handleChange}\n                    onBlur={() => validateField({\n                      fieldName: 'verifyCode',\n                      validateSchema: VerifyCodeValidateSchema,\n                      context,\n                    })}\n                    placeholder={this.props.t('create-news:verify-code')}\n                    name='verifyCode'\n                  />\n                </Form.Item>\n                <Form.Item className='button-container' style={{ textAlign: 'right', marginBottom: '0px' }}>\n                  <Button type='primary' className='login-button' htmlType='submit' loading={this.state.loading}>\n                    {this.props.t('create-news:update')}\n                  </Button>\n                </Form.Item>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n        <div id='phoneRecaptcha' />\n      </Row>\n    );\n  }\n}\n\nexport default Form.create()(CreatePostStep1);\n"],"file":"CreatePostStep1.js"}