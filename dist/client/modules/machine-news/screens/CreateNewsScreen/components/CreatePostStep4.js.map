{"version":3,"sources":["../../../../../../../src/client/modules/machine-news/screens/CreateNewsScreen/components/CreatePostStep4.tsx"],"names":["CreatePostStep4","previewVisible","previewImage","isUploading","uploadPercent","setState","file","url","thumbUrl","obj","fileExtensionRegex","filterFileList","fileList","filter","val","test","name","length","error","props","t","changeFileList","allowedUpload","uploadImage","image","formData","FormData","append","originFileObj","method","config","api","data","headers","onUploadProgress","progressEvent","loaded","total","toFixed","result","changeData","imageUrls","uid","isSeller","indexOf","newsType","validateSchema","description","yup","string","required","min","NewsValidateSchema","object","shape","uploadButton","_values","formikBag","submit","resetForm","undefined","context","span","offset","backStep","marginBottom","title","marginTop","state","beforeUpload","map","deepCloneValue","JSON","parse","stringify","uuid","v4","handlePreview","_","debounce","handleChange","errors","e","setFieldValue","target","value","fieldName","minRows","validateForm","validateResult","Object","keys","nextStep","toUpperCase","handleCancel","width","Component"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Row, Col, Icon, Upload, message, Modal, Input, Form, Spin } from 'antd';\nimport axios, { AxiosResponse } from 'axios';\nimport * as config from '../../../../../config';\nimport * as uuid from 'uuid';\nimport _ from 'lodash';\nimport './CreatePost.less';\nimport { Formik, FormikContext } from 'formik';\nimport * as yup from 'yup';\nimport { validateField } from '@client/core';\n\ninterface Props {\n  newsType?: string;\n  imageUrls: {\n    uid: string;\n    url: string;\n  }[];\n  title?: string;\n  description?: string;\n  fileList: any[];\n  submit: () => void;\n  backStep: () => void;\n  nextStep: () => void;\n  changeFileList: (payload: { fileList: any }) => void;\n  changeData: (payload: { [key: string]: any }) => void;\n  t: (key: string) => string;\n}\ninterface State {\n  previewVisible: boolean;\n  previewImage: string;\n  isUploading: boolean;\n  uploadPercent: string;\n}\nclass CreatePostStep4 extends Component<Props, State> {\n  state: State = {\n    previewVisible: false,\n    previewImage: '',\n    isUploading: false,\n    uploadPercent: '',\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = (file: any) => {\n    this.setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = (obj: any) => {\n    const fileExtensionRegex = /\\.(gif|jpg|jpeg|tiff|png|JPG|PNG|JPEG|GIF|TIFF)$/;\n    const filterFileList = obj.fileList.filter((val: any) => {\n      return fileExtensionRegex.test(val.name);\n    });\n    if (filterFileList.length > 15) {\n      message.error(`${this.props.t('create-news:upload-image-limit')}`);\n    } else {\n      this.props.changeFileList({ fileList: filterFileList });\n      if (filterFileList.length < obj.fileList.length) {\n        message.error(`${this.props.t('create-news:upload-image-error')}`, 5);\n      }\n    }\n  };\n\n  beforeUpload = (file: any) => {\n    const fileExtensionRegex = /\\.(gif|jpg|jpeg|tiff|png|JPG|PNG|JPEG|GIF|TIFF)$/;\n    let allowedUpload = true;\n    if (!fileExtensionRegex.test(file.name)) {\n      allowedUpload = false;\n    }\n    if (!allowedUpload) {\n      // message.error('Ảnh không quá 2MB và chỉ nhận các định dạng PNG, JPG, JPEG.', 5);\n    } else {\n      this.uploadImage(file);\n    }\n    return false;\n  }\n\n  uploadImage = async (image: any) => {\n    const formData = new FormData();\n    formData.append('image', image.originFileObj ? image.originFileObj : image);\n\n    try {\n      this.setState({\n        isUploading: true,\n      });\n\n      const result: AxiosResponse = await axios({\n        method: 'post',\n        url: `${config.config.url.api}/upload-image`,\n        data: formData,\n        headers: { 'Content-Type': 'multipart/form-data' },\n        onUploadProgress: (progressEvent) => {\n          this.setState({\n            uploadPercent: (progressEvent.loaded / progressEvent.total * 100).toFixed(2),\n          });\n        },\n      });\n\n      this.props.changeData({\n        imageUrls: [...this.props.imageUrls, {\n          uid: image.uid,\n          url: result.data,\n        }],\n      });\n      this.setState({\n        isUploading: false,\n      });\n    } catch (error) {\n      message.error(`${this.props.t('common:error-happen')}`, 4);\n      this.setState({\n        isUploading: false,\n      });\n    }\n  }\n\n  render() {\n    const isSeller = ['SELL', 'LEASE'].indexOf(this.props.newsType!) > -1;\n    const validateSchema = isSeller ? {\n      description: yup.string()\n        .required(`${this.props.t('create-news:input-description')}`)\n        .min(20, `${this.props.t('create-news:input-description-limit')}`),\n    } : {\n        description: yup.string(),\n      };\n    const NewsValidateSchema = yup.object().shape(validateSchema);\n    const uploadButton = (\n      <div>\n        <Icon type='camera' />\n        <div className='ant-upload-text'>{this.props.t('create-news:upload')}</div>\n      </div>\n    );\n\n    return (\n      <Row>\n        <Formik\n          initialValues={{\n            description: this.props.description,\n          }}\n          validateOnChange={false}\n          validationSchema={NewsValidateSchema}\n          onSubmit={async (_values, formikBag) => {\n            await this.props.submit();\n            formikBag.resetForm({\n              description: undefined,\n            });\n          }}\n        >\n          {(context: FormikContext<any>) => (\n            <Form>\n              <Col xs={{ span: 22, offset: 1 }} sm={{ span: 20, offset: 2 }} md={{ span: 16, offset: 4 }} lg={{ span: 12, offset: 6 }}>\n                <div className='white-box text-center'>\n                  <Icon type='left' className='create-post__back-button cursor-pointer' onClick={this.props.backStep} />\n                  <h3 className='create-post__headline text-bold no-margin'>{this.props.t('create-news:input-title')}</h3>\n                </div>\n                <Row gutter={30}>\n                  <Col xs={24}>\n                    <div className='big-margin-top'>\n                      <div className='big-margin-top'>\n                        <h3 className=''>{this.props.t('create-news:title')}</h3>\n                        <div className='white-box'>\n                          <Form.Item style={{ marginBottom: '0px' }}>\n                            {this.props.title}\n                          </Form.Item>\n                        </div>\n                      </div>\n\n                      <h3 className='' style={{ marginTop: '15px' }}>\n                        {this.props.t('create-news:choose-image')} {isSeller && (<span className='text-red'>*</span>)}\n                      </h3>\n                      <div className='white-box'>\n                        <Spin spinning={this.state.isUploading} tip={`${this.state.uploadPercent}% ...`}>\n                          <Upload\n                            beforeUpload={this.beforeUpload as any}\n                            listType='picture-card'\n                            multiple={true}\n                            fileList={this.props.fileList.map((val: any) => {\n                              if (val.uid) {\n                                return val;\n                              } else {\n                                const deepCloneValue = JSON.parse(JSON.stringify(val));\n                                deepCloneValue.uid = uuid.v4();\n                                return deepCloneValue;\n                              }\n                            })}\n                            onPreview={this.handlePreview}\n                            onChange={_.debounce(this.handleChange, 300)}\n                          >\n                            {uploadButton}\n                          </Upload>\n                        </Spin>\n                      </div>\n\n                      <div className='big-margin-top'>\n                        <h3 className=''>{this.props.t('create-news:description-title')} {isSeller && (<Fragment><span>({this.props.t('create-news:limit-character')})</span><span className='text-red'>*</span></Fragment>)}</h3>\n                        <div className='white-box'>\n                          <Form.Item style={{ marginBottom: '0px' }} validateStatus={context.errors.description ? 'error' : undefined} help={context.errors.description}>\n                            <Input.TextArea className='create-post__no-border-textarea-box' value={this.props.description}\n                              onChange={(e) => {\n                                context.setFieldValue('description', e.target.value);\n                                this.props.changeData({ description: e.target.value });\n                              }}\n                              onBlur={() => validateField({\n                                fieldName: 'description',\n                                validateSchema: NewsValidateSchema,\n                                context,\n                              })}\n                              autosize={{ minRows: 5 }}\n                            >\n                            </Input.TextArea>\n                          </Form.Item>\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n\n                {!this.state.isUploading && (\n                  <div className='create-post__next-button text-center big-margin-top cursor-pointer' onClick={async () => {\n                    try {\n                      const validateResult = await context.validateForm();\n                      // tslint:disable-next-line:no-console\n                      if ((validateResult && !Object.keys(validateResult).length) || !validateResult) {\n                        if (!isSeller || (this.props.imageUrls && this.props.imageUrls.length)) {\n                          this.props.nextStep();\n                        } else {\n                          message.error(`{this.props.t('create-news:image-limit')}`, 5);\n                        }\n                      }\n                    } catch (error) {\n                      //\n                    }\n                  }}>\n                    <h3 className='no-margin text-bold text-white'>{this.props.t('create-news:next').toUpperCase()}</h3>\n                  </div>\n                )}\n                <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\n                  <img alt='example' style={{ width: '100%' }} src={this.state.previewImage} />\n                </Modal>\n              </Col>\n            </Form>\n          )}\n        </Formik>\n      </Row>\n    );\n  }\n}\n\nexport default CreatePostStep4;\n"],"file":"CreatePostStep4.js"}