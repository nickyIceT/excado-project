{"version":3,"sources":["../../../../../../../src/client/modules/machine-news/screens/SearchDetailsScreen/components/NavLocation.tsx"],"names":["Option","NavLocation","provinceModalVisible","setState","translate","props","t","totalNewsCount","provinces","reduce","accumulator","currentValue","totalNews","selectedProvinceInfo","selectedProvince","filter","item","_id","isMobile","openProvinceModal","name","width","sortBy","value","handleSortChange","openModalFilter","state","closeProvinceModal","loading","handleFiltersChange","color","display","margin","location","map","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Row, Col, Select } from 'antd';\nimport './NavLocation.less';\nimport { Province } from '@client/services/service-proxies';\nimport { SortChangePayload } from '@client/store';\nimport { withNamespaces } from '@client/i18n';\nimport { NavLocationAndFilterMobile } from '../components/NavLocationAndFilterMobile';\nimport { isMobile } from 'react-device-detect';\n\ninterface Props {\n  loading: {\n    handleSortChange: boolean;\n    handleFiltersChange: boolean;\n    getNextPage: boolean;\n    getPrevPage: boolean;\n  };\n  provinces: Province[];\n  selectedProvince?: string;\n  sortBy: string;\n  handleFiltersChange: (payload: { [key: string]: string | number }) => void;\n  handleSortChange: (payload: SortChangePayload) => void;\n  openModalFilter: () => void;\n  t: (key: string) => string;\n}\ninterface State {\n  provinceModalVisible: boolean;\n}\nconst Option = Select.Option;\nclass NavLocation extends Component<Props, State> {\n  state: State = {\n    provinceModalVisible: false,\n  };\n\n  openProvinceModal = () => {\n    this.setState({\n      provinceModalVisible: true,\n    });\n  }\n\n  closeProvinceModal = () => {\n    this.setState({\n      provinceModalVisible: false,\n    });\n  }\n\n  render() {\n    const translate = this.props.t;\n\n    const totalNewsCount = this.props.provinces.reduce((accumulator, currentValue) => accumulator + currentValue.totalNews, 0);\n    let selectedProvinceInfo: Province = {} as any;\n    if (this.props.selectedProvince) {\n      selectedProvinceInfo = this.props.provinces.filter((item) => this.props.selectedProvince === item._id)[0];\n    }\n\n    return (\n      <div className='nav-location'>\n        {!isMobile\n          ? <Row>\n            <a onClick={this.openProvinceModal}>{translate('common:select-location')}: &nbsp;</a>\n            {selectedProvinceInfo && selectedProvinceInfo.name ? (\n              <a className='location'>{selectedProvinceInfo.name} ({selectedProvinceInfo.totalNews})</a>\n            ) : (\n                <a className='location'>\n                  {translate('common:nationwide')} ({totalNewsCount})\n          </a>\n              )}\n            <a className='sort'>\n              <Select\n                style={{ width: '220px' }}\n                defaultValue={this.props.sortBy}\n                onChange={(value) => this.props.handleSortChange({ sortBy: value })}\n              >\n                <Option value='elasticsearchCreatedAt|desc'>{translate('common:newest-post')}</Option>\n                <Option value='year|asc'>{translate('common:year-asc')}</Option>\n                <Option value='year|desc'>{translate('common:year-desc')}</Option>\n                <Option value='price|asc'>{translate('common:price-from-low-to-high')}</Option>\n                <Option value='price|desc'>{translate('common:price-from-high-to-low')}</Option>\n              </Select>\n            </a>\n          </Row>\n          : <NavLocationAndFilterMobile\n            openModalFilter={this.props.openModalFilter}\n            selectedProvinceInfo={selectedProvinceInfo}\n            openModalSelectLocation={this.openProvinceModal}\n          />}\n        <Modal\n          title={translate('common:select-location')}\n          visible={this.state.provinceModalVisible}\n          onCancel={this.closeProvinceModal}\n          width={800}\n          confirmLoading={this.props.loading.handleFiltersChange}\n        >\n          <Row>\n            <Col lg={6}>\n              <a style={{ color: this.props.selectedProvince ? '#FFC500' : '#000000', display: 'inline-block', margin: '4px' }} onClick={() => {\n                this.props.handleFiltersChange({\n                  location: '',\n                });\n                this.setState({\n                  provinceModalVisible: false,\n                });\n              }}>\n                <span className='city-item'>Toàn quốc ({totalNewsCount})</span>\n              </a>\n            </Col>\n            {this.props.provinces.map((item) => (\n              <Col lg={6} key={item._id}>\n                <a style={{ color: this.props.selectedProvince === item._id ? '#FFC500' : '#000000', display: 'inline-block', margin: '4px' }} onClick={() => {\n                  this.props.handleFiltersChange({\n                    location: item._id,\n                  });\n                  this.setState({\n                    provinceModalVisible: false,\n                  });\n                }}>\n                  <span className='city-item'>{item.name} ({item.totalNews})</span>\n                </a>\n              </Col>\n            ))}\n          </Row>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces('common')(NavLocation);\n"],"file":"NavLocation.js"}