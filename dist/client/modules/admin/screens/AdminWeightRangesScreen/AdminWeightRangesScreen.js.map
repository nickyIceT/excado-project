{"version":3,"sources":["../../../../../../src/client/modules/admin/screens/AdminWeightRangesScreen/AdminWeightRangesScreen.tsx"],"names":["AdminWeightRanges","filters","data","before","undefined","after","first","sortBy","loading","table","modal","weightRangeModalVisible","selectedWeightRange","setState","state","firebase","auth","currentUser","getIdToken","idToken","serviceProxies","getAllWeightRanges","result","error","message","values","_id","updateWeightRange","operation","payload","min","max","map","item","success","props","t","createWeightRange","id","createdAt","Date","getTime","getData","translate","dateFormat","actionsDropdown","record","openWeightRangeModal","columns","title","dataIndex","key","render","_text","weightRange","replace","toString","moment","format","sort","a","b","x","marginBottom","getNextPage","getPrevPage","closeWeightRangeModal","handleSubmit","React","Component","mapState","rootState","profileState","profileModel","mapDispatch","_rootReducer","AdminWeightRangesScreen","initStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AdminWeightRangesScreen.less';\nimport { ProfileState, initStore, withRematch } from '@client/store';\nimport { Authorize, AdminSearchbar, PagingButtons } from '@client/components';\nimport { WeightRange } from '@client/services/service-proxies';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport { message, Menu, Dropdown, Icon, Table } from 'antd';\nimport { withNamespaces } from '@client/i18n';\nimport * as moment from 'moment';\nimport WeightRangeModal from './components/WeightRangeModal';\n\ninterface Props {}\ninterface State {\n  filters: {};\n  data: WeightRange[];\n  before?: string;\n  after?: string;\n  first: number;\n  sortBy: string;\n  loading: {\n    table: boolean;\n    modal: boolean;\n  };\n  weightRangeModalVisible: boolean;\n  selectedWeightRange?: WeightRange;\n}\nclass AdminWeightRanges extends React.Component<Props & {profileState: ProfileState; t: (key: string) => string}, State> {\n  state: State = {\n    filters: {},\n    data: [],\n    before: undefined,\n    after: undefined,\n    first: 10,\n    sortBy: `min|asc`,\n    loading: {\n      table: true,\n      modal: false,\n    },\n    weightRangeModalVisible: false,\n    selectedWeightRange: undefined,\n  };\n\n  componentDidMount () {\n    this.getData();\n  }\n\n  openWeightRangeModal = (selectedWeightRange?: WeightRange) => {\n    this.setState({\n      weightRangeModalVisible: true,\n      selectedWeightRange,\n    });\n  }\n\n  closeWeightRangeModal = () => {\n    this.setState({\n      weightRangeModalVisible: false,\n      selectedWeightRange: undefined,\n    });\n  }\n\n  getData = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.getAllWeightRanges();\n\n      this.setState({\n        data: result.data,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  getPrevPage = async () => {\n    //\n  }\n\n  getNextPage = async () => {\n    //\n  }\n\n  handleSubmit = async (values: {[key: string]: any}) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        modal: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      if (this.state.selectedWeightRange && this.state.selectedWeightRange._id) {\n        await serviceProxies.updateWeightRange(this.state.selectedWeightRange._id, {\n          operation: 'updateDetail',\n          payload: {\n            min: values.min,\n            max: values.max,\n          },\n        });\n\n        this.setState({\n          weightRangeModalVisible: false,\n          loading: {\n            ...this.state.loading,\n            modal: false,\n          },\n          selectedWeightRange: undefined,\n          data: this.state.data.map((item) => item._id === this.state.selectedWeightRange!._id ? {\n            ...item,\n            min: values.min,\n            max: values.max,\n          } : item),\n        });\n        message.success(this.props.t('admin-weight-ranges:update-success'));\n      } else {\n        const result = await serviceProxies.createWeightRange({\n          min: values.min,\n          max: values.max,\n        });\n\n        this.setState({\n          weightRangeModalVisible: false,\n          loading: {\n            ...this.state.loading,\n            modal: false,\n          },\n          selectedWeightRange: undefined,\n          data: [\n            {_id: (result as any).id, min: values.min, max: values.max, createdAt: new Date().getTime()} as any,\n            ...this.state.data,\n          ],\n        });\n        message.success(this.props.t('admin-weight-ranges:create-success'));\n      }\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          modal: false,\n        },\n      });\n    }\n  }\n\n  render () {\n    const translate = this.props.t;\n    const dateFormat = 'DD/MM/YYYY HH:mm';\n    const actionsDropdown = (record: WeightRange) => (\n      <Menu>\n        <Menu.Item>\n          <a onClick={() => this.openWeightRangeModal(record)}>\n            {translate('common:edit')}\n          </a>\n        </Menu.Item>\n      </Menu>\n    );\n    const columns: any[] = [\n      {\n        title: translate('admin-weight-ranges:weight-range'),\n        dataIndex: 'weight-range',\n        key: 'weight-range',\n        render: (_text: string, record: WeightRange) => {\n          const weightRange = record.max\n          ? translate('common:from-to').replace('{from}', record.min.toString()).replace('{to}', record.max.toString()) + ' ' + translate('common:ton')\n          : translate('common:more-than') + ' ' + record.min + ' ' + translate('common:ton');\n          return weightRange;\n        },\n      },\n      {\n        title: translate('common:created-at'),\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        render: (_text: string, record: WeightRange) => moment(new Date(record.createdAt)).format(dateFormat),\n      },\n      {\n        title: translate('common:actions'),\n        dataIndex: 'operations',\n        key: 'operations',\n        render: (_text: string, record: WeightRange) => (\n          <Dropdown overlay={actionsDropdown(record)} trigger={['click']}>\n            <a className='ant-dropdown-link'>\n              {translate('common:actions')} <Icon type='down' />\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    return (\n      <div className='admin-weight-ranges-screen'>\n        <AdminSearchbar\n          hasCreate={true}\n          handleSearch={this.getData}\n          value={''}\n          showSearch={false}\n          handleSearchChange={() => null}\n          placeholder={''}\n          onCreateClick={() => this.openWeightRangeModal()}\n        />\n\n        <Table\n          columns={columns}\n          dataSource={this.state.data.sort((a, b) => a.min - b.min)}\n          loading={this.state.loading.table}\n          pagination={false}\n          scroll={{x: 1000}}\n          style={{marginBottom: '24px'}}\n          rowKey={(record: any) => record._id}\n        />\n\n        <PagingButtons\n          before={this.state.before}\n          after={this.state.after}\n          getNextPage={this.getNextPage}\n          getPrevPage={this.getPrevPage}\n        />\n\n        {this.state.weightRangeModalVisible && (\n          <WeightRangeModal\n            weightRangeInfo={this.state.selectedWeightRange}\n            loading={this.state.loading.modal}\n            visible={this.state.weightRangeModalVisible}\n            handleCancel={this.closeWeightRangeModal}\n            handleOk={this.handleSubmit}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst AdminWeightRangesScreen = Authorize(withRematch(initStore, mapState, mapDispatch)(withNamespaces('admin-weight-ranges')(AdminWeightRanges)), [], true, 'admin');\n\nexport {\n  AdminWeightRangesScreen,\n};\n"],"file":"AdminWeightRangesScreen.js"}