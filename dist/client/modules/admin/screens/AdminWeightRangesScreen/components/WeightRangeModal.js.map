{"version":3,"sources":["../../../../../../../src/client/modules/admin/screens/AdminWeightRangesScreen/components/WeightRangeModal.tsx"],"names":["WeightRangeModal","props","translate","t","WeightRangeValidateSchema","yup","object","shape","min","number","required","max","initialValues","weightRangeInfo","_id","undefined","values","formikBag","handleOk","resetForm","context","visible","handleSubmit","handleCancel","loading","display","alignItems","errors","value","setFieldValue","fieldName","validateSchema"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './WeightRangeModal.less';\nimport * as yup from 'yup';\nimport { WeightRange } from '@client/services/service-proxies';\nimport { Formik, FormikContext } from 'formik';\nimport { Modal, Form, InputNumber } from 'antd';\nimport { validateField } from '@client/core';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  weightRangeInfo?: WeightRange;\n  loading: boolean;\n  visible: boolean;\n  handleCancel: () => void;\n  handleOk: (values: {[key: string]: any}) => void;\n  t: (key: string) => string;\n}\nconst WeightRangeModal = (props: Props) => {\n  const translate = props.t;\n\n  const WeightRangeValidateSchema = yup.object().shape({\n    min: yup.number()\n      .required(translate('admin-weight-ranges:pleaseInputMinWeight')).min(1, 'admin-weight-ranges:min-min-weight'),\n    max: yup.number(),\n  });\n\n  const initialValues = props.weightRangeInfo && props.weightRangeInfo._id ? {\n    min: props.weightRangeInfo.min,\n    max: props.weightRangeInfo.max,\n  } : {\n    min: 1,\n    max: undefined,\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validateOnChange={false}\n      validationSchema={WeightRangeValidateSchema}\n      onSubmit={async (values, formikBag) => {\n        await props.handleOk(values);\n        formikBag.resetForm({\n          min: 1,\n          max: undefined,\n        });\n      }}\n    >\n      {(context: FormikContext<any>) => (\n        <Modal\n          title={props.weightRangeInfo && props.weightRangeInfo._id ? `${translate('admin-weight-ranges:edit-weight-range')}` : `${translate('admin-weight-ranges:create-weight-range')}`}\n          visible={props.visible}\n          onOk={context.handleSubmit}\n          onCancel={props.handleCancel}\n          okText={translate('common:save')}\n          cancelText={translate('common:cancel')}\n          confirmLoading={props.loading}\n          className='weight-range-modal'\n        >\n          <Form layout='inline' onSubmit={context.handleSubmit} style={{display: 'flex', alignItems: 'center'}}>\n            {translate('common:from')} &nbsp;\n            <Form.Item\n              validateStatus={context.errors.min ? 'error' : undefined}\n            >\n              <InputNumber\n                value={context.values.min}\n                onChange={(value: number|undefined) => context.setFieldValue('min', value ? value : 0)}\n                placeholder={translate('admin-weight-ranges:min-weight')}\n                name='min'\n                min={1}\n                onBlur={() => validateField({\n                  fieldName: 'min',\n                  validateSchema: WeightRangeValidateSchema,\n                  context,\n                })}\n              />\n            </Form.Item>\n            {translate('common:to')} &nbsp; &nbsp;\n            <Form.Item\n              validateStatus={context.errors.max ? 'error' : undefined}\n            >\n              <InputNumber\n                value={context.values.max}\n                onChange={(value: number|undefined) => context.setFieldValue('max', value ? value : 0)}\n                placeholder={translate('admin-weight-ranges:max-weight')}\n                name='max'\n                onBlur={() => validateField({\n                  fieldName: 'max',\n                  validateSchema: WeightRangeValidateSchema,\n                  context,\n                })}\n              />\n            </Form.Item>\n            {translate('common:ton')}\n          </Form>\n          <div className='help'>\n            {context.errors.min || context.errors.max}\n          </div>\n        </Modal>\n      )}\n    </Formik>\n  );\n};\n\nexport default withNamespaces('admin-weight-ranges')(WeightRangeModal);\n"],"file":"WeightRangeModal.js"}