{"version":3,"sources":["../../../../../../../src/client/modules/admin/screens/AdminFeatureBrandsScreen/components/FeatureBrandModal.tsx"],"names":["FeatureBrandModal","props","translate","t","FeatureBrandValidateSchema","yup","object","shape","brand","string","required","hyperlink","logoImage","order","number","initialValues","featureBrandInfo","_id","orderOptions","values","formikBag","handleOk","resetForm","context","name","visible","handleSubmit","handleCancel","loading","marginBottom","errors","undefined","loadingBrands","textAlign","getBrands","value","setFieldValue","fieldName","validateSchema","brands","map","val","handleChange","padding","margin","width","height","file","uploadLogoImage","result"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './FeatureBrandModal.less';\nimport { FeatureBrand, Brand } from '@client/services/service-proxies';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport * as yup from 'yup';\nimport { Formik, FormikContext } from 'formik';\nimport { Modal, Form, Select, Spin, Input, Card, Upload, Button } from 'antd';\nimport { validateField, getBase64Image } from '@client/core';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  featureBrandInfo?: FeatureBrand;\n  loading: boolean;\n  visible: boolean;\n  loadingBrands: boolean;\n  brands: Brand[];\n  handleOk: (values: {[key: string]: any}) => void;\n  handleCancel: () => void;\n  uploadLogoImage: (file: UploadFile) => void;\n  getBrands: (value: string) => void;\n  t: (key: string) => string;\n}\nconst FeatureBrandModal = (props: Props) => {\n  const translate = props.t;\n  const FeatureBrandValidateSchema = yup.object().shape({\n    brand: yup.string()\n      .required(translate('admin-feature-brands:pleaseSelectBrand')),\n    hyperlink: yup.string()\n      .required(translate('admin-feature-brands:pleaseInputHyperlink')),\n    logoImage: yup.string()\n      .required(translate('admin-feature-brands:pleaseUploadBrandLogo')),\n    order: yup.number()\n      .required(translate('admin-feature-brands:pleaseSelectOrder')),\n  });\n  const initialValues = props.featureBrandInfo && props.featureBrandInfo._id ? {\n    brand: props.featureBrandInfo.brand._id,\n    hyperlink: props.featureBrandInfo.hyperlink,\n    logoImage: props.featureBrandInfo.logoImage,\n    order: props.featureBrandInfo.order,\n  } : {\n    brand: '',\n    hyperlink: '',\n    logoImage: '',\n    order: 1,\n  };\n  const orderOptions = [1, 2, 3, 4, 5, 6];\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validateOnChange={false}\n      validationSchema={FeatureBrandValidateSchema}\n      onSubmit={async (values, formikBag) => {\n        await props.handleOk(values);\n        formikBag.resetForm({\n          brand: '',\n          hyperlink: '',\n          logoImage: '',\n          order: 1,\n        });\n      }}\n    >\n      {(context: FormikContext<any>) => (\n        <Modal\n          title={props.featureBrandInfo && props.featureBrandInfo._id ? `${translate('admin-feature-brands:edit-feature-brand')}: ${props.featureBrandInfo.brand.name}` : `${translate('admin-feature-brands:create-feature-brand')}`}\n          visible={props.visible}\n          onOk={context.handleSubmit}\n          onCancel={props.handleCancel}\n          okText={translate('common:save')}\n          cancelText={translate('common:cancel')}\n          confirmLoading={props.loading}\n          className='feature-brand-modal'\n          width={420}\n        >\n          <Form onSubmit={context.handleSubmit}>\n            <Form.Item\n              label={`${translate('admin-feature-brands:brand-name')}`}\n              style={{marginBottom: '0px'}}\n              validateStatus={context.errors.brand ? 'error' : undefined}\n              help={context.errors.brand}\n            >\n              <Select\n                value={context.values.brand ? context.values.brand : undefined}\n                notFoundContent={props.loadingBrands ? <div style={{textAlign: 'center'}}><Spin size='small' /></div> : null}\n                showSearch={true}\n                filterOption={false}\n                placeholder={translate('admin-feature-brands:select-brand')}\n                onSearch={props.getBrands}\n                onSelect={(value) => {\n                  context.setFieldValue('brand', value);\n                }}\n                onBlur={() => validateField({\n                  fieldName: 'brand',\n                  validateSchema: FeatureBrandValidateSchema,\n                  context,\n                })}\n              >\n                {props.brands.map((val: any) => {\n                  return <Select.Option value={val._id} key={val._id}>{val.name}</Select.Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label={`${translate('admin-feature-brands:hyperlink')}`}\n              validateStatus={context.errors.hyperlink ? 'error' : undefined}\n              help={context.errors.hyperlink}\n            >\n              <Input\n                value={context.values.hyperlink}\n                onChange={context.handleChange}\n                placeholder={translate('admin-feature-brands:hyperlink')}\n                type='text'\n                name='hyperlink'\n                onBlur={() => validateField({\n                  fieldName: 'hyperlink',\n                  validateSchema: FeatureBrandValidateSchema,\n                  context,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label={`${translate('admin-feature-brands:order')}`}\n              style={{marginBottom: '0px'}}\n              validateStatus={context.errors.order ? 'error' : undefined}\n              help={context.errors.order}\n            >\n              <Select\n                value={context.values.order ? context.values.order : undefined}\n                placeholder={translate('admin-feature-brands:order')}\n                onSelect={(value) => {\n                  context.setFieldValue('order', value);\n                }}\n                onBlur={() => validateField({\n                  fieldName: 'order',\n                  validateSchema: FeatureBrandValidateSchema,\n                  context,\n                })}\n              >\n                {orderOptions.map((val) => {\n                  return <Select.Option value={val} key={val}>#{val}</Select.Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label={`${translate('admin-feature-brands:brand-logo')}`}\n              validateStatus={context.errors.logoImage ? 'error' : undefined}\n              help={context.errors.logoImage}\n            >\n              <Card\n                style={{\n                  padding: '20px 20px 0px 20px',\n                  margin: '0 auto',\n                }}\n                cover={context.values.logoImage ? <img src={context.values.logoImage} style={{width: '100%', height: 'auto'}} /> : null}\n              >\n                <Card.Meta\n                  title={\n                    <Upload\n                      beforeUpload={(file: UploadFile) => {\n                        props.uploadLogoImage(file);\n                        getBase64Image(file, (result: string) => {\n                          context.setFieldValue('logoImage', result);\n                        });\n                        return false;\n                      }}\n                      showUploadList={false}\n                    >\n                      <Button icon='upload'>{translate('admin-feature-brands:upload-brand-logo')}</Button>\n                    </Upload>\n                  }\n                />\n              </Card>\n            </Form.Item>\n          </Form>\n        </Modal>\n      )}\n    </Formik>\n  );\n};\n\nexport default withNamespaces('admin-feature-brands')(FeatureBrandModal);\n"],"file":"FeatureBrandModal.js"}