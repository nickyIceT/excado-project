{"version":3,"sources":["../../../../../../src/client/modules/admin/screens/AdminFeatureBrandsScreen/AdminFeatureBrandsScreen.tsx"],"names":["AdminFeatureBrands","props","filters","search","undefined","data","before","after","first","sortBy","loading","table","modal","brands","featureBrandModalVisible","logoImage","selectedFeatureBrand","value","setState","state","serviceProxy","findBrands","error","message","firebase","auth","currentUser","getIdToken","idToken","serviceProxies","getFeatureBrands","result","values","logoImageUrl","config","upload","allowImageExt","test","name","logoImageFormData","FormData","append","fetch","url","api","method","body","then","res","json","logoImageResult","_id","updateFeatureBrand","operation","payload","brand","hyperlink","order","map","item","filter","ite","success","t","createFeatureBrand","id","createdAt","Date","getTime","file","getBrands","getData","translate","dateFormat","actionsDropdown","record","openBrandModal","columns","title","dataIndex","key","render","_text","height","width","moment","format","x","marginBottom","getNextPage","getPrevPage","closeBrandModal","handleSubmit","uploadLogoImage","React","Component","mapState","rootState","profileState","profileModel","mapDispatch","_rootReducer","AdminFeatureBrandsScreen","initStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AdminFeatureBrandsScreen.less';\nimport { Authorize, AdminSearchbar, PagingButtons } from '@client/components';\nimport { initStore, withRematch, ProfileState } from '@client/store';\nimport { FeatureBrand, Brand } from '@client/services/service-proxies';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport { message, Menu, Tag, Dropdown, Icon, Table } from 'antd';\nimport * as moment from 'moment';\nimport FeatureBrandModal from './components/FeatureBrandModal';\nimport debounce from 'lodash/debounce';\nimport { config } from '@client/config';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {}\ninterface State {\n  filters: {};\n  data: FeatureBrand[];\n  before?: string;\n  after?: string;\n  first: number;\n  sortBy: string;\n  loading: {\n    table: boolean;\n    modal: boolean;\n    brands: boolean;\n  };\n  featureBrandModalVisible: boolean;\n  logoImage?: UploadFile;\n  selectedFeatureBrand?: FeatureBrand;\n  brands: Brand[];\n}\nclass AdminFeatureBrands extends React.Component<Props & {profileState: ProfileState; t: (key: string) => string}, State> {\n  constructor(props: Props & {profileState: ProfileState; t: (key: string) => string}) {\n    super(props);\n    this.getBrands = debounce(this.getBrands, 500);\n  }\n\n  state: State = {\n    filters: {\n      search: undefined,\n    },\n    data: [],\n    before: undefined,\n    after: undefined,\n    first: 10,\n    sortBy: `order|asc`,\n    loading: {\n      table: true,\n      modal: false,\n      brands: false,\n    },\n    featureBrandModalVisible: false,\n    logoImage: undefined,\n    selectedFeatureBrand: undefined,\n    brands: [],\n  };\n\n  componentDidMount () {\n    this.getData();\n    this.getBrands('');\n  }\n\n  getBrands = async (value: string) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        brands: true,\n      },\n    });\n\n    try {\n      const serviceProxy = getServiceProxy();\n      const brands = await serviceProxy.findBrands(\n        value,\n        20,\n        'slug|asc',\n        undefined,\n        undefined,\n      );\n\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          brands: true,\n        },\n        brands: brands.data,\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          brands: false,\n        },\n      });\n    }\n  }\n\n  openBrandModal = (selectedFeatureBrand?: FeatureBrand) => {\n    this.setState({\n      featureBrandModalVisible: true,\n      selectedFeatureBrand,\n    });\n  }\n\n  closeBrandModal = () => {\n    this.setState({\n      featureBrandModalVisible: false,\n      selectedFeatureBrand: undefined,\n    });\n  }\n\n  getData = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.getFeatureBrands(\n        this.state.first,\n        this.state.sortBy,\n        undefined,\n        undefined,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  getPrevPage = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.getFeatureBrands(\n        this.state.first,\n        this.state.sortBy,\n        this.state.before,\n        undefined,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  getNextPage = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.getFeatureBrands(\n        this.state.first,\n        this.state.sortBy,\n        undefined,\n        this.state.after,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  handleSubmit = async (values: {[key: string]: any}) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        modal: true,\n      },\n    });\n\n    try {\n      let logoImageUrl = '';\n      if (this.state.logoImage) {\n        if (config.upload.allowImageExt.test(this.state.logoImage.name)) {\n          const logoImageFormData = new FormData();\n          logoImageFormData.append('featureBrandLogoImage', this.state.logoImage as any);\n\n          const logoImageResult = await fetch(`${config.url.api}/upload-image/feature-brand-logo-image`, {\n            method: 'POST',\n            body: logoImageFormData,\n          }).then((res) => res.json());\n\n          logoImageUrl = logoImageResult.logoImage;\n        } else {\n          message.error('Ảnh chỉ nhận các định dạng PNG, JPG, JPEG');\n        }\n      }\n\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      if (this.state.selectedFeatureBrand && this.state.selectedFeatureBrand._id) {\n        await serviceProxies.updateFeatureBrand(this.state.selectedFeatureBrand._id, {\n          operation: 'updateDetail',\n          payload: {\n            brand: values.brand,\n            logoImage: logoImageUrl ? logoImageUrl : this.state.selectedFeatureBrand.logoImage,\n            hyperlink: values.hyperlink,\n            order: values.order,\n          },\n        });\n\n        this.setState({\n          featureBrandModalVisible: false,\n          loading: {\n            ...this.state.loading,\n            modal: false,\n          },\n          selectedFeatureBrand: undefined,\n          data: this.state.data.map((item) => item._id === this.state.selectedFeatureBrand!._id ? {\n            ...item,\n            ...values,\n            brand: values.brand === this.state.selectedFeatureBrand!.brand._id ? this.state.selectedFeatureBrand!.brand : this.state.brands.filter((ite) => ite._id === values.brand)[0],\n            logoImage: logoImageUrl ? logoImageUrl : this.state.selectedFeatureBrand!.logoImage,\n          } : item),\n        });\n        message.success(this.props.t('admin-brands:update-success'));\n      } else {\n        const result = await serviceProxies.createFeatureBrand({\n          logoImage: logoImageUrl,\n          brand: values.brand,\n          hyperlink: values.hyperlink,\n          order: values.order,\n        });\n\n        this.setState({\n          featureBrandModalVisible: false,\n          loading: {\n            ...this.state.loading,\n            modal: false,\n          },\n          selectedFeatureBrand: undefined,\n          data: [\n            {\n              _id: (result as any).id,\n              brand: this.state.brands.filter((item) => item._id === values.brand)[0],\n              logoImage: logoImageUrl,\n              hyperlink: values.hyperlink,\n              order: values.order,\n              createdAt: new Date().getTime(),\n            } as any,\n            ...this.state.data,\n          ],\n        });\n        message.success(this.props.t('admin-brands:create-success'));\n      }\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          modal: false,\n        },\n      });\n    }\n  }\n\n  uploadLogoImage = async (file: UploadFile) => {\n    this.setState({\n      logoImage: file,\n    });\n  }\n\n  render () {\n    const translate = this.props.t;\n    const dateFormat = 'DD/MM/YYYY HH:mm';\n    const actionsDropdown = (record: FeatureBrand) => (\n      <Menu>\n        <Menu.Item>\n          <a onClick={() => this.openBrandModal(record)}>\n            {translate('common:edit')}\n          </a>\n        </Menu.Item>\n      </Menu>\n    );\n    const columns: any[] = [\n      {\n        title: translate('admin-feature-brands:brand-name'),\n        dataIndex: 'name',\n        key: 'name',\n        render: (_text: string, record: FeatureBrand) => (\n          <a href={record.hyperlink} target='_blank'>{record.brand.name}</a>\n        ),\n      },\n      {\n        title: translate('admin-feature-brands:order'),\n        dataIndex: 'order',\n        key: 'order',\n        render: (_text: string, record: FeatureBrand) => <Tag color='volcano'>#{record.order}</Tag>,\n      },\n      {\n        title: translate('admin-feature-brands:logo-image'),\n        dataIndex: 'logoImage',\n        key: 'logoImage',\n        render: (_text: string, record: FeatureBrand) => <img style={{height: '32px', width: 'auto'}} src={`${record.logoImage}`} alt={`${record.brand.name}`} />,\n      },\n      {\n        title: translate('common:created-at'),\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        render: (_text: string, record: FeatureBrand) => moment(new Date(record.createdAt)).format(dateFormat),\n      },\n      {\n        title: translate('common:actions'),\n        dataIndex: 'operations',\n        key: 'operations',\n        render: (_text: string, record: FeatureBrand) => (\n          <Dropdown overlay={actionsDropdown(record)} trigger={['click']}>\n            <a className='ant-dropdown-link'>\n              {translate('common:actions')} <Icon type='down' />\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    return (\n      <div className='admin-feature-brands-screen'>\n        <AdminSearchbar\n          hasCreate={true}\n          handleSearch={this.getData}\n          value={''}\n          showSearch={true}\n          handleSearchChange={() => null}\n          placeholder={translate('admin-feature-brands:search-brands')}\n          onCreateClick={() => this.openBrandModal()}\n        />\n\n        <Table\n          columns={columns}\n          dataSource={this.state.data}\n          loading={this.state.loading.table}\n          pagination={false}\n          scroll={{x: 1000}}\n          style={{marginBottom: '24px'}}\n          rowKey={(record: any) => record._id}\n        />\n\n        <PagingButtons\n          before={this.state.before}\n          after={this.state.after}\n          getNextPage={this.getNextPage}\n          getPrevPage={this.getPrevPage}\n        />\n\n        {this.state.featureBrandModalVisible && (\n          <FeatureBrandModal\n            loadingBrands={this.state.loading.brands}\n            featureBrandInfo={this.state.selectedFeatureBrand}\n            loading={this.state.loading.modal}\n            visible={this.state.featureBrandModalVisible}\n            handleCancel={this.closeBrandModal}\n            handleOk={this.handleSubmit}\n            uploadLogoImage={this.uploadLogoImage}\n            brands={this.state.selectedFeatureBrand && this.state.selectedFeatureBrand._id ? [this.state.selectedFeatureBrand.brand, ...this.state.brands] : this.state.brands}\n            getBrands={this.getBrands}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst AdminFeatureBrandsScreen = Authorize(withRematch(initStore, mapState, mapDispatch)(withNamespaces('admin-feature-brands')(AdminFeatureBrands)), [], true, 'admin');\n\nexport {\n  AdminFeatureBrandsScreen,\n};\n"],"file":"AdminFeatureBrandsScreen.js"}