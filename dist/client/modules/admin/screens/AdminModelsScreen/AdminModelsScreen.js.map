{"version":3,"sources":["../../../../../../src/client/modules/admin/screens/AdminModelsScreen/AdminModelsScreen.tsx"],"names":["AdminModels","props","filters","search","undefined","data","before","after","first","sortBy","loading","table","modal","brands","modelModalVisible","selectedModel","categories","firebase","auth","currentUser","getIdToken","idToken","serviceProxy","Promise","all","findCategories","setState","value","state","findBrands","error","message","serviceProxies","findModels","result","values","_id","updateModel","operation","payload","name","map","item","success","t","createModel","brand","category","id","slug","filter","createdAt","Date","getTime","getBrands","getData","getCategories","translate","dateFormat","actionsDropdown","record","openModelModal","columns","title","dataIndex","key","render","_text","moment","format","handleSearchChange","x","marginBottom","getNextPage","getPrevPage","closeBrandModal","handleSubmit","React","Component","mapState","rootState","profileState","profileModel","mapDispatch","_rootReducer","AdminModelsScreen","initStore"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBMA,W;;;;;AACJ,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,qFAAMA,KAAN;;AADwB,4DAKX;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEC;AADD,OADI;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbC,MAAAA,MAAM,EAAEF,SALK;AAMbG,MAAAA,KAAK,EAAEH,SANM;AAObI,MAAAA,KAAK,EAAE,EAPM;AAQbC,MAAAA,MAAM,YARO;AASbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,IADA;AAEPC,QAAAA,KAAK,EAAE,KAFA;AAGPC,QAAAA,MAAM,EAAE;AAHD,OATI;AAcbC,MAAAA,iBAAiB,EAAE,KAdN;AAebC,MAAAA,aAAa,EAAEX,SAfF;AAgBbS,MAAAA,MAAM,EAAE,EAhBK;AAiBbG,MAAAA,UAAU,EAAE;AAjBC,KALW;;AAAA;AAAA;AAAA;AAAA;AAAA,8BA+BV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaC,aAASC,IAAT,GAAgBC,WAAhB,CAA6BC,UAD1C;;AAAA;AACRC,cAAAA,OADQ;AAERC,cAAAA,YAFQ,GAEO,+BAAgBD,OAAhB,CAFP;AAAA;AAAA,qBAGaE,OAAO,CAACC,GAAR,CAAY,CACrCF,YAAY,CAACG,cAAb,EADqC,CAAZ,CAHb;;AAAA;AAAA;AAAA;AAGPT,cAAAA,UAHO;;AAOd,oBAAKU,QAAL,CAAc;AACZV,gBAAAA,UAAU,EAAEA,UAAU,CAACX;AADX,eAAd;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/BU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA2Cd,kBAAOsB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,sBAAKD,QAAL,CAAc;AACZhB,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELG,oBAAAA,MAAM,EAAE;AAFH;AADK,iBAAd;;AADU;AASFS,gBAAAA,YATE,GASa,gCATb;AAAA;AAAA,uBAUaA,YAAY,CAACO,UAAb,CACnBF,KADmB,EAEnB,EAFmB,EAGnB,UAHmB,EAInBvB,SAJmB,EAKnBA,SALmB,CAVb;;AAAA;AAUFS,gBAAAA,MAVE;;AAkBR,sBAAKa,QAAL,CAAc;AACZhB,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELG,oBAAAA,MAAM,EAAE;AAFH,oBADK;AAKZA,kBAAAA,MAAM,EAAEA,MAAM,CAACR;AALH,iBAAd;;AAlBQ;AAAA;;AAAA;AAAA;AAAA;;AA0BR,kCAAQyB,KAAR,CAAc,aAAMC,OAApB;;AACA,sBAAKL,QAAL,CAAc;AACZhB,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELG,oBAAAA,MAAM,EAAE;AAFH;AADK,iBAAd;;AA3BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA3Cc;;AAAA;AAAA;AAAA;AAAA;;AAAA,qEA+ET,UAACE,aAAD,EAA2B;AAC1C,YAAKW,QAAL,CAAc;AACZZ,QAAAA,iBAAiB,EAAE,IADP;AAEZC,QAAAA,aAAa,EAAbA;AAFY,OAAd;AAID,KApFyB;;AAAA,sEAsFR,YAAM;AACtB,YAAKW,QAAL,CAAc;AACZZ,QAAAA,iBAAiB,EAAE,KADP;AAEZC,QAAAA,aAAa,EAAEX;AAFH,OAAd;AAID,KA3FyB;;AAAA,yEA6FL,UAACuB,KAAD,EAAmB;AACtC,YAAKD,QAAL,CAAc;AACZxB,QAAAA,OAAO,oBACF,MAAK0B,KAAL,CAAW1B,OADT;AAELC,UAAAA,MAAM,EAAEwB;AAFH;AADK,OAAd;AAMD,KApGyB;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAsGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACR,oBAAKD,QAAL,CAAc;AACZhB,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AADK,eAAd;;AADQ;AAAA;AAAA,qBASqBM,aAASC,IAAT,GAAgBC,WAAhB,CAA6BC,UATlD;;AAAA;AASAC,cAAAA,OATA;AAUAW,cAAAA,cAVA,GAUiB,+BAAgBX,OAAhB,CAVjB;AAAA;AAAA,qBAWeW,cAAc,CAACC,UAAf,CACnB,MAAKL,KAAL,CAAW1B,OAAX,CAAmBC,MADA,EAEnBC,SAFmB,EAGnBA,SAHmB,EAInB,MAAKwB,KAAL,CAAWpB,KAJQ,EAKnB,MAAKoB,KAAL,CAAWnB,MALQ,EAMnBL,SANmB,EAOnBA,SAPmB,CAXf;;AAAA;AAWA8B,cAAAA,MAXA;;AAqBN,oBAAKR,QAAL,CAAc;AACZrB,gBAAAA,IAAI,EAAE6B,MAAM,CAAC7B,IADD;AAEZC,gBAAAA,MAAM,EAAE4B,MAAM,CAAC5B,MAFH;AAGZC,gBAAAA,KAAK,EAAE2B,MAAM,CAAC3B,KAHF;AAIZG,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AAJK,eAAd;;AArBM;AAAA;;AAAA;AAAA;AAAA;;AA+BN,gCAAQmB,KAAR,CAAc,aAAMC,OAApB;;AACA,oBAAKL,QAAL,CAAc;AACZhB,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AADK,eAAd;;AAhCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtGgB;;AAAA;AAAA;AAAA;AAAA;AAAA,8BA+IZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,oBAAKe,QAAL,CAAc;AACZhB,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AADK,eAAd;;AADY;AAAA;AAAA,qBASiBM,aAASC,IAAT,GAAgBC,WAAhB,CAA6BC,UAT9C;;AAAA;AASJC,cAAAA,OATI;AAUJW,cAAAA,cAVI,GAUa,+BAAgBX,OAAhB,CAVb;AAAA;AAAA,qBAWWW,cAAc,CAACC,UAAf,CACnB,MAAKL,KAAL,CAAW1B,OAAX,CAAmBC,MADA,EAEnBC,SAFmB,EAGnBA,SAHmB,EAInB,MAAKwB,KAAL,CAAWpB,KAJQ,EAKnB,MAAKoB,KAAL,CAAWnB,MALQ,EAMnBL,SANmB,EAOnB,MAAKwB,KAAL,CAAWrB,KAPQ,CAXX;;AAAA;AAWJ2B,cAAAA,MAXI;;AAqBV,oBAAKR,QAAL,CAAc;AACZrB,gBAAAA,IAAI,EAAE6B,MAAM,CAAC7B,IADD;AAEZC,gBAAAA,MAAM,EAAE4B,MAAM,CAAC5B,MAFH;AAGZC,gBAAAA,KAAK,EAAE2B,MAAM,CAAC3B,KAHF;AAIZG,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AAJK,eAAd;;AArBU;AAAA;;AAAA;AAAA;AAAA;;AA+BV,gCAAQmB,KAAR,CAAc,aAAMC,OAApB;;AACA,oBAAKL,QAAL,CAAc;AACZhB,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AADK,eAAd;;AAhCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/IY;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAwLZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,oBAAKe,QAAL,CAAc;AACZhB,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AADK,eAAd;;AADY;AAAA;AAAA,qBASiBM,aAASC,IAAT,GAAgBC,WAAhB,CAA6BC,UAT9C;;AAAA;AASJC,cAAAA,OATI;AAUJW,cAAAA,cAVI,GAUa,+BAAgBX,OAAhB,CAVb;AAAA;AAAA,qBAWWW,cAAc,CAACC,UAAf,CACnB,MAAKL,KAAL,CAAW1B,OAAX,CAAmBC,MADA,EAEnBC,SAFmB,EAGnBA,SAHmB,EAInB,MAAKwB,KAAL,CAAWpB,KAJQ,EAKnB,MAAKoB,KAAL,CAAWnB,MALQ,EAMnB,MAAKmB,KAAL,CAAWtB,MANQ,EAOnBF,SAPmB,CAXX;;AAAA;AAWJ8B,cAAAA,MAXI;;AAqBV,oBAAKR,QAAL,CAAc;AACZrB,gBAAAA,IAAI,EAAE6B,MAAM,CAAC7B,IADD;AAEZC,gBAAAA,MAAM,EAAE4B,MAAM,CAAC5B,MAFH;AAGZC,gBAAAA,KAAK,EAAE2B,MAAM,CAAC3B,KAHF;AAIZG,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AAJK,eAAd;;AArBU;AAAA;;AAAA;AAAA;AAAA;;AA+BV,gCAAQmB,KAAR,CAAc,aAAMC,OAApB;;AACA,oBAAKL,QAAL,CAAc;AACZhB,gBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELC,kBAAAA,KAAK,EAAE;AAFF;AADK,eAAd;;AAhCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxLY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAiOX,kBAAOwB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,sBAAKT,QAAL,CAAc;AACZhB,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELE,oBAAAA,KAAK,EAAE;AAFF;AADK,iBAAd;;AADa;AAAA;AAAA,uBASgBK,aAASC,IAAT,GAAgBC,WAAhB,CAA6BC,UAT7C;;AAAA;AASLC,gBAAAA,OATK;AAULW,gBAAAA,cAVK,GAUY,+BAAgBX,OAAhB,CAVZ;;AAAA,sBAYP,MAAKO,KAAL,CAAWb,aAAX,IAA4B,MAAKa,KAAL,CAAWb,aAAX,CAAyBqB,GAZ9C;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAaHJ,cAAc,CAACK,WAAf,CAA2B,MAAKT,KAAL,CAAWb,aAAX,CAAyBqB,GAApD,EAAyD;AAC7DE,kBAAAA,SAAS,EAAE,cADkD;AAE7DC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,IAAI,EAAEL,MAAM,CAACK;AADN;AAFoD,iBAAzD,CAbG;;AAAA;AAoBT,sBAAKd,QAAL,CAAc;AACZZ,kBAAAA,iBAAiB,EAAE,KADP;AAEZJ,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELE,oBAAAA,KAAK,EAAE;AAFF,oBAFK;AAMZG,kBAAAA,aAAa,EAAEX,SANH;AAOZC,kBAAAA,IAAI,EAAE,MAAKuB,KAAL,CAAWvB,IAAX,CAAgBoC,GAAhB,CAAoB,UAACC,IAAD;AAAA,2BAAUA,IAAI,CAACN,GAAL,KAAa,MAAKR,KAAL,CAAWb,aAAX,CAA0BqB,GAAvC,qBAC/BM,IAD+B;AAElCF,sBAAAA,IAAI,EAAEL,MAAM,CAACK;AAFqB,yBAGhCE,IAHsB;AAAA,mBAApB;AAPM,iBAAd;;AAYA,kCAAQC,OAAR,CAAgB,MAAK1C,KAAL,CAAW2C,CAAX,CAAa,6BAAb,CAAhB;;AAhCS;AAAA;;AAAA;AAAA;AAAA,uBAkCYZ,cAAc,CAACa,WAAf,CAA2B;AAC9CL,kBAAAA,IAAI,EAAEL,MAAM,CAACK,IADiC;AAE9CM,kBAAAA,KAAK,EAAEX,MAAM,CAACW,KAFgC;AAG9CC,kBAAAA,QAAQ,EAAEZ,MAAM,CAACY;AAH6B,iBAA3B,CAlCZ;;AAAA;AAkCHb,gBAAAA,MAlCG;;AAwCT,sBAAKR,QAAL,CAAc;AACZZ,kBAAAA,iBAAiB,EAAE,KADP;AAEZJ,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELE,oBAAAA,KAAK,EAAE;AAFF,oBAFK;AAMZG,kBAAAA,aAAa,EAAEX,SANH;AAOZC,kBAAAA,IAAI,GACF;AACE+B,oBAAAA,GAAG,EAAGF,MAAD,CAAgBc,EADvB;AAEER,oBAAAA,IAAI,EAAEL,MAAM,CAACK,IAFf;AAGES,oBAAAA,IAAI,EAAE,sBAAQd,MAAM,CAACK,IAAf,CAHR;AAIEM,oBAAAA,KAAK,EAAE,MAAKlB,KAAL,CAAWf,MAAX,CAAkBqC,MAAlB,CAAyB,UAACR,IAAD;AAAA,6BAAUA,IAAI,CAACN,GAAL,KAAaD,MAAM,CAACW,KAA9B;AAAA,qBAAzB,EAA8D,CAA9D,CAJT;AAKEC,oBAAAA,QAAQ,EAAE,MAAKnB,KAAL,CAAWZ,UAAX,CAAsBkC,MAAtB,CAA6B,UAACR,IAAD;AAAA,6BAAUA,IAAI,CAACN,GAAL,KAAaD,MAAM,CAACY,QAA9B;AAAA,qBAA7B,EAAqE,CAArE,CALZ;AAMEI,oBAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AANb,mBADE,4BASC,MAAKzB,KAAL,CAAWvB,IATZ;AAPQ,iBAAd;;AAmBA,kCAAQsC,OAAR,CAAgB,MAAK1C,KAAL,CAAW2C,CAAX,CAAa,6BAAb,CAAhB;;AA3DS;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA8DX,kCAAQd,KAAR,CAAc,aAAMC,OAApB;;AACA,sBAAKL,QAAL,CAAc;AACZhB,kBAAAA,OAAO,oBACF,MAAKkB,KAAL,CAAWlB,OADT;AAELE,oBAAAA,KAAK,EAAE;AAFF;AADK,iBAAd;;AA/DW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjOW;;AAAA;AAAA;AAAA;AAAA;;AAExB,UAAK0C,SAAL,GAAiB,uBAAS,MAAKA,SAAd,EAAyB,GAAzB,CAAjB;AAFwB;AAGzB;;;;wCAsBoB;AACnB,WAAKC,OAAL;AACA,WAAKD,SAAL,CAAe,EAAf;AACA,WAAKE,aAAL;AACD;;;6BA4QS;AAAA;;AACR,UAAMC,SAAS,GAAG,KAAKxD,KAAL,CAAW2C,CAA7B;AACA,UAAMc,UAAU,GAAG,kBAAnB;;AACA,UAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD;AAAA,eACtB,kDACE,2CAAM,IAAN,QACE;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,cAAL,CAAoBD,MAApB,CAAN;AAAA;AAAZ,WACGH,SAAS,CAAC,aAAD,CADZ,CADF,CADF,CADsB;AAAA,OAAxB;;AASA,UAAMK,OAAc,GAAG,CACrB;AACEC,QAAAA,KAAK,EAAEN,SAAS,CAAC,yBAAD,CADlB;AAEEO,QAAAA,SAAS,EAAE,MAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OADqB,EAMrB;AACEF,QAAAA,KAAK,EAAEN,SAAS,CAAC,oBAAD,CADlB;AAEEO,QAAAA,SAAS,EAAE,OAFb;AAGEC,QAAAA,GAAG,EAAE,OAHP;AAIEC,QAAAA,MAAM,EAAE,gBAACC,KAAD,EAAgBP,MAAhB;AAAA,iBAAkCA,MAAM,CAACd,KAAP,CAAaN,IAA/C;AAAA;AAJV,OANqB,EAYrB;AACEuB,QAAAA,KAAK,EAAEN,SAAS,CAAC,iBAAD,CADlB;AAEEO,QAAAA,SAAS,EAAE,UAFb;AAGEC,QAAAA,GAAG,EAAE,UAHP;AAIEC,QAAAA,MAAM,EAAE,gBAACC,KAAD,EAAgBP,MAAhB;AAAA,iBAAkCA,MAAM,CAACb,QAAP,CAAgBP,IAAlD;AAAA;AAJV,OAZqB,EAkBrB;AACEuB,QAAAA,KAAK,EAAEN,SAAS,CAAC,mBAAD,CADlB;AAEEO,QAAAA,SAAS,EAAE,WAFb;AAGEC,QAAAA,GAAG,EAAE,WAHP;AAIEC,QAAAA,MAAM,EAAE,gBAACC,KAAD,EAAgBP,MAAhB;AAAA,iBAAkCQ,MAAM,CAAC,IAAIhB,IAAJ,CAASQ,MAAM,CAACT,SAAhB,CAAD,CAAN,CAAmCkB,MAAnC,CAA0CX,UAA1C,CAAlC;AAAA;AAJV,OAlBqB,EAwBrB;AACEK,QAAAA,KAAK,EAAEN,SAAS,CAAC,gBAAD,CADlB;AAEEO,QAAAA,SAAS,EAAE,YAFb;AAGEC,QAAAA,GAAG,EAAE,YAHP;AAIEC,QAAAA,MAAM,EAAE,gBAACC,KAAD,EAAgBP,MAAhB;AAAA,iBACN;AAAU,YAAA,OAAO,EAAED,eAAe,CAACC,MAAD,CAAlC;AAA4C,YAAA,OAAO,EAAE,CAAC,OAAD;AAArD,aACE;AAAG,YAAA,SAAS,EAAC;AAAb,aACGH,SAAS,CAAC,gBAAD,CADZ,OACgC;AAAM,YAAA,IAAI,EAAC;AAAX,YADhC,CADF,CADM;AAAA;AAJV,OAxBqB,CAAvB;AAsCA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,0BAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,YAAY,EAAE,KAAKF,OAFrB;AAGE,QAAA,KAAK,EAAE,KAAK3B,KAAL,CAAW1B,OAAX,CAAmBC,MAH5B;AAIE,QAAA,UAAU,EAAE,IAJd;AAKE,QAAA,kBAAkB,EAAE,KAAKmE,kBAL3B;AAME,QAAA,WAAW,EAAEb,SAAS,CAAC,4BAAD,CANxB;AAOE,QAAA,aAAa,EAAE;AAAA,iBAAM,MAAI,CAACI,cAAL,EAAN;AAAA;AAPjB,QADF,EAWE;AACE,QAAA,OAAO,EAAEC,OADX;AAEE,QAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWvB,IAFzB;AAGE,QAAA,OAAO,EAAE,KAAKuB,KAAL,CAAWlB,OAAX,CAAmBC,KAH9B;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,MAAM,EAAE;AAAC4D,UAAAA,CAAC,EAAE;AAAJ,SALV;AAME,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SANT;AAOE,QAAA,MAAM,EAAE,gBAACZ,MAAD;AAAA,iBAAiBA,MAAM,CAACxB,GAAxB;AAAA;AAPV,QAXF,EAqBE,6BAAC,yBAAD;AACE,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWtB,MADrB;AAEE,QAAA,KAAK,EAAE,KAAKsB,KAAL,CAAWrB,KAFpB;AAGE,QAAA,WAAW,EAAE,KAAKkE,WAHpB;AAIE,QAAA,WAAW,EAAE,KAAKC;AAJpB,QArBF,EA4BG,KAAK9C,KAAL,CAAWd,iBAAX,IACC,6BAAC,mBAAD;AACE,QAAA,MAAM,EAAE,KAAKc,KAAL,CAAWf,MADrB;AAEE,QAAA,UAAU,EAAE,KAAKe,KAAL,CAAWZ,UAFzB;AAGE,QAAA,aAAa,EAAE,KAAKY,KAAL,CAAWlB,OAAX,CAAmBG,MAHpC;AAIE,QAAA,SAAS,EAAE,KAAKyC,SAJlB;AAKE,QAAA,SAAS,EAAE,KAAK1B,KAAL,CAAWb,aALxB;AAME,QAAA,OAAO,EAAE,KAAKa,KAAL,CAAWlB,OAAX,CAAmBE,KAN9B;AAOE,QAAA,OAAO,EAAE,KAAKgB,KAAL,CAAWd,iBAPtB;AAQE,QAAA,YAAY,EAAE,KAAK6D,eARrB;AASE,QAAA,QAAQ,EAAE,KAAKC;AATjB,QA7BJ,CADF;AA4CD;;;;EAxYuBC,eAAMC,S;;AA2YhC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAoB;AACnC,SAAO;AACLC,IAAAA,YAAY,EAAED,SAAS,CAACE;AADnB,GAAP;AAGD,CAJD;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,YAAD,EAAuB;AACzC,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,iBAAiB,GAAG,2BAAU,wBAAYC,gBAAZ,EAAuBP,QAAvB,EAAiCI,WAAjC,EAA8C,0BAAe,cAAf,EAA+BnF,WAA/B,CAA9C,CAAV,EAAsG,EAAtG,EAA0G,IAA1G,EAAgH,OAAhH,CAA1B","sourcesContent":["import React from 'react';\nimport './AdminModelsScreen.less';\nimport { Authorize, AdminSearchbar, PagingButtons } from '@client/components';\nimport { withRematch, initStore } from '@client/store';\nimport { Model, Brand, Category } from '@client/services/service-proxies';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport { message, Menu, Dropdown, Icon, Table } from 'antd';\nimport * as moment from 'moment';\nimport ModelModal from './components/ModelModal';\nimport debounce from 'lodash/debounce';\nimport slugify from 'slugify';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  t: (key: string) => string;\n}\ninterface State {\n  filters: {\n    search?: string;\n  };\n  data: Model[];\n  before?: string;\n  after?: string;\n  first: number;\n  sortBy: string;\n  loading: {\n    table: boolean;\n    modal: boolean;\n    brands: boolean;\n  };\n  modelModalVisible: boolean;\n  selectedModel?: Model;\n  brands: Brand[];\n  categories: Category[];\n}\nclass AdminModels extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.getBrands = debounce(this.getBrands, 500);\n  }\n\n  state: State = {\n    filters: {\n      search: undefined,\n    },\n    data: [],\n    before: undefined,\n    after: undefined,\n    first: 10,\n    sortBy: `slug|asc`,\n    loading: {\n      table: true,\n      modal: false,\n      brands: false,\n    },\n    modelModalVisible: false,\n    selectedModel: undefined,\n    brands: [],\n    categories: [],\n  };\n\n  componentDidMount () {\n    this.getData();\n    this.getBrands('');\n    this.getCategories();\n  }\n\n  getCategories = async () => {\n    const idToken: any = await firebase.auth().currentUser!.getIdToken;\n    const serviceProxy = getServiceProxy(idToken);\n    const [categories] = await Promise.all([\n      serviceProxy.findCategories(),\n    ]);\n\n    this.setState({\n      categories: categories.data,\n    });\n  }\n\n  getBrands = async (value: string) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        brands: true,\n      },\n    });\n\n    try {\n      const serviceProxy = getServiceProxy();\n      const brands = await serviceProxy.findBrands(\n        value,\n        20,\n        'slug|asc',\n        undefined,\n        undefined,\n      );\n\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          brands: true,\n        },\n        brands: brands.data,\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          brands: false,\n        },\n      });\n    }\n  }\n\n  openModelModal = (selectedModel?: Model) => {\n    this.setState({\n      modelModalVisible: true,\n      selectedModel,\n    });\n  }\n\n  closeBrandModal = () => {\n    this.setState({\n      modelModalVisible: false,\n      selectedModel: undefined,\n    });\n  }\n\n  handleSearchChange = (value: string) => {\n    this.setState({\n      filters: {\n        ...this.state.filters,\n        search: value,\n      },\n    });\n  }\n\n  getData = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.findModels(\n        this.state.filters.search,\n        undefined,\n        undefined,\n        this.state.first,\n        this.state.sortBy,\n        undefined,\n        undefined,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  getNextPage = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.findModels(\n        this.state.filters.search,\n        undefined,\n        undefined,\n        this.state.first,\n        this.state.sortBy,\n        undefined,\n        this.state.after,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  getPrevPage = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n      const result = await serviceProxies.findModels(\n        this.state.filters.search,\n        undefined,\n        undefined,\n        this.state.first,\n        this.state.sortBy,\n        this.state.before,\n        undefined,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  handleSubmit = async (values: {[key: string]: any}) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        modal: true,\n      },\n    });\n\n    try {\n      const idToken: any = await firebase.auth().currentUser!.getIdToken;\n      const serviceProxies = getServiceProxy(idToken);\n\n      if (this.state.selectedModel && this.state.selectedModel._id) {\n        await serviceProxies.updateModel(this.state.selectedModel._id, {\n          operation: 'updateDetail',\n          payload: {\n            name: values.name,\n          },\n        });\n\n        this.setState({\n          modelModalVisible: false,\n          loading: {\n            ...this.state.loading,\n            modal: false,\n          },\n          selectedModel: undefined,\n          data: this.state.data.map((item) => item._id === this.state.selectedModel!._id ? {\n            ...item,\n            name: values.name,\n          } : item),\n        });\n        message.success(this.props.t('admin-models:update-success'));\n      } else {\n        const result = await serviceProxies.createModel({\n          name: values.name,\n          brand: values.brand,\n          category: values.category,\n        });\n\n        this.setState({\n          modelModalVisible: false,\n          loading: {\n            ...this.state.loading,\n            modal: false,\n          },\n          selectedModel: undefined,\n          data: [\n            {\n              _id: (result as any).id,\n              name: values.name,\n              slug: slugify(values.name),\n              brand: this.state.brands.filter((item) => item._id === values.brand)[0],\n              category: this.state.categories.filter((item) => item._id === values.category)[0],\n              createdAt: new Date().getTime(),\n            } as any,\n            ...this.state.data,\n          ],\n        });\n        message.success(this.props.t('admin-models:create-success'));\n      }\n    } catch (error) {\n      message.error(error.message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          modal: false,\n        },\n      });\n    }\n  }\n\n  render () {\n    const translate = this.props.t;\n    const dateFormat = 'DD/MM/YYYY HH:mm';\n    const actionsDropdown = (record: Model) => (\n      <Menu>\n        <Menu.Item>\n          <a onClick={() => this.openModelModal(record)}>\n            {translate('common:edit')}\n          </a>\n        </Menu.Item>\n      </Menu>\n    );\n    const columns: any[] = [\n      {\n        title: translate('admin-models:model-name'),\n        dataIndex: 'name',\n        key: 'name',\n      },\n      {\n        title: translate('admin-models:brand'),\n        dataIndex: 'brand',\n        key: 'brand',\n        render: (_text: string, record: Model) => record.brand.name,\n      },\n      {\n        title: translate('common:category'),\n        dataIndex: 'category',\n        key: 'category',\n        render: (_text: string, record: Model) => record.category.name,\n      },\n      {\n        title: translate('common:created-at'),\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        render: (_text: string, record: Model) => moment(new Date(record.createdAt)).format(dateFormat),\n      },\n      {\n        title: translate('common:actions'),\n        dataIndex: 'operations',\n        key: 'operations',\n        render: (_text: string, record: Model) => (\n          <Dropdown overlay={actionsDropdown(record)} trigger={['click']}>\n            <a className='ant-dropdown-link'>\n              {translate('common:actions')} <Icon type='down' />\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n\n    return (\n      <div className='admin-models-screen'>\n        <AdminSearchbar\n          hasCreate={true}\n          handleSearch={this.getData}\n          value={this.state.filters.search}\n          showSearch={true}\n          handleSearchChange={this.handleSearchChange}\n          placeholder={translate('admin-models:search-models')}\n          onCreateClick={() => this.openModelModal()}\n        />\n\n        <Table\n          columns={columns}\n          dataSource={this.state.data}\n          loading={this.state.loading.table}\n          pagination={false}\n          scroll={{x: 1000}}\n          style={{marginBottom: '24px'}}\n          rowKey={(record: any) => record._id}\n        />\n\n        <PagingButtons\n          before={this.state.before}\n          after={this.state.after}\n          getNextPage={this.getNextPage}\n          getPrevPage={this.getPrevPage}\n        />\n\n        {this.state.modelModalVisible && (\n          <ModelModal\n            brands={this.state.brands}\n            categories={this.state.categories}\n            loadingBrands={this.state.loading.brands}\n            getBrands={this.getBrands}\n            modelInfo={this.state.selectedModel}\n            loading={this.state.loading.modal}\n            visible={this.state.modelModalVisible}\n            handleCancel={this.closeBrandModal}\n            handleOk={this.handleSubmit}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst AdminModelsScreen = Authorize(withRematch(initStore, mapState, mapDispatch)(withNamespaces('admin-models')(AdminModels)), [], true, 'admin');\n\nexport {\n  AdminModelsScreen,\n};\n"],"file":"AdminModelsScreen.js"}