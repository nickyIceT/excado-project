{"version":3,"sources":["../../../../../../../src/client/modules/admin/screens/AdminBrandsScreen/components/BrandModal.tsx"],"names":["BrandModal","props","translate","t","BrandValidateSchema","yup","object","shape","name","string","required","logoImage","initialValues","brandInfo","_id","values","formikBag","handleOk","resetForm","brandContext","visible","handleSubmit","handleCancel","loading","errors","undefined","handleChange","fieldName","validateSchema","context","padding","margin","width","height","file","uploadLogoImage","result","setFieldValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './BrandModal.less';\nimport { Brand } from '@client/services/service-proxies';\nimport { Modal, Form, Input, Upload, Card, Button } from 'antd';\nimport { Formik, FormikContext } from 'formik';\nimport * as yup from 'yup';\nimport { validateField, getBase64Image } from '@client/core';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  brandInfo?: Brand;\n  loading: boolean;\n  visible: boolean;\n  handleOk: (values: {[key: string]: any}) => void;\n  handleCancel: () => void;\n  uploadLogoImage: (file: UploadFile) => void;\n  t: (key: string) => string;\n}\nconst BrandModal = (props: Props) => {\n  const translate = props.t;\n\n  const BrandValidateSchema = yup.object().shape({\n    name: yup.string()\n      .required(translate('admin-brands:pleaseInputBrandName')),\n    logoImage: yup.string()\n      .required(translate('admin-brands:pleaseUploadBrandLogo')),\n  });\n\n  const initialValues = props.brandInfo && props.brandInfo._id ? {\n    name: props.brandInfo.name,\n    logoImage: props.brandInfo.logoImage,\n  } : {\n    name: '',\n    logoImage: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validateOnChange={false}\n      validationSchema={BrandValidateSchema}\n      onSubmit={async (values, formikBag) => {\n        await props.handleOk(values);\n        formikBag.resetForm({\n          name: '',\n          logoImage: '',\n        });\n      }}\n    >\n      {(brandContext: FormikContext<any>) => (\n        <Modal\n          title={props.brandInfo && props.brandInfo._id ? `${translate('admin-brands:edit-brand')}: ${props.brandInfo.name}` : `${translate('admin-brands:create-brand')}`}\n          visible={props.visible}\n          onOk={brandContext.handleSubmit}\n          onCancel={props.handleCancel}\n          okText={translate('common:save')}\n          cancelText={translate('common:cancel')}\n          confirmLoading={props.loading}\n          className='brand-modal'\n          width={420}\n        >\n          <Form onSubmit={brandContext.handleSubmit}>\n            <Form.Item\n              label={`${translate('admin-brands:brand-name')}`}\n              validateStatus={brandContext.errors.name ? 'error' : undefined}\n              help={brandContext.errors.name}\n            >\n              <Input\n                value={brandContext.values.name}\n                onChange={brandContext.handleChange}\n                placeholder={translate('admin-brands:brand-name')}\n                type='text'\n                name='name'\n                onBlur={() => validateField({\n                  fieldName: 'name',\n                  validateSchema: BrandValidateSchema,\n                  context: brandContext,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label={`${translate('admin-brands:brand-logo')}`}\n              validateStatus={brandContext.errors.logoImage ? 'error' : undefined}\n              help={brandContext.errors.logoImage}\n            >\n              <Card\n                style={{\n                  padding: '20px 20px 0px 20px',\n                  margin: '0 auto',\n                }}\n                cover={brandContext.values.logoImage ? <img src={brandContext.values.logoImage} style={{width: '100%', height: 'auto'}} /> : null}\n              >\n                <Card.Meta\n                  title={\n                    <Upload\n                      beforeUpload={(file: UploadFile) => {\n                        props.uploadLogoImage(file);\n                        getBase64Image(file, (result: string) => {\n                          brandContext.setFieldValue('logoImage', result);\n                        });\n                        return false;\n                      }}\n                      showUploadList={false}\n                    >\n                      <Button icon='upload'>{translate('admin-brands:upload-brand-logo')}</Button>\n                    </Upload>\n                  }\n                />\n              </Card>\n            </Form.Item>\n          </Form>\n        </Modal>\n      )}\n    </Formik>\n  );\n};\n\nexport default withNamespaces('admin-brands')(BrandModal);\n"],"file":"BrandModal.js"}