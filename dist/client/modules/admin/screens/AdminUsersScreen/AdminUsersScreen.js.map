{"version":3,"sources":["../../../../../../src/client/modules/admin/screens/AdminUsersScreen/AdminUsersScreen.tsx"],"names":["AdminUsers","search","roles","data","before","undefined","after","sortBy","pageSize","loading","table","modal","create","rolesData","value","setState","state","firebase","auth","currentUser","getIdToken","idToken","serviceProxy","findUsers","map","item","_id","result","error","response","userId","updateUser","operation","isActive","success","props","t","user","getAllRoles","update","message","values","formikBag","selectedRoles","forEach","indexOf","name","push","createUser","newInfo","fullName","familyName","givenName","join","payload","id","loginDetail","provider","email","filter","createdAt","Date","getTime","ite","resetForm","JSON","parse","handleSearch","translate","actionsDropdown","openUserModal","activateUser","deactivateUser","userColumns","title","key","dataIndex","render","_text","record","phoneNo","index","format","marginBottom","display","justifyContent","x","loadPrevisousPage","loadNextPage","Boolean","handleSubmit","closeUserModal","React","Component","mapState","rootState","profileState","profileModel","mapDispatch","_rootReducer","AdminUsersScreen","initStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { User, Role } from '@client/services/service-proxies';\nimport './AdminUsersScreen.less';\nimport { Table, Tag, Dropdown, Icon, Menu, Col, Row, Input, Button, message } from 'antd';\nimport moment from 'moment';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport UserModal from './components/UserModal';\nimport { Authorize } from '@client/components';\nimport { withRematch, initStore } from '@client/store';\nimport { withNamespaces } from '@client/i18n';\n\ninterface State {\n  search: string;\n  roles: Role[];\n  data: User[];\n  before: any;\n  after: any;\n  sortBy: string;\n  pageSize: number;\n  loading: {\n    table: boolean;\n    modal: boolean;\n  };\n  modal: {\n    create?: any;\n    update?: User;\n  };\n  rolesData?: Role[];\n}\ninterface Props {\n  t: (key: string) => string;\n}\nclass AdminUsers extends React.Component<Props, State> {\n  state: State = {\n    search: '',\n    roles: [],\n    data: [],\n    before: undefined,\n    after: undefined,\n    sortBy: 'createdAt|desc',\n    pageSize: 10,\n    loading: {\n      table: false,\n      modal: false,\n    },\n    modal: {\n      create: false,\n    },\n    rolesData: undefined,\n  };\n\n  async componentDidMount () {\n    this.handleSearch('');\n  }\n\n  handleSearch = async (value: string) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n      const result = await serviceProxy.findUsers(\n        value,\n        this.state.roles.map((item) => item._id),\n        this.state.pageSize,\n        this.state.sortBy,\n        undefined,\n        undefined,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.response);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  activateUser = async (userId: string) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n      await serviceProxy.updateUser(userId, {operation: 'activate'});\n\n      this.setState({\n        data: this.state.data.map((item) => {\n          return item._id === userId ? {...item, isActive: true} : item;\n        }),\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n      message.success(this.props.t('admin-users:Activate user success'));\n    } catch (error) {\n      message.error(error.response);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  deactivateUser = async (userId: string) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n      await serviceProxy.updateUser(userId, {operation: 'deactivate'});\n\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n        data: this.state.data.map((item) => {\n          return item._id === userId ? {...item, isActive: false} : item;\n        }),\n      });\n      message.success(this.props.t('admin-users:Deactivate user success'));\n    } catch (error) {\n      message.error(error.response);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  openUserModal = async (user?: any) => {\n    try {\n      let rolesData: any = this.state.rolesData;\n      if (!rolesData) {\n        const idToken = await firebase.auth().currentUser!.getIdToken();\n        const serviceProxy = getServiceProxy(idToken);\n        const result = await serviceProxy.getAllRoles();\n        rolesData = result.roles;\n      }\n\n      this.setState({\n        modal: {\n          ...this.state.modal,\n          create: user ? undefined : {},\n          update: user ? user : undefined,\n        },\n        rolesData,\n      });\n    } catch (error) {\n      message.error(error.message);\n    }\n  }\n\n  closeUserModal = () => {\n    this.setState({\n      modal: {\n        ...this.state.modal,\n        create: undefined,\n        update: undefined,\n      },\n    });\n  }\n\n  handleSubmit = async (values: any, formikBag: any) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        modal: true,\n      },\n    });\n\n    try {\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n      let result: any;\n      if (this.state.modal.create) {\n        const selectedRoles: any = [];\n        this.state.rolesData!.forEach((item) => {\n          if (values.roles.indexOf(item.name) > -1) {\n            selectedRoles.push(item._id);\n          }\n        });\n        result = await serviceProxy.createUser({\n          ...values,\n          roles: selectedRoles,\n        });\n      } else {\n        const selectedRoles: any = [];\n        this.state.rolesData!.forEach((item) => {\n          if (values.roles.indexOf(item.name) > -1) {\n            selectedRoles.push(item._id);\n          }\n        });\n\n        const newInfo = {\n          ...this.state.modal.update,\n          ...values,\n          fullName: [values.familyName, values.givenName].join(' '),\n          roles: selectedRoles,\n        };\n\n        await serviceProxy.updateUser(this.state.modal.update!._id, {\n          operation: 'updateDetail',\n          payload: newInfo,\n        });\n      }\n\n      message.success(this.state.modal.create ? this.props.t('admin-users:Create user success') : this.props.t('admin-users:Update user success'));\n      this.setState({\n        data: this.state.modal.create ? [\n          {\n            ...result,\n            ...values,\n            _id: result.id,\n            fullName: [values.familyName, values.givenName].join(' '),\n            loginDetail: {provider: 'email', email: values.email},\n            roles: this.state.rolesData!.filter((item) => values.roles.indexOf(item.name) > -1),\n            isActive: true,\n            createdAt: new Date().getTime(),\n          },\n          ...this.state.data,\n        ] : this.state.data.map((item) => {\n          if (item._id === this.state.modal.update!._id) {\n            return {\n              ...this.state.modal.update,\n              ...values,\n              fullName: [values.familyName, values.givenName].join(' '),\n              roles: this.state.rolesData!.filter((ite) => values.roles.indexOf(ite.name) > -1),\n            };\n          } else {\n            return item;\n          }\n        }),\n        loading: {\n          ...this.state.loading,\n          modal: false,\n        },\n        modal: {\n          ...this.state.modal,\n          create: undefined,\n          update: undefined,\n        },\n      });\n      formikBag.resetForm({});\n    } catch (error) {\n      message.error(JSON.parse(error.response).message);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          modal: false,\n        },\n      });\n    }\n  }\n\n  loadPrevisousPage = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n      const result = await serviceProxy.findUsers(\n        this.state.search,\n        this.state.roles.map((item) => item._id),\n        this.state.pageSize,\n        this.state.sortBy,\n        this.state.before,\n        undefined,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.response);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  loadNextPage = async () => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        table: true,\n      },\n    });\n\n    try {\n      const idToken = await firebase.auth().currentUser!.getIdToken();\n      const serviceProxy = getServiceProxy(idToken);\n      const result = await serviceProxy.findUsers(\n        this.state.search,\n        this.state.roles.map((item) => item._id),\n        this.state.pageSize,\n        this.state.sortBy,\n        undefined,\n        this.state.after,\n      );\n\n      this.setState({\n        data: result.data,\n        before: result.before,\n        after: result.after,\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    } catch (error) {\n      message.error(error.response);\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          table: false,\n        },\n      });\n    }\n  }\n\n  render () {\n    const translate = this.props.t;\n    const actionsDropdown = (user: User) => (\n      <Menu>\n        <Menu.Item>\n          <a rel='noopener noreferrer' onClick={() => this.openUserModal(user)}>{translate('admin-users:Edit')}</a>\n        </Menu.Item>\n        <Menu.Item>\n          <a rel='noopener noreferrer' onClick={() => this.activateUser(user._id)}>{translate('admin-users:Activate')}</a>\n        </Menu.Item>\n        <Menu.Item>\n          <a rel='noopener noreferrer' onClick={() => this.deactivateUser(user._id)}>{translate('admin-users:Deactivate')}</a>\n        </Menu.Item>\n      </Menu>\n    );\n\n    const userColumns = [{\n      title: translate('admin-users:Name'),\n      key: 'fullName',\n      dataIndex: 'fullName',\n    }, {\n      title: translate('admin-users:Account'),\n      key: 'email',\n      dataIndex: 'email',\n      render: (_text: any, record: User) => {\n        switch (record.loginDetail.provider) {\n          case 'phone':\n            return record.loginDetail.phoneNo;\n          case 'facebook':\n            return record.loginDetail.email;\n          case 'google':\n            return record.loginDetail.email;\n          case 'email':\n            return record.loginDetail.email;\n        }\n      },\n    }, {\n      title: translate('admin-users:Sign in method'),\n      key: 'loginDetail',\n      dataIndex: 'loginDetail',\n      render: (_text: any, record: User) => record.loginDetail ? <Tag color='cyan'>{record.loginDetail.provider}</Tag> : '',\n    }, {\n      title: translate('admin-users:Roles'),\n      key: 'roles',\n      dataIndex: 'roles',\n      render: (_text: any, record: User) => (\n        <div>\n          {record.roles.map((item, index) => <Tag key={index} color='magenta'>{(item as any).name}</Tag>)}\n        </div>\n      ),\n    }, {\n      title: translate('admin-users:Status'),\n      key: 'isActive',\n      dataIndex: 'isActive',\n      render: (_text: any, record: User) => <Tag key={record._id} color={record.isActive ? 'green' : 'red'}>{record.isActive ? 'Active' : 'In-Active'}</Tag>,\n    }, {\n      title: translate('admin-users:Created At'),\n      key: 'createdAt',\n      dataIndex: 'createdAt',\n      render: (_text: any, record: User) => moment(new Date(record.createdAt)).format('DD/MM/YYYY HH:mm'),\n    }, {\n      title: translate('admin-users:Actions'),\n      key: 'actions',\n      dataIndex: 'actions',\n      render: (_text: any, record: User) => (\n        <Dropdown overlay={actionsDropdown(record)} trigger={['click']}>\n          <a className='ant-dropdown-link'>\n            {translate('admin-users:Actions')} <Icon type='down' />\n          </a>\n        </Dropdown>\n      ),\n    }];\n\n    return (\n      <div className='users-container'>\n        <Row type='flex' style={{marginBottom: '24px'}} justify='space-between'>\n          <Col xs={12} xl={8}>\n            <Input.Search\n              enterButton={true}\n              placeholder={translate('admin-users:Search name/email/phone')}\n              onSearch={this.handleSearch}\n            />\n          </Col>\n          <Col xs={10} style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <Button type='primary' onClick={() => this.openUserModal()}>{translate('admin-users:Create')}</Button>\n          </Col>\n        </Row>\n        <Row type='flex'>\n          <Col xs={24}>\n            <Table\n              bordered={true}\n              columns={userColumns}\n              dataSource={this.state.data}\n              loading={this.state.loading.table}\n              pagination={false}\n              scroll={{x: 1000}}\n              style={{marginBottom: '24px'}}\n              rowKey={(record: any) => record._id}\n            />\n            <div className='pagination' style={{display: 'flex', justifyContent: 'flex-end'}}>\n              {this.state.before && (\n                <Button onClick={this.loadPrevisousPage}><Icon type='left' /> {translate('admin-users:Prev')}</Button>\n              )}\n              {this.state.after && (\n                <Button onClick={this.loadNextPage}>{translate('admin-users:Next')} <Icon type='right' /></Button>\n              )}\n            </div>\n          </Col>\n        </Row>\n\n        {(this.state.modal.create || this.state.modal.update) && (\n          <UserModal\n            title={this.state.modal.update ? translate('admin-users:Update user') : translate('admin-users:Create user')}\n            visible={Boolean(this.state.modal.update) || Boolean(this.state.modal.create)}\n            handleSubmit={this.handleSubmit}\n            closeModal={this.closeUserModal}\n            initialValue={this.state.modal.update ? {\n              ...this.state.modal.update,\n              roles: this.state.modal.update.roles.map((item: any) => item.name),\n            } : this.state.modal.create}\n            rolesData={this.state.rolesData}\n            loading={this.state.loading.modal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst AdminUsersScreen = Authorize(withRematch(initStore, mapState, mapDispatch)(withNamespaces('admin-users')(AdminUsers)), [], true, 'admin');\n\nexport {\n  AdminUsersScreen,\n};\n"],"file":"AdminUsersScreen.js"}