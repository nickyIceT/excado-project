{"version":3,"sources":["../../../../../../../src/client/modules/admin/screens/AdminCategoriesScreen/components/CategoryModal.tsx"],"names":["CategoryModal","props","translate","t","CategoryValidateSchema","yup","object","shape","name","string","required","imageUrl","initialValues","categoryInfo","_id","values","formikBag","handleOk","resetForm","categoryContext","visible","handleSubmit","handleCancel","loading","errors","undefined","handleChange","fieldName","validateSchema","context","padding","margin","width","height","file","uploadLogoImage","result","setFieldValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CategoryModal.less';\nimport { Modal, Form, Input, Upload, Card, Button } from 'antd';\nimport { Formik, FormikContext } from 'formik';\nimport { Category } from '@client/services/service-proxies';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport * as yup from 'yup';\nimport { validateField, getBase64Image } from '@client/core';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  categoryInfo?: Category;\n  loading: boolean;\n  visible: boolean;\n  handleOk: (values: {[key: string]: any}) => void;\n  handleCancel: () => void;\n  uploadLogoImage: (file: UploadFile) => void;\n  t: (key: string) => string;\n}\nconst CategoryModal = (props: Props) => {\n  const translate = props.t;\n\n  const CategoryValidateSchema = yup.object().shape({\n    name: yup.string()\n      .required(translate('admin-categories:pleaseInputCategoryName')),\n    imageUrl: yup.string()\n      .required(translate('admin-categories:pleaseUploadCategoryImage')),\n  });\n\n  const initialValues = props.categoryInfo && props.categoryInfo._id ? {\n    name: props.categoryInfo.name,\n    imageUrl: props.categoryInfo.imageUrl,\n  } : {\n    name: '',\n    imageUrl: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validateOnChange={false}\n      validationSchema={CategoryValidateSchema}\n      onSubmit={async (values, formikBag) => {\n        await props.handleOk(values);\n        formikBag.resetForm({\n          name: '',\n          imageUrl: '',\n        });\n      }}\n    >\n      {(categoryContext: FormikContext<any>) => (\n        <Modal\n          title={props.categoryInfo && props.categoryInfo._id ? `${translate('admin-categories:edit-category')}: ${props.categoryInfo.name}` : `${translate('admin-categories:create-category')}`}\n          visible={props.visible}\n          onOk={categoryContext.handleSubmit}\n          onCancel={props.handleCancel}\n          okText={translate('common:save')}\n          cancelText={translate('common:cancel')}\n          confirmLoading={props.loading}\n          className='category-modal'\n          width={420}\n        >\n          <Form onSubmit={categoryContext.handleSubmit}>\n            <Form.Item\n              label={`${translate('admin-categories:category-name')}`}\n              validateStatus={categoryContext.errors.name ? 'error' : undefined}\n              help={categoryContext.errors.name}\n            >\n              <Input\n                value={categoryContext.values.name}\n                onChange={categoryContext.handleChange}\n                placeholder={translate('admin-categories:category-name')}\n                type='text'\n                name='name'\n                onBlur={() => validateField({\n                  fieldName: 'name',\n                  validateSchema: CategoryValidateSchema,\n                  context: categoryContext,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label={`${translate('admin-categories:category-image')}`}\n              validateStatus={categoryContext.errors.imageUrl ? 'error' : undefined}\n              help={categoryContext.errors.imageUrl}\n            >\n              <Card\n                style={{\n                  padding: '20px 20px 0px 20px',\n                  margin: '0 auto',\n                }}\n                cover={categoryContext.values.imageUrl ? <img src={categoryContext.values.imageUrl} style={{width: '100%', height: 'auto'}} /> : null}\n              >\n                <Card.Meta\n                  title={\n                    <Upload\n                      beforeUpload={(file: UploadFile) => {\n                        props.uploadLogoImage(file);\n                        getBase64Image(file, (result: string) => {\n                          categoryContext.setFieldValue('imageUrl', result);\n                        });\n                        return false;\n                      }}\n                      showUploadList={false}\n                    >\n                      <Button icon='upload'>{translate('admin-categories:upload-category-image')}</Button>\n                    </Upload>\n                  }\n                />\n              </Card>\n            </Form.Item>\n          </Form>\n        </Modal>\n      )}\n    </Formik>\n  );\n};\n\nexport default withNamespaces('admin-categoires')(CategoryModal);\n"],"file":"CategoryModal.js"}