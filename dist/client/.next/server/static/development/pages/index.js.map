{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AdminLayout/AdminSearchbar.tsx","webpack:///./components/AdminLayout/AdminSidebar.tsx","webpack:///./components/AdminLayout/Authorize.tsx","webpack:///./components/AdminLayout/PagingButtons.tsx","webpack:///./components/CommonLayout/Container.tsx","webpack:///./components/CommonLayout/CurrentTime.tsx","webpack:///./components/CommonLayout/DropdownMenu.tsx","webpack:///./components/CommonLayout/Footer.tsx","webpack:///./components/CommonLayout/ForgotPasswordModal.tsx","webpack:///./components/CommonLayout/HamburgerMenu.tsx","webpack:///./components/CommonLayout/Header.tsx","webpack:///./components/CommonLayout/LeftSideBar.tsx","webpack:///./components/CommonLayout/LeftSideBarWithoutMenu.tsx","webpack:///./components/CommonLayout/LoginModal.tsx","webpack:///./components/CommonLayout/MainContent.tsx","webpack:///./components/CommonLayout/NotificationDropdown.tsx","webpack:///./components/CommonLayout/RegisterModal.tsx","webpack:///./components/CommonLayout/RightSideBar.tsx","webpack:///./components/MachineDetailBox/MachineDetailBox.tsx","webpack:///./components/MachineItem/MachineItem.tsx","webpack:///./components/MapWithSearchBox/MapWithSearchBox.tsx","webpack:///./components/index.ts","webpack:///./config/default.config.ts","webpack:///./config/index.ts","webpack:///./config/override.config.ts","webpack:///./core/checkFollowStatus.ts","webpack:///./core/checkIsMobile.ts","webpack:///./core/checkPermission.ts","webpack:///./core/checkSubdomain.ts","webpack:///./core/clearCookie.ts","webpack:///./core/constants.ts","webpack:///./core/convertVietnamese.ts","webpack:///./core/firebase.ts","webpack:///./core/formatter.ts","webpack:///./core/generateFilters.ts","webpack:///./core/generateRecentViewedKey.ts","webpack:///./core/generateSearchUrl.ts","webpack:///./core/getBase64Image.ts","webpack:///./core/getImageUrl.ts","webpack:///./core/getMenuConfigs.ts","webpack:///./core/getShopUrl.ts","webpack:///./core/index.ts","webpack:///./core/metadata.ts","webpack:///./core/setCookie.ts","webpack:///./core/submitLoginForm.ts","webpack:///./core/validateField.ts","webpack:///./i18n/i18n.ts","webpack:///./i18n/index.ts","webpack:///./layouts/Admin/AdminLayout.tsx","webpack:///./layouts/Admin/components/CollapsedButton.tsx","webpack:///./layouts/Admin/components/HeaderDropdown.tsx","webpack:///./layouts/Admin/components/SideBar.tsx","webpack:///./layouts/Auth/AuthLayout.tsx","webpack:///./layouts/Page/CommonLayout.tsx","webpack:///./layouts/Page/Page.tsx","webpack:///./layouts/index.ts","webpack:///./modules/admin/menuConfigs.ts","webpack:///./modules/machine-news/screens/HomePageScreen/HomePageScreen.tsx","webpack:///./modules/machine-news/screens/HomePageScreen/HomePageScreenDbTest.ts","webpack:///./modules/machine-news/screens/HomePageScreen/components/BrandList.tsx","webpack:///./modules/machine-news/screens/HomePageScreen/components/CityList.tsx","webpack:///./modules/machine-news/screens/HomePageScreen/components/CommonKeywords.tsx","webpack:///./modules/machine-news/screens/HomePageScreen/components/DetailsHomePage.tsx","webpack:///./modules/machine-news/screens/HomePageScreen/components/MachineList.tsx","webpack:///./pages/index.tsx","webpack:///./routes.ts","webpack:///./services/index.ts","webpack:///./services/service-proxies.ts","webpack:///./store/index.ts","webpack:///./store/models/follow/model.ts","webpack:///./store/models/metadata/model.ts","webpack:///./store/models/profile/model.ts","webpack:///./store/models/search/model.ts","webpack:///./store/store.ts","webpack:///./store/withRematch.ts","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@rematch/core\"","webpack:///external \"@rematch/loading\"","webpack:///external \"antd/lib/avatar\"","webpack:///external \"antd/lib/avatar/style\"","webpack:///external \"antd/lib/badge\"","webpack:///external \"antd/lib/badge/style\"","webpack:///external \"antd/lib/button\"","webpack:///external \"antd/lib/button/style\"","webpack:///external \"antd/lib/col\"","webpack:///external \"antd/lib/col/style\"","webpack:///external \"antd/lib/divider\"","webpack:///external \"antd/lib/divider/style\"","webpack:///external \"antd/lib/dropdown\"","webpack:///external \"antd/lib/dropdown/style\"","webpack:///external \"antd/lib/form\"","webpack:///external \"antd/lib/form/style\"","webpack:///external \"antd/lib/icon\"","webpack:///external \"antd/lib/icon/style\"","webpack:///external \"antd/lib/input\"","webpack:///external \"antd/lib/input/style\"","webpack:///external \"antd/lib/layout\"","webpack:///external \"antd/lib/layout/style\"","webpack:///external \"antd/lib/list\"","webpack:///external \"antd/lib/list/style\"","webpack:///external \"antd/lib/menu\"","webpack:///external \"antd/lib/menu/style\"","webpack:///external \"antd/lib/message\"","webpack:///external \"antd/lib/message/style\"","webpack:///external \"antd/lib/modal\"","webpack:///external \"antd/lib/modal/style\"","webpack:///external \"antd/lib/row\"","webpack:///external \"antd/lib/row/style\"","webpack:///external \"antd/lib/select\"","webpack:///external \"antd/lib/select/style\"","webpack:///external \"antd/lib/spin\"","webpack:///external \"antd/lib/spin/style\"","webpack:///external \"antd/lib/tabs\"","webpack:///external \"antd/lib/tabs/style\"","webpack:///external \"antd/lib/tag\"","webpack:///external \"antd/lib/tag/style\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"formik\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"js-cookie\"","webpack:///external \"lodash\"","webpack:///external \"moment\"","webpack:///external \"next-i18next\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-device-detect\"","webpack:///external \"react-firebaseui/StyledFirebaseAuth\"","webpack:///external \"react-google-maps\"","webpack:///external \"react-google-maps/lib/components/places/SearchBox\"","webpack:///external \"react-redux\"","webpack:///external \"react-slick\"","webpack:///external \"recompose\"","webpack:///external \"uuid\"","webpack:///external \"yup\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\nimport { Row, Col, Input, Button } from 'antd';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  placeholder: string;\n  value?: string;\n  hasCreate?: boolean;\n  showSearch: boolean;\n  handleSearchChange: (value: string) => void;\n  handleSearch: (value: string) => void;\n  onCreateClick?: () => void;\n  t: (key: string) => string;\n}\nconst AdminSearchbar = withNamespaces('common')((props: Props) => {\n  const translate = props.t;\n  return (\n    <Row type='flex' style={{marginBottom: '24px'}} justify='space-between'>\n      <Col xs={12} xl={8}>\n        {props.showSearch && (\n          <Input.Search\n            enterButton={true}\n            placeholder={props.placeholder}\n            onChange={(e) => props.handleSearchChange(e.target.value)}\n            onSearch={(value) => props.handleSearch(value)}\n          />\n        )}\n      </Col>\n      <Col xs={12} xl={16} style={{textAlign: 'right'}}>\n        {props.hasCreate && (\n          <Button type='primary' onClick={props.onCreateClick}>{translate('common:create')}</Button>\n        )}\n      </Col>\n    </Row>\n  );\n});\n\nexport {\n  AdminSearchbar,\n};\n","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { withNamespaces } from '@client/i18n';\nimport './AdminSidebar.less';\n\ninterface Props {\n  t: (key: string) => string;\n}\nexport const AdminSidebar = withNamespaces('admin-reports')((props: Props) => {\n  const menuWidth = 256;\n  const menuTheme = 'light';\n  const translate = props.t;\n\n  return (\n    <Layout.Sider\n      trigger={null}\n      collapsible={true}\n      breakpoint='lg'\n      width={menuWidth}\n      theme={menuTheme}\n      className='sider'\n    >\n      <div className='logo' id='logo'>\n        <a href='/users'>\n          <img src='/static/images/logo-timmay.png' alt='logo' />\n        </a>\n      </div>\n\n      <Menu\n        key='Menu'\n        mode='inline'\n        theme={menuTheme}\n        style={{ padding: '16px 0', width: '100%' }}\n        className='sider'\n      >\n        <Menu.Item key='/admin/reports'>\n          <a href='/admin/reports'>\n            <Icon type='warning' />\n            <span>{translate('admin-reports:reports')}</span>\n          </a>\n        </Menu.Item>\n      </Menu>\n    </Layout.Sider>\n  );\n});\n","import React from 'react';\nimport { Spin } from 'antd';\nimport './Authorize.less';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Router from 'next/router';\nimport { getOrCreateStore, initStore } from '@client/store';\nimport { config } from '@client/config';\nimport { initializeFirebaseApp, getMenuConfigs } from '@client/core';\nimport { AdminLayout } from '@client/layouts';\nimport { i18n } from '@client/i18n';\n\ninterface AuthorizeProps {}\ninterface AuthorizeState {\n  isAuthenticated?: boolean;\n  isAuthorized?: boolean;\n  openedSubMenu: string;\n  selectedMenuItem: string;\n  currentLanguage: string;\n}\nexport const Authorize = (Component: any, permission: any, authenticationRequired?: boolean, layoutName?: string) => {\n  return (props: any) => {\n    class AuthorizeComponent extends React.Component<AuthorizeProps, AuthorizeState> {\n      state: AuthorizeState = {\n        isAuthenticated: undefined,\n        isAuthorized: undefined,\n        openedSubMenu: '',\n        selectedMenuItem: '',\n        currentLanguage: '',\n      };\n\n      componentDidMount () {\n        initializeFirebaseApp();\n        firebase.auth().onAuthStateChanged(async (user) => {\n          if (!user) {\n            this.setState({\n              isAuthenticated: false,\n            });\n          } else {\n            const idTokenInfo = await user.getIdTokenResult();\n            let isAuthorized = false;\n            if (!permission || permission.length === 0) {\n              isAuthorized = true;\n            } else if (permission && permission.length && idTokenInfo.claims.permissions) {\n              const filterPermission = permission.filter((val: string) => {\n                return idTokenInfo.claims.permissions.indexOf(val) === -1;\n              });\n\n              filterPermission && filterPermission.length ? isAuthorized = false : isAuthorized = true;\n            }\n\n            if (isAuthorized) {\n              const authUser = {\n                id: idTokenInfo.claims.user_id,\n                email: idTokenInfo.claims.email,\n                fullName: idTokenInfo.claims.name,\n                avatarUrl: idTokenInfo.claims.avatarUrl,\n                roles: idTokenInfo.claims.roles,\n                permissions: idTokenInfo.claims.permissions,\n              };\n              getOrCreateStore(initStore, {}).dispatch.profileModel.updateProfileInfo(authUser);\n\n              const pathname = window.location.pathname;\n              let openedSubMenu = '';\n              getMenuConfigs().map((subMenu: any) => {\n                subMenu.items.map((item: any) => {\n                  if (item.path === pathname) {\n                    openedSubMenu = subMenu.name;\n                  }\n                });\n              });\n\n              this.setState({\n                isAuthenticated: true,\n                isAuthorized,\n                openedSubMenu,\n                selectedMenuItem: pathname,\n                currentLanguage: i18n.i18n.language ? i18n.i18n.language : config.i18n.defaultLang,\n              });\n            } else {\n              this.setState({\n                isAuthenticated: true,\n                isAuthorized,\n              });\n            }\n          }\n        });\n      }\n\n      render () {\n        if (this.state.isAuthenticated === false) {\n          if (authenticationRequired) {\n            Router.push('/auth/login');\n          }\n        }\n\n        if (this.state.isAuthorized === false) {\n          Router.push('/_error');\n        }\n\n        const renderAdminLayout = () => {\n          return (\n            <div>\n              {(this.state.isAuthenticated && this.state.isAuthorized) || !authenticationRequired ? (\n                <AdminLayout\n                  openedSubMenu={this.state.openedSubMenu}\n                  selectedMenuItem={this.state.selectedMenuItem}\n                  currentLanguage={this.state.currentLanguage}\n                >\n                  <Component {...props} />\n                </AdminLayout>\n              ) : (\n                <div className='loader'>\n                  <Spin spinning={true} />\n                </div>\n              )}\n            </div>\n          );\n        };\n\n        switch (layoutName) {\n          case 'admin':\n            return renderAdminLayout();\n          default:\n            return renderAdminLayout();\n        }\n      }\n    }\n\n    return <AuthorizeComponent />;\n  };\n};\n","import React from 'react';\nimport { Button, Icon } from 'antd';\n\ninterface Props {\n  before?: string;\n  after?: string;\n  getPrevPage: () => void;\n  getNextPage: () => void;\n}\nconst PagingButtons = (props: Props) => {\n  return (\n    <div className='pagination' style={{display: 'flex', justifyContent: 'flex-end'}}>\n      {props.before && (\n        <Button onClick={props.getPrevPage}><Icon type='left' /> Prev</Button>\n      )}\n      {props.after && (\n        <Button onClick={props.getNextPage}>Next <Icon type='right' /></Button>\n      )}\n    </div>\n  );\n};\n\nexport {\n  PagingButtons,\n};\n","import * as React from 'react';\nimport './Container.less';\ninterface Props { }\ninterface State { }\n\nclass Container extends React.Component<Props, State> {\n  render () {\n    return (\n      <div className='container'>\n      {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import * as React from 'react';\nimport './CurrentTime.less';\ninterface Props { }\ninterface State {\n  date: any;\n}\n\nlet timerID: any;\n\nclass CurrentTime extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    timerID = setInterval(\n      () => this.tick(),\n      60000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n  render () {\n    const vietnameseDay = ['Thứ hai', 'Thứ ba', 'Thứ tư', 'Thứ năm', 'Thứ sáu', 'Thứ bảy', 'Chủ nhật'];\n    const day = vietnameseDay[this.state.date.getDay()];\n    const date = this.state.date.getDate() < 10 ? `0${this.state.date.getDate()}` : this.state.date.getDate();\n    const month = this.state.date.getMonth() + 1 < 10 ? `0${this.state.date.getMonth() + 1}` : this.state.date.getMonth() + 1;\n    const year = this.state.date.getFullYear();\n    const hours = this.state.date.getHours() < 10 ? `0${this.state.date.getHours()}` : this.state.date.getHours();\n    const minutes = this.state.date.getMinutes() < 10 ? `0${this.state.date.getMinutes()}` : this.state.date.getMinutes();\n    const timeZone = `GMT${this.state.date.getTimezoneOffset() / -60 > 0 ? `+${this.state.date.getTimezoneOffset() / -60}` : this.state.date.getTimezoneOffset() / -60}`;\n\n    return (\n      <div className='current-time'>\n           <span className='city-time'>\n           {`${day}, ${date}/${month}/${year}, ${hours}:${minutes} (${timeZone})`}\n           </span>\n      </div>\n    );\n  }\n}\n\nexport default CurrentTime;\n","import React from 'react';\nimport { Menu, Divider } from 'antd';\nimport { ProfileState } from '@client/store';\nimport './DropdownMenu.less';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  profileState: ProfileState;\n  logOut: () => void;\n  t: (key: string) => string;\n}\nconst MenuItem = Menu.Item;\nclass DropdownMenu extends React.Component<Props, any> {\n  render() {\n    const translate = this.props.t;\n    return (\n      <Menu className='dropdown-menu' mode='inline'>\n        <MenuItem key='1' className='user-image-container'>\n          <a href='/thong-tin-ca-nhan' className='link'>\n            <div className='user-image'>\n              {/* <img\n                src={this.props.profileState.authUser && this.props.profileState.authUser.avatarUrl ? this.props.profileState.authUser.avatarUrl : '/static/images/default-avatar.jpg'}\n                style={{marginLeft: '50%', transform: 'translateX(-50%)'}}\n              /> */}\n              <div\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  backgroundImage: `url(${this.props.profileState.authUser && this.props.profileState.authUser.avatarUrl ? this.props.profileState.authUser.avatarUrl : '/static/images/default-avatar.jpg'})`,\n                  backgroundRepeat: 'no-repeat',\n                  backgroundPosition: 'center',\n                  backgroundSize: 'cover',\n                }}\n              />\n            </div>\n\n            <div className='user-info'>\n              <span className='title'>{this.props.profileState.authUser!.fullName}</span>\n              <span className='title small-text'>{translate('common:edit-your-profile')}</span>\n            </div>\n          </a>\n        </MenuItem>\n\n        <Divider />\n\n        <MenuItem key='2' className='menu-item-container'>\n          <a href='/quan-li-tin-dang' className='link'>\n            <img src='/static/images/quan-li-tin-dang-icon.jpg' className='item-image' />\n            <div className='item-info'>\n              <span className='item-title'>{translate('common:news-managenment')}</span>\n            </div>\n          </a>\n        </MenuItem>\n        <MenuItem key='3' className='menu-item-container'>\n          <a href='/tin-da-luu' className='link'>\n            <img src='/static/images/tin-da-luu-icon.jpg' className='item-image' />\n            <div className='item-info'>\n              <span className='item-title'>{translate('common:followed-news')}</span>\n            </div>\n          </a>\n        </MenuItem>\n\n        <Divider />\n\n        {this.props.profileState.authUser && this.props.profileState.authUser.shopDomain ? (\n          <MenuItem key='4' className='menu-item-container'>\n            <a href='/cua-hang-cua-toi' className='link'>\n              <img src='/static/images/cua-hang-cua-toi-icon.jpg' className='item-image' />\n              <div className='item-info'>\n                <span className='item-title'>{translate('common:my-shop')}</span>\n              </div>\n            </a>\n          </MenuItem>\n        ) : (\n            <MenuItem key='4' className='menu-item-container'>\n              <a href='/tao-cua-hang' className='link'>\n                <img src='/static/images/cua-hang-cua-toi-icon.jpg' className='item-image' />\n                <div className='item-info'>\n                  <span className='item-title'>{translate('common:create-your-shop')}</span>\n                </div>\n              </a>\n            </MenuItem>\n          )}\n        <MenuItem key='5' className='menu-item-container'>\n          <a href='#' className='link'>\n            <img src='/static/images/dang-ki-quang-cao-icon.jpg' className='item-image' />\n            <div className='item-info'>\n              <span className='item-title'>{translate('common:advertisement-registration')}</span>\n            </div>\n          </a>\n        </MenuItem>\n\n        <Divider />\n\n        <MenuItem key='6' className='menu-item-container'>\n          <a href='#' className='link'>\n            <img src='/static/images/tro-giup-icon.jpg' className='item-image' />\n            <div className='item-info'>\n              <span className='item-title'>{translate('common:help')}</span>\n            </div>\n          </a>\n        </MenuItem>\n\n        <Divider />\n\n        {(this.props.profileState.authUser && this.props.profileState.authUser.roles && this.props.profileState.authUser.roles.indexOf('5c7f747708898183ac62f2af') > -1) && (\n          <MenuItem key='7' className='menu-item-container'>\n            <a href='/quan-ly/danh-sach-hang' className='link'>\n              <img src='/static/images/admin.png' className='item-image' />\n              <div className='item-info'>\n                <span className='item-title'>{translate('common:admin')}</span>\n              </div>\n            </a>\n          </MenuItem>\n        )}\n\n        {(this.props.profileState.authUser && this.props.profileState.authUser.roles && this.props.profileState.authUser.roles.indexOf('5c7f747708898183ac62f2af') > -1) && (\n          <Divider />\n        )}\n\n        <MenuItem key='8' className='menu-item-container'>\n          <a onClick={this.props.logOut} className='link'>\n            <img src='/static/images/icon-signout.png' className='item-image' />\n            <div className='item-info'>\n              <span className='item-title'>{translate('common:log-out')}</span>\n            </div>\n          </a>\n        </MenuItem>\n      </Menu>\n    );\n  }\n}\n\nexport default withNamespaces('common')(DropdownMenu);\n","import * as React from 'react';\nimport './Footer.less';\nimport Container from './Container';\nimport { Row, Col } from 'antd';\nimport { withNamespaces } from '@client/i18n';\nimport { isMobile } from 'react-device-detect';\n\ninterface Props {\n  t: (key: string) => string;\n}\ninterface State {}\nconst Fragment = React.Fragment;\nclass Footer extends React.Component<Props, State> {\n  render() {\n    const translate = this.props.t;\n    return (\n      <footer className='footer'>\n        <Container>\n          <Row className='all-link'>\n            {!isMobile ? <Fragment>\n              <Col lg={6} md={6} xs={0} sm={0} className='footer-item'>\n                <h3>{translate('common:link')}</h3>\n                <img src='/static/images/Facebook.png' />\n                <span> Facebook</span><br />\n                <img src='/static/images/Youtube.png' />\n                <span> Youtube</span><br />\n              </Col>\n              <Col lg={6} md={6} xs={0} sm={0} className='footer-item'>\n                <h3>{translate('common:about-timmay')}</h3>\n                <span>{translate('common:about-us')}</span><br />\n                <span>{translate('common:contact')}</span><br />\n              </Col>\n              <Col lg={6} md={6} xs={0} sm={0} className='footer-item'>\n                <h3>{translate('common:support-customer')}</h3>\n                <span>{translate('common:central-of-support')}</span><br />\n                <span>{translate('common:posting-regulations')}</span><br />\n                <span>{translate('common:operating-regulations')}</span><br />\n              </Col>\n              <Col lg={6} md={6} xs={24} sm={24} className='footer-item'>\n                <h3>{translate('common:certificate')}</h3>\n                <img src={'/static/images/certificate.png'} width='50%' />\n              </Col>\n            </Fragment> :\n              <Row>\n                <Col lg={24} md={24} xs={24} sm={24} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '40px'  }}>\n                  <a href='#' style={{ marginLeft: '15px' }}>\n                    <span>{translate('common:about-us')} </span><br />\n                  </a>\n                  <a href='#' style={{ marginLeft: '15px' }}>\n                    <span> Facebook </span><br />\n                  </a>\n                  <a href='#' style={{ marginLeft: '15px' }}>\n                    <span>{translate('common:central-of-support')}</span><br />\n                  </a>\n                </Col>\n                <Col lg={24} md={24} xs={24} sm={24} style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                  <h3>{translate('common:certificate')}</h3>\n                  <img src={'/static/images/certificate.png'} width='50%' />\n                </Col>\n              </Row>\n            }\n          </Row>\n          <Row style={{ textAlign: 'center', paddingBottom: '20px' }} className='address'>\n            <span>{translate('common:info-footer')}<br />\n              {translate('common:info-footer-2')}<br />\n              {translate('common:info-footer-3')}<br />\n              {translate('common:info-footer-4')}</span>\n          </Row>\n          <Row className='license'>\n            <span> Bản quyền thuộc về Timmay.vn </span>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default withNamespaces('common')(Footer);\n","import React from 'react';\nimport { Modal, Form, Input, Icon, message, Select, Button } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { initializeFirebaseApp, validateField } from '@client/core';\nimport * as yup from 'yup';\nimport { withNamespaces } from '@client/i18n';\nimport { config } from '@client/config';\nimport { Formik, FormikContext } from 'formik';\nimport { getServiceProxy } from '@client/services';\nimport './ForgotPasswordModal.less';\n\ninterface Props extends FormComponentProps {\n  type: 'phone'|'email';\n  visible: boolean;\n  onCancel: () => void;\n  t: (key: string) => string;\n}\ninterface State {\n  loading: boolean;\n  gettingCode: boolean;\n  phone: {\n    phoneNo: string;\n    countryCode: string;\n  };\n}\nclass BaseForgotPasswordModal extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    gettingCode: false,\n    phone: {\n      phoneNo: '',\n      countryCode: '',\n    },\n  };\n\n  getCode = async (values: {countryCode: string; phoneNo: string}) => {\n    this.setState({\n      phone: {\n        phoneNo: values.phoneNo,\n        countryCode: values.countryCode,\n      },\n      gettingCode: true,\n    });\n\n    try {\n      const fullPhoneNumber = `${values.countryCode}${values.phoneNo}`;\n      const serviceProxy = getServiceProxy();\n      const phoneNoExistResult = await serviceProxy.checkPhoneNoExist(fullPhoneNumber);\n      if (phoneNoExistResult.phoneNoExist) {\n        const appVerifier = (window as any).recaptchaVerifier;\n        const confirmationResult = await firebase.auth().signInWithPhoneNumber(fullPhoneNumber, appVerifier);\n        (window as any).confirmationResult = confirmationResult;\n        message.success(this.props.t('common:sendVerifyCodeSuccess'));\n        this.setState({\n          gettingCode: false,\n        });\n      } else {\n        this.setState({\n          gettingCode: false,\n        });\n        message.error(this.props.t('common:notFoundPhoneNo'));\n      }\n    } catch (error) {\n      message.error(this.props.t(error.code));\n      this.setState({\n        gettingCode: false,\n      });\n    }\n  }\n\n  handleOk = async (values: {[key: string]: any}) => {\n    try {\n      if (this.props.type === 'email') {\n        initializeFirebaseApp();\n        firebase.auth().sendPasswordResetEmail(values.email);\n        message.success(this.props.t('common:send-reset-password-email-success'));\n        this.props.onCancel();\n      } else {\n        if (await (window as any).confirmationResult) {\n          this.setState({\n            loading: true,\n          });\n\n          await (window as any).confirmationResult.confirm(values.verifyCode);\n          const idToken = await firebase.auth().currentUser!.getIdToken();\n          await fetch(`${config.url.api}/auth/update-password`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              idToken,\n              newPassword: values.password,\n            }),\n          });\n          firebase.auth().signOut();\n\n          message.success(this.props.t('common:update-password-success'));\n          this.setState({\n            loading: false,\n          });\n          this.props.onCancel();\n        } else {\n          message.error(this.props.t('common:invalid-verify-code'));\n        }\n      }\n    } catch (error) {\n      message.error(this.props.t(`common:${error.code || error.message}`));\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render () {\n    const translate = this.props.t;\n\n    const ForgotEmailPasswordValidateSchema = yup.object().shape({\n      email: yup.string()\n        .required(translate('common:pleaseInputVerifyCode'))\n        .matches(config.regex.email, translate('common:invalidEmail')),\n    });\n\n    const PhoneNumberValidateSchema = yup.object().shape({\n      countryCode: yup.string()\n        .required(translate('common:pleaseInputCountryCode')),\n      phoneNo: yup.string()\n        .matches(config.regex.phone, translate('common:invalidPhoneNo'))\n        .required(translate('common:pleaseInputPhoneNo')),\n    });\n\n    const ForgotPhonePasswordValidateSchema = yup.object().shape({\n      verifyCode: yup.string()\n        .required(translate('common:pleaseInputVerifyCode')),\n      password: yup.string()\n        .required(translate('common:pleaseInputPassword'))\n        .max(100, translate('common:passwordTooLong'))\n        .matches(config.regex.password, translate('common:invalidPassword')),\n      confirmPassword: yup.string()\n        .required(translate('common:pleaseConfirmPassword')),\n    });\n\n    if (this.props.type === 'email') {\n      return (\n        <Formik\n          initialValues={{\n            email: '',\n          }}\n          enableReinitialize={true}\n          validateOnChange={false}\n          validationSchema={ForgotEmailPasswordValidateSchema}\n          onSubmit={async (values, formikBag) => {\n            await this.handleOk(values);\n            formikBag.resetForm({\n              email: '',\n            });\n          }}\n        >\n          {(context: FormikContext<{email: string}>) => (\n            <Modal\n              title={translate('common:forgotPassword')}\n              visible={this.props.visible}\n              onOk={context.handleSubmit}\n              onCancel={this.props.onCancel}\n              confirmLoading={this.state.loading}\n              okText={translate('common:send-reset-password-email')}\n              cancelText={translate('common:cancel')}\n            >\n              <Form onSubmit={context.handleSubmit}>\n                <Form.Item\n                  label={translate('common:your-email')}\n                  validateStatus={context.errors.email ? 'error' : undefined}\n                  help={context.errors.email}\n                >\n                  <Input\n                    value={context.values.email}\n                    onChange={context.handleChange}\n                    onBlur={() => validateField({\n                      fieldName: 'email',\n                      validateSchema: ForgotEmailPasswordValidateSchema,\n                      context,\n                    })}\n                    name='email'\n                    prefix={<Icon type='mail' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder={translate('common:your-email')}\n                  />\n                </Form.Item>\n              </Form>\n            </Modal>\n          )}\n        </Formik>\n      );\n    } else {\n      return (\n        <Modal\n          className='reset-password-modal'\n          visible={this.props.visible}\n          footer={null}\n          onCancel={this.props.onCancel}\n          destroyOnClose={true}\n        >\n          <Formik\n            initialValues={{\n              countryCode: '+84',\n              phoneNo: '',\n            }}\n            validateOnChange={false}\n            validationSchema={PhoneNumberValidateSchema}\n            onSubmit={async (values) => {\n              await this.getCode(values);\n            }}\n          >\n            {(context: FormikContext<{\n              countryCode: string;\n              phoneNo: string;\n            }>) => (\n              <Form.Item validateStatus={context.errors.phoneNo || context.errors.countryCode ? 'error' : undefined} help={context.errors.phoneNo || context.errors.countryCode}>\n                <Input.Search\n                  addonBefore={(\n                    <Select style={{ width: 120 }} value={context.values.countryCode} onChange={context.handleChange}>\n                      <Select.Option value='+84'>VN (+84)</Select.Option>\n                    </Select>\n                  )}\n                  value={context.values.phoneNo}\n                  onChange={context.handleChange}\n                  onBlur={context.handleBlur}\n                  placeholder={translate('common:phoneNo')}\n                  enterButton={<Button type='primary' loading={this.state.gettingCode}>{translate('common:sendCode')}</Button>}\n                  onSearch={context.handleSubmit as any}\n                  name='phoneNo'\n                />\n              </Form.Item>\n            )}\n          </Formik>\n\n          <Formik\n            initialValues={{\n              verifyCode: '',\n              password: '',\n              confirmPassword: '',\n            }}\n            validateOnChange={false}\n            validationSchema={ForgotPhonePasswordValidateSchema}\n            onSubmit={async (values, formikBag) => {\n              await this.handleOk(values);\n              formikBag.resetForm({\n                verifyCode: '',\n                password: '',\n                confirmPassword: '',\n              });\n            }}\n          >\n            {(context: FormikContext<{\n              verifyCode: string;\n              password: string;\n              confirmPassword: string;\n            }>) => (\n              <Form onSubmit={context.handleSubmit}>\n                <Form.Item validateStatus={context.errors.verifyCode ? 'error' : undefined} help={context.errors.verifyCode}>\n                  <Input\n                    value={context.values.verifyCode}\n                    onChange={context.handleChange}\n                    onBlur={() => validateField({\n                      fieldName: 'verifyCode',\n                      validateSchema: ForgotPhonePasswordValidateSchema,\n                      context,\n                    })}\n                    placeholder={translate('common:verifyCode')}\n                    name='verifyCode'\n                  />\n                </Form.Item>\n\n                <Form.Item validateStatus={context.errors.password ? 'error' : undefined} help={context.errors.password}>\n                  <Input\n                    value={context.values.password}\n                    onChange={context.handleChange}\n                    onBlur={() => validateField({\n                      fieldName: 'password',\n                      validateSchema: ForgotPhonePasswordValidateSchema,\n                      context,\n                    })}\n                    placeholder={translate('common:password')}\n                    type='password'\n                    name='password'\n                  />\n                </Form.Item>\n\n                <Form.Item validateStatus={context.errors.confirmPassword ? 'error' : undefined} help={context.errors.confirmPassword}>\n                  <Input\n                    value={context.values.confirmPassword}\n                    onChange={context.handleChange}\n                    onBlur={() => {\n                      if (context.values.confirmPassword && context.values.confirmPassword !== context.values.password) {\n                        context.setFieldError('confirmPassword', translate('common:confirmPasswordDidntMatch'));\n                      } else {\n                        validateField({\n                          fieldName: 'confirmPassword',\n                          validateSchema: ForgotPhonePasswordValidateSchema,\n                          context,\n                        });\n                      }\n                    }}\n                    placeholder={translate('common:confirmPassword')}\n                    type='password'\n                    name='confirmPassword'\n                  />\n                </Form.Item>\n\n                <Form.Item className='button-container' style={{textAlign: 'right'}}>\n                  <Button type='primary' className='login-button' htmlType='submit' loading={this.state.loading}>{translate('common:update-password')}</Button>\n                  <br />\n                </Form.Item>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n      );\n    }\n  }\n}\n\nexport const ForgotPasswordModal = withNamespaces('common')(Form.create()(BaseForgotPasswordModal));\n","import * as React from 'react';\nimport { Row, Col } from 'antd';\nimport { ProfileState, ProfileReducers, ProfileEffects } from '@client/store';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  toggle: boolean;\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  logOut: () => void;\n  handleHamburgerMenuClick: () => void;\n  t: (key: string) => string;\n}\ninterface State { }\n\nclass HamburgerMenu extends React.Component<Props, State> {\n  state = {\n  };\n\n  render() {\n    const translate = this.props.t;\n    return (\n      <React.Fragment>\n        <div className='dark-overlay'\n          style={this.props.toggle ? {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 3,\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            transition: 'opacity .25s ease-in-out',\n          }\n            : { display: 'none' }\n          } onClick={this.props.handleHamburgerMenuClick}></div>\n        <nav role='navigation'>\n          <div id='menuToggle'>\n            <input\n              onClick={this.props.handleHamburgerMenuClick}\n              type='checkbox'\n              {...(this.props.toggle ? { checked: true } : {})}\n            />\n            <span className='hamburger' />\n            <span className='hamburger' />\n            <span className='hamburger' />\n            <ul id='menu' style={this.props.handleHamburgerMenuClick ? { overflowY: 'scroll', height: '100vh' } : {}}>\n              {\n                this.props.profileState && this.props.profileState.authUser && this.props.profileState.authUser.id ?\n                  (\n                    <div>\n                      <a href='/thong-tin-ca-nhan' className='link'>\n                        <Row className='menu-login'>\n                          <Col md={6} xs={6} sm={6}>\n                            <div className='image-hamburger-rounded'>\n                              <img\n                                src={this.props.profileState.authUser && this.props.profileState.authUser.avatarUrl ? this.props.profileState.authUser.avatarUrl : '/static/images/default-avatar.jpg'}\n                              />\n                            </div>\n                          </Col>\n                          <Col md={18} xs={18} sm={18}>\n                            <span className='menu-item-text menu-text-fullname'>{this.props.profileState.authUser!.fullName}</span><br />\n                            <span className='menu-item-text' style={{ color: '#FFC500', fontSize: '12px' }}>{translate('common:edit-your-profile')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n                      <hr />\n                      <a href='/dang-tin'>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/create-news.png'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:createNews')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n                      <a href='#'>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/icon-noti.png'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:notifications')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n                      <hr />\n                      <a href='/quan-li-tin-dang'>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/quan-li-tin-dang-icon.jpg'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:news-managenment')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n\n                      <a href='/tin-da-luu'>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/tin-da-luu-icon.jpg'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:followed-news')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n\n                      <hr />\n                      {this.props.profileState.authUser && this.props.profileState.authUser.shopDomain ?\n                        <a href='/cua-hang-cua-toi'>\n                          <Row className='menu-item'>\n                            <Col md={3} xs={3} sm={3}>\n                              <img\n                                src='/static/images/cua-hang-cua-toi-icon.jpg'\n                                width='100%'\n                              />\n                            </Col>\n                            <Col md={21} xs={21} sm={21}>\n                              <span className='menu-item-text'>{translate('common:my-shop')}</span>\n                            </Col>\n                          </Row>\n                        </a> :\n                        <a href='/tao-cua-hang'>\n                          <Row className='menu-item'>\n                            <Col md={3} xs={3} sm={3}>\n                              <img\n                                src='/static/images/tao-cua-hang-icon.jpg'\n                                width='100%'\n                              />\n                            </Col>\n                            <Col md={21} xs={21} sm={21}>\n                              <span className='menu-item-text'>{translate('common:create-your-shop')}</span>\n                            </Col>\n                          </Row>\n                        </a>\n                      }\n\n                      <a href='#'>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/dang-ki-quang-cao-icon.jpg'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:advertisement-registration')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n\n                      <hr />\n\n                      <a href='#'>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/tro-giup-icon.jpg'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:help')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n                      <hr />\n                      <a onClick={this.props.logOut}>\n                        <Row className='menu-item'>\n                          <Col md={3} xs={3} sm={3}>\n                            <img\n                              src='/static/images/icon-signout.png'\n                              width='100%'\n                            />\n                          </Col>\n                          <Col md={21} xs={21} sm={21}>\n                            <span className='menu-item-text'>{translate('common:log-out')}</span>\n                          </Col>\n                        </Row>\n                      </a>\n                    </div>\n                  )\n                  :\n                  (\n                    <Row className='menu-login' onClick={() => this.props.profileReducers.openModal({ modalName: 'login' })}>\n                      <Col md={6} xs={6} sm={6}>\n                        <img\n                          src='/static/images/default-avatar.jpg'\n                          width='100%'\n                        />\n                      </Col>\n                      <Col md={18} xs={18} sm={18}>\n                        <span className='menu-item-text'>{translate('common:login')} /\u001c {translate('common:register')}</span>\n                      </Col>\n                    </Row>\n                  )\n              }\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withNamespaces('common')(HamburgerMenu);\n","import * as React from 'react';\nimport { Row, Col, Button, Input, Dropdown, Icon, Badge, Tag, Select } from 'antd';\nimport './Header.less';\nimport { ProfileState, ProfileReducers, ProfileEffects } from '@client/store';\nimport DropdownMenu from './DropdownMenu';\nimport { RegisterModal } from './RegisterModal';\nimport { LoginModal } from './LoginModal';\nimport { config } from '@client/config';\nimport { initializeFirebaseApp, notificationState } from '@client/core';\nimport firebase from 'firebase/app';\nimport { changeLanguage, i18n, withNamespaces } from '@client/i18n';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport * as jsCookie from 'js-cookie';\nimport { Notification, CommonKeyword, User } from '../../services/service-proxies';\nimport { NotificationDropdown } from './NotificationDropdown';\nimport HamburgerMenu from './HamburgerMenu';\n\ninterface Props {\n  searchKeyword: string;\n  commonKeywords: CommonKeyword[];\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  fullName?: string;\n  updateFilters: (payload: { [key: string]: string | number }) => void;\n  t: (key: string) => string;\n}\ninterface State {\n  toggle: boolean;\n  loadingNotification: boolean;\n  notifications: {\n    data: Notification[];\n    before?: string;\n    after?: string\n  };\n  sortBy: string;\n  first: number;\n  unreadNotifications: number;\n  hasNotification: boolean;\n  currentLanguage: string;\n  searchBarStatus: boolean;\n  userProfile?: User;\n}\nconst Search = Input.Search;\nclass MainHeader extends React.Component<Props, State> {\n  state: State = {\n    toggle: false,\n    loadingNotification: false,\n    notifications: {\n      data: [],\n      before: undefined,\n      after: undefined,\n    },\n    sortBy: 'createdAt|desc',\n    first: 10,\n    unreadNotifications: 0,\n    hasNotification: true,\n    currentLanguage: config.i18n.defaultLang,\n    searchBarStatus: false,\n  };\n\n  componentDidMount() {\n    this.loadNotificationCount();\n    this.loadProfileInfo();\n\n    initializeFirebaseApp();\n    (window as any).recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      'size': 'invisible',\n    });\n\n    this.setState({\n      currentLanguage: i18n.i18n.language,\n    });\n  }\n\n  loadProfileInfo = async () => {\n    if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n      const idToken = jsCookie.get('token');\n      const serviceProxy = getServiceProxy(idToken);\n      const profileData = await serviceProxy.findPublicProfile(this.props.profileState.authUser.id);\n\n      this.setState({\n        userProfile: profileData,\n      });\n    }\n  }\n\n  loadNotificationCount = async () => {\n    // load notification count\n    if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n      const idToken = jsCookie.get('token');\n      const serviceProxy = getServiceProxy(idToken);\n      const countNotificationResult = await serviceProxy.countUnreadNotifications(this.props.profileState.authUser.id);\n\n      this.setState({\n        unreadNotifications: countNotificationResult.unreadNotifications,\n      });\n    }\n  }\n\n  onTurnOnSearchBar = () => {\n    this.setState({ searchBarStatus: true });\n  }\n\n  onTurnOffSearchBar = () => {\n    this.setState({ searchBarStatus: false });\n  }\n\n  changeLanguage = async (lang: string) => {\n    changeLanguage(lang);\n    window.location.reload();\n  }\n\n  handleHamburgerMenuClick = async () => {\n    await this.setState({ toggle: !this.state.toggle });\n    if (this.state.toggle) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    } else {\n      document.body.style.overflow = 'auto';\n      document.body.style.height = 'auto';\n    }\n  }\n\n  logOut = () => {\n    firebase.auth().signOut();\n    window.location.href = '/auth/logout';\n  }\n\n  loadNotifications = async (dropdownVisible: any) => {\n    if (dropdownVisible && this.state.notifications.data.length === 0 && this.state.hasNotification) {\n      this.setState({\n        loadingNotification: true,\n      });\n\n      try {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        const notificationsResult = await serviceProxy.findNotifications(\n          this.state.first,\n          this.state.sortBy,\n          undefined,\n          undefined,\n        );\n\n        this.setState({\n          loadingNotification: false,\n          notifications: notificationsResult,\n          hasNotification: notificationsResult.data.length > 0,\n        });\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n\n        this.setState({\n          loadingNotification: false,\n        });\n      }\n    }\n  }\n\n  loadMoreNotifications = async () => {\n    if (this.state.notifications.after) {\n      this.setState({\n        loadingNotification: true,\n      });\n\n      try {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        const notificationsResult = await serviceProxy.findNotifications(\n          this.state.first,\n          this.state.sortBy,\n          undefined,\n          this.state.notifications.after,\n        );\n\n        this.setState({\n          loadingNotification: false,\n          notifications: notificationsResult,\n        });\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n\n        this.setState({\n          loadingNotification: false,\n        });\n      }\n    }\n  }\n\n  readAllNotifications = async () => {\n    this.setState({\n      notifications: {\n        ...this.state.notifications,\n        data: this.state.notifications.data.map((item) => {\n          if (item.state === notificationState.UNREAD) {\n            return {\n              ...item,\n              state: notificationState.READ,\n            };\n          } else {\n            return item;\n          }\n        }) as any,\n      },\n      unreadNotifications: 0,\n    });\n\n    try {\n      if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        serviceProxy.readNotifications(this.props.profileState.authUser.id, {\n          operation: 'readAllNotifications',\n        });\n      }\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n\n  readNotification = async (notificationId: string) => {\n    this.setState({\n      notifications: {\n        ...this.state.notifications,\n        data: this.state.notifications.data.map((item) => item._id === notificationId ? {\n          ...item,\n          state: notificationState.READ,\n        } : item) as any,\n      },\n      unreadNotifications: this.state.unreadNotifications - 1,\n    });\n\n    try {\n      if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        serviceProxy.readNotifications(this.props.profileState.authUser.id, {\n          operation: 'readNotification',\n          payload: {\n            notificationId,\n          },\n        });\n      }\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n\n  render() {\n    const translate = this.props.t;\n    return (\n      <header id='header'>\n        <div className='dark-overlay'\n          onClick={this.onTurnOffSearchBar}\n          style={this.state.searchBarStatus ? {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 3,\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            transition: 'opacity .25s ease-in-out',\n          }\n            : { display: 'none' }\n          }></div>\n        <Row className='header-container'>\n          <Col lg={6}>\n            <a href='/'>\n              <img src='/static/images/logo-timmay.png' width='100%' />\n            </a>\n          </Col>\n          <Col lg={12}></Col>\n          <Col lg={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Select\n              value={this.state.currentLanguage}\n              style={{ width: '140px', border: '1px solid #000000', color: '#000000' }}\n              onChange={(value) => this.changeLanguage(value)}\n            >\n              <Select.Option value={config.i18n.VN}>{translate('common:vn')}</Select.Option>\n              <Select.Option value={config.i18n.EN}>{translate('common:en')}</Select.Option>\n            </Select>\n          </Col>\n        </Row>\n        <Row className='mobile-header' style={this.state.searchBarStatus ? { zIndex: 4 } : {}}>\n          <Col lg={1} md={1} xs={0} sm={0}>\n          </Col>\n          {this.state.searchBarStatus ?\n            <Col lg={22} md={22} sm={24} xs={24}>\n              <Search\n                placeholder={translate('common:search')}\n                onSearch={() =>\n                  window.location.href = `/tim-kiem${this.props.searchKeyword ? `?keyword=${this.props.searchKeyword}` : ''}`\n                }\n                onChange={(e) => this.props.updateFilters({ keyword: e.target.value })}\n                value={this.props.searchKeyword}\n                style={{ width: '100%', borderRadius: '0px' }}\n              />\n            </Col> :\n            <React.Fragment>\n              <Col lg={7} md={7} xs={12} sm={12}>\n                <a href='/'>\n                  <img src='/static/images/logo-timmay.png' width='100%' />\n                </a>\n              </Col>\n              <Col lg={11} md={11} xs={3} sm={3}>\n              </Col>\n              <Col lg={2} md={2} xs={4} sm={4}>\n                <img className='icon-search' src='/static/images/icon-search.png' width='30px' onClick={this.onTurnOnSearchBar} />\n              </Col>\n              <Col lg={2} md={2} xs={3} sm={3}>\n                <HamburgerMenu\n                  handleHamburgerMenuClick={this.handleHamburgerMenuClick}\n                  toggle={this.state.toggle}\n                  profileState={{\n                    ...this.props.profileState,\n                    authUser: {\n                      ...this.props.profileState.authUser,\n                      ...this.state.userProfile,\n                    } as any,\n                  }}\n                  profileReducers={this.props.profileReducers}\n                  logOut={this.logOut}\n                />\n              </Col>\n            </React.Fragment>}\n          <Col lg={1} md={1} xs={0} sm={0}>\n          </Col>\n        </Row>\n        <div className='header-desktop'>\n          <Row className='search-bar'>\n            <Col lg={6} md={8} sm={0} xs={0}>\n            </Col>\n            <Col lg={12} md={8} sm={0} xs={0}>\n              <Search\n                placeholder={translate('common:search')}\n                onSearch={() => window.location.href = `/tim-kiem${this.props.searchKeyword ? `?keyword=${this.props.searchKeyword}` : ''}`}\n                onChange={(e) => this.props.updateFilters({ keyword: e.target.value })}\n                value={this.props.searchKeyword}\n                style={{ width: '95%', height: '100%', borderRadius: '8px' }}\n              />\n            </Col>\n            {this.props.profileState.authUser && this.props.profileState.authUser.id ? (\n              <Col lg={6} md={8} sm={0} xs={0} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                <Dropdown\n                  overlay={\n                    <NotificationDropdown\n                      loadingNotification={this.state.loadingNotification}\n                      hasNext={Boolean(this.state.notifications.after)}\n                      loadMoreNotifications={this.loadMoreNotifications}\n                      readAllNotifications={this.readAllNotifications}\n                      notificationList={this.state.notifications.data}\n                      readNotification={this.readNotification}\n                    />\n                  }\n                  trigger={['click']}\n                  placement='bottomCenter'\n                  onVisibleChange={this.loadNotifications}\n                  overlayClassName='dropdown-menu'\n                >\n                  <Badge count={this.state.unreadNotifications}>\n                    <a><Icon type='bell' theme='filled' style={{ color: '#000000', fontSize: '24px' }} /></a>\n                  </Badge>\n                </Dropdown>\n\n                <Dropdown\n                  overlay={\n                    <DropdownMenu\n                      profileState={{\n                        ...this.props.profileState,\n                        authUser: {\n                          ...this.state.userProfile,\n                          ...this.props.profileState.authUser,\n                          avatarUrl: this.state.userProfile ? this.state.userProfile.avatarUrl : undefined,\n                          fullName: this.props.fullName ? this.props.fullName : this.state.userProfile ? this.state.userProfile.fullName : undefined,\n                        } as any,\n                      }}\n                      logOut={this.logOut}\n                    />\n                  }\n                  trigger={['click']}\n                  placement='bottomCenter'\n                  overlayClassName='dropdown-menu'\n                >\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    icon='user'\n                    style={{ marginRight: '10px', marginLeft: '16px' }}\n                  >\n                    {translate('common:account')}\n                  </Button>\n                </Dropdown>\n                <a href={`/dang-tin`}>\n                  <Button\n                    icon='plus'\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    style={{ width: '100%' }}\n                  >\n                    {translate('common:createNews')}\n                  </Button>\n                </a>\n              </Col>\n            ) : (\n                <Col lg={6} md={8} sm={0} xs={0} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    style={{ marginRight: '10px', marginLeft: '16px' }}\n                    onClick={() => this.props.profileReducers.openModal({ modalName: 'register' })}\n                  >\n                    {translate('common:register')}\n                  </Button>\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    onClick={() => this.props.profileReducers.openModal({ modalName: 'login' })}\n                  >\n                    {translate('common:login')}\n                  </Button>\n                </Col>\n              )}\n          </Row>\n          <Row className='popular-keyword'>\n            <Col lg={6}></Col>\n            <Col lg={12} style={{\n              marginTop: '6px',\n              display: 'flex',\n              alignItems: 'center',\n            }}>\n              <span>{translate('common:commonKeywords')}: &nbsp; </span>\n              {this.props.commonKeywords.slice(0, 4).map((item, index) => (\n                <a\n                  style={{ color: '#000000' }}\n                  key={index}\n                  onClick={() => {\n                    window.location.href = `/tim-kiem?keyword=${item.keyword}`;\n                  }}\n                >\n                  <Tag color='orange'>{item.keyword}</Tag>\n                </a>\n              ))}\n            </Col>\n            <Col lg={6}></Col>\n          </Row>\n        </div>\n        <LoginModal\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n        <RegisterModal\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n        <div id='recaptcha' />\n      </header>\n    );\n  }\n}\n\nexport const Header = withNamespaces('common')(MainHeader);\n","import * as React from 'react';\nimport { Menu, Icon } from 'antd';\nimport './LeftSideBar.less';\nimport { Brand, Adsense } from '../../services/service-proxies';\nimport { isMobile } from 'react-device-detect';\nimport { withNamespaces } from '@client/i18n';\nconst SubMenu = Menu.SubMenu;\n\ninterface Props {\n  topBrands: Brand[];\n  adsense: Adsense[];\n  t: (key: string) => string;\n}\ninterface State {\n  isOpenDropdownMenu: boolean;\n}\nclass BaseLeftSideBar extends React.Component<Props, State> {\n  state: State = {\n    isOpenDropdownMenu: false,\n  };\n\n  render() {\n    const translate = this.props.t;\n    const renderMenuBar = this.props.topBrands.map((brand) => {\n      return (\n        <SubMenu\n          key={brand._id}\n          title={<span style={{ color: '#000', fontSize: '12px' }}>{brand.name.toUpperCase()} ({brand.totalNews})</span>}\n          onTitleClick={() => window.location.href = `/danh-sach-hang/${brand.slug}`}\n        >\n          {brand.brandCategories.map((category: any) => (\n            <Menu.Item key={category.slug}><a title={category.name} style={{fontSize: '12px'}}>{category.name} ({category.totalNews})</a></Menu.Item>\n          ))}\n        </SubMenu>\n      );\n    });\n    const adsPosition2 = this.props.adsense.filter((item) => item.position === 2)[0];\n\n    return (\n      <div className={isMobile ? 'left-sidebar-mobile' : 'left-sidebar'}>\n        <span className='title'>\n          <b>{translate('common:list-of-brand')}</b>\n          {isMobile ? <a style={{ float: 'right', color: 'white' }} onClick={() => this.setState({ isOpenDropdownMenu: !this.state.isOpenDropdownMenu })}>\n            <Icon type='caret-down' />\n          </a> : <div></div>}\n        </span>\n\n        {isMobile && this.state.isOpenDropdownMenu ? <Menu\n          style={{\n            width: '100%',\n            background: '#fff',\n            border: '1px solid #F4F4F4',\n            borderBottom: 'none',\n            boxShadow: '0px 0px 10px 0px rgba(0, 0, 0, 0.1)',\n          }}\n          mode={'inline'}\n          onClick={(info: any) => {\n            const selectedBrand = this.props.topBrands.filter((brand) => brand._id === info.keyPath[1])[0].slug;\n            const selectedCategory = info.keyPath[0];\n            window.location.href = `/tim-kiem?brand=${selectedBrand}&category=${selectedCategory}`;\n          }}\n        >\n          {renderMenuBar}\n        </Menu> : <div></div>}\n\n        {!isMobile ? <Menu\n          style={{\n            width: '100%',\n            background: '#fff',\n            border: '1px solid #F4F4F4',\n            borderBottom: 'none',\n            boxShadow: '0px 0px 10px 0px rgba(0, 0, 0, 0.1)',\n          }}\n          // mode={window.innerWidth < 992 ? 'inline' : 'vertical'}\n          mode={'vertical' as any}\n          onClick={(info: any) => {\n            const selectedBrand = this.props.topBrands.filter((brand) => brand._id === info.keyPath[1])[0].slug;\n            const selectedCategory = info.keyPath[0];\n            window.location.href = `/tim-kiem?brand=${selectedBrand}&category=${selectedCategory}`;\n          }}\n        >\n          {renderMenuBar}\n        </Menu> : <div></div>}\n\n        <a href='/danh-sach-hang' title='Danh sách hãng' className='all-brand'>\n          <b>{translate('common:all-brands')}</b>\n        </a>\n\n        <a href={adsPosition2 && adsPosition2.hyperlink ? adsPosition2.hyperlink : '#'}>\n          <img\n            src={adsPosition2 && adsPosition2.imageUrl ? adsPosition2.imageUrl : '/static/images/sidebar-1.png'}\n            width='100%'\n            className='image-promotion-right'\n          />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport const LeftSideBar = withNamespaces('common')(BaseLeftSideBar);\n","import * as React from 'react';\n\ninterface Props {}\ninterface State {}\nconst Fragment = React.Fragment;\nclass LeftSideBarWithoutMenu extends React.Component<Props, State> {\n  render() {\n    return (\n      <Fragment>\n        <img src={`/static/images/sidebar-1.png`} width='100%' />\n        <img src={`/static/images/sidebar-2.png`} width='100%' style={{ marginTop: '30px' }} />\n      </Fragment>\n    );\n  }\n}\n\nexport default LeftSideBarWithoutMenu;\n","import * as React from 'react';\nimport { Modal, Input, Button, Row, Col, message, Tabs, Icon, Form, Select } from 'antd';\nimport './LoginModal.less';\nimport { ProfileState, ProfileEffects, ProfileReducers } from '@client/store';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport { submitLoginForm, validateField } from '@client/core';\nimport { Formik, FormikContext } from 'formik';\nimport { ForgotPasswordModal } from './ForgotPasswordModal';\nimport * as yup from 'yup';\nimport { withNamespaces } from '@client/i18n';\nimport { config } from '@client/config';\n\ninterface Props {\n  profileState: ProfileState;\n  profileReducers: ProfileEffects & ProfileReducers;\n  t: (key: string) => string;\n}\ninterface State {\n  activeTab: 'email' | 'phone';\n  phone: {\n    countryCode: string;\n    phoneNo: string;\n  };\n  loading: {\n    login: boolean;\n    getVerifyCode: boolean;\n  };\n  forgotPassword: boolean;\n}\nclass BaseLoginModal extends React.Component<Props, State> {\n  state: State = {\n    activeTab: 'phone',\n    phone: {\n      countryCode: '',\n      phoneNo: '',\n    },\n    loading: {\n      login: false,\n      getVerifyCode: false,\n    },\n    forgotPassword: false,\n  };\n\n  activeTabChange = ({ activeTab }: { activeTab: 'email' | 'phone' }) => {\n    this.setState({\n      activeTab,\n    });\n  }\n\n  login = async (values: any) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        login: true,\n      },\n    });\n\n    try {\n      const email = this.state.activeTab === 'phone' ? `${values.countryCode.replace('+', '')}${values.phoneNo}@timmay.vn` : values.email;\n      const signInResult = await firebase.auth().signInWithEmailAndPassword(email, values.password);\n      if (signInResult.user!.emailVerified) {\n        const idToken = await firebase.auth().currentUser!.getIdToken(true);\n        const serviceProxy = getServiceProxy();\n        serviceProxy.registerUser({idToken});\n\n        message.success(this.props.t('common:loginSuccess'));\n        submitLoginForm(idToken);\n      } else {\n        message.error(this.props.t('common:unverifiedAccount'));\n        this.setState({\n          loading: {\n            ...this.state.loading,\n            login: false,\n          },\n        });\n      }\n    } catch (error) {\n      message.error(this.props.t(error.code));\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          login: false,\n        },\n      });\n    }\n  }\n\n  loginWithFacebook = async () => {\n    try {\n      const provider = new firebase.auth.FacebookAuthProvider();\n      await firebase.auth().signInWithPopup(provider);\n      const idToken = await firebase.auth().currentUser!.getIdToken(true);\n      const serviceProxy = getServiceProxy();\n      await serviceProxy.registerUser({\n        idToken,\n      });\n\n      message.success(this.props.t('common:loginSuccess'));\n      submitLoginForm(idToken);\n    } catch (error) {\n      message.error(this.props.t(`common:${error.code}`));\n    }\n  }\n\n  loginWithGoogle = async () => {\n    try {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      await firebase.auth().signInWithPopup(provider);\n      const idToken = await firebase.auth().currentUser!.getIdToken(true);\n      const serviceProxy = getServiceProxy();\n      await serviceProxy.registerUser({\n        idToken,\n      });\n\n      message.success(this.props.t('common:loginSuccess'));\n      submitLoginForm(idToken);\n    } catch (error) {\n      message.error(this.props.t(`common:${error.code}`));\n    }\n  }\n\n  showForgotPasswordModal = () => {\n    this.setState({\n      forgotPassword: true,\n    });\n  }\n\n  hideForgotPasswordModal = () => {\n    this.setState({\n      forgotPassword: false,\n    });\n  }\n\n  render() {\n    const translate = this.props.t;\n\n    const EmailValidateSchema = yup.object().shape({\n      email: yup.string()\n        .required(translate('common:pleaseInputEmail')),\n      password: yup.string()\n        .max(100, translate('common:passwordTooLong'))\n        .matches(/[^\\s]/, translate('common:passwordCantContainSpace'))\n        .required(translate('common:pleaseInputPassword')),\n    });\n\n    const PhoneNumberValidateSchema = yup.object().shape({\n      countryCode: yup.string()\n        .required(translate('common:pleaseInputCountryCode')),\n      phoneNo: yup.string()\n        .matches(config.regex.phone, translate('common:invalidPhoneNo'))\n        .required(translate('common:pleaseInputPhoneNo')),\n      password: yup.string()\n        .required(translate('common:pleaseInputPassword'))\n        .max(100, translate('common:passwordTooLong'))\n        .matches(/[^\\s]/, translate('common:passwordCantContainSpace')),\n    });\n\n    return (\n      <Modal\n        className='login-modal'\n        visible={this.props.profileState.modal.login}\n        footer={null}\n        onCancel={() => this.props.profileReducers.closeModal({ modalName: 'login' })}\n        destroyOnClose={true}\n      >\n        <h2>{translate('common:login')}</h2>\n        <hr className='title-underline' />\n\n        <Tabs defaultActiveKey={this.state.activeTab} onChange={(activeTab) => this.activeTabChange({ activeTab } as any)}>\n          <Tabs.TabPane tab={<span><Icon type='phone' />{translate('common:sms')}</span>} key='phone'>\n            <Formik\n              initialValues={{\n                countryCode: '+84',\n                phoneNo: '',\n                password: '',\n              }}\n              validateOnChange={false}\n              validationSchema={PhoneNumberValidateSchema}\n              onSubmit={async (values, formikBag: any) => {\n                await this.login(values);\n                formikBag.resetForm({\n                  countryCode: '+84',\n                  phoneNo: values.phoneNo,\n                  password: '',\n                });\n              }}\n            >\n              {(context: FormikContext<any>) => (\n                <Form onSubmit={context.handleSubmit}>\n                  <Form.Item validateStatus={context.errors.phoneNo || context.errors.countryCode ? 'error' : undefined} help={context.errors.phoneNo || context.errors.countryCode}>\n                    <Input\n                      addonBefore={(\n                        <Select style={{ width: 120 }} value={context.values.countryCode} onChange={context.handleChange}>\n                          <Select.Option value='+84'>VN (+84)</Select.Option>\n                        </Select>\n                      )}\n                      value={context.values.phoneNo}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'phoneNo',\n                        validateSchema: PhoneNumberValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:phoneNo')}\n                      name='phoneNo'\n                    />\n                  </Form.Item>\n\n                  <Form.Item validateStatus={context.errors.password ? 'error' : undefined} help={context.errors.password}>\n                    <Input\n                      value={context.values.password}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'password',\n                        validateSchema: PhoneNumberValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:password')}\n                      type='password'\n                      name='password'\n                    />\n                  </Form.Item>\n\n                  <Form.Item className='button-container'>\n                    <Button type='primary' className='login-button' htmlType='submit' loading={this.state.loading.login}>\n                      {translate('common:login')}\n                    </Button>\n                    <br />\n                    <Button type='default' className='forgot-password-button' onClick={this.showForgotPasswordModal}>\n                      {translate('common:forgotPassword')}\n                    </Button>\n                  </Form.Item>\n                </Form>\n              )}\n            </Formik>\n          </Tabs.TabPane>\n\n          <Tabs.TabPane tab={<span><Icon type='mail' />{translate('common:email')}</span>} key='email'>\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validateOnChange={false}\n              validationSchema={EmailValidateSchema}\n              onSubmit={async (values, formikBag) => {\n                await this.login(values);\n                formikBag.resetForm({\n                  email: values.email,\n                  password: '',\n                });\n              }}\n            >\n              {(context: FormikContext<any>) => (\n                <Form onSubmit={context.handleSubmit}>\n                  <Form.Item validateStatus={context.errors.email ? 'error' : undefined} help={context.errors.email}>\n                    <Input\n                      value={context.values.email}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'email',\n                        validateSchema: EmailValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:email')}\n                      type='email' name='email'\n                    />\n                  </Form.Item>\n\n                  <Form.Item validateStatus={context.errors.password ? 'error' : undefined} help={context.errors.password}>\n                    <Input\n                      value={context.values.password}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'password',\n                        validateSchema: EmailValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:password')}\n                      type='password'\n                      name='password'\n                    />\n                  </Form.Item>\n\n                  <Form.Item className='button-container'>\n                    <Button type='primary' className='login-button' htmlType='submit' loading={this.state.loading.login}>{translate('common:login')}</Button>\n                    <br />\n                    <Button type='default' className='forgot-password-button' onClick={this.showForgotPasswordModal}>{translate('common:forgotPassword')}</Button>\n                  </Form.Item>\n                </Form>\n              )}\n            </Formik>\n          </Tabs.TabPane>\n        </Tabs>\n\n        <Row>\n          <Col lg={10}><hr /></Col>\n          <Col lg={4} style={{ textAlign: 'center' }}>\n            <span>{translate('common:or')}</span>\n          </Col>\n          <Col lg={10}><hr /></Col>\n        </Row>\n        <Row>\n          <Button type='primary' className='login-facebook-button' onClick={this.loginWithFacebook}>{translate('common:facebookLogin')}</Button>\n          <Button type='primary' className='login-google-button' onClick={this.loginWithGoogle}>{translate('common:googleLogin')}</Button>\n        </Row>\n        <hr />\n        <Row style={{ textAlign: 'center' }}>\n          <span style={{ color: '#000' }}>{translate('common:dontHaveAccount')}? </span>\n          <span style={{ color: 'blue', cursor: 'pointer' }} onClick={() => {\n            this.props.profileReducers.closeModal({ modalName: 'login' });\n            this.props.profileReducers.openModal({ modalName: 'register' });\n          }}>{translate('common:register')}</span>\n        </Row>\n\n        <form id='form' method='post' action='/auth/login' style={{display: 'none'}} />\n        <ForgotPasswordModal type={this.state.activeTab} visible={this.state.forgotPassword} onCancel={this.hideForgotPasswordModal} />\n      </Modal>\n    );\n  }\n}\n\nexport const LoginModal = withNamespaces('common')(BaseLoginModal);\n","import * as React from 'react';\nimport { Row, Col } from 'antd';\nimport { LeftSideBar } from './LeftSideBar';\nimport LeftSideBarWithoutMenu from './LeftSideBarWithoutMenu';\nimport { RightSideBar } from './RightSideBar';\nimport './MainContent.less';\nimport { Brand, Adsense, FeatureBrand } from '../../services/service-proxies';\nimport { getServiceProxy } from '@client/services';\nimport BrandList from '@client/modules/machine-news/screens/HomePageScreen/components/BrandList';\n\ninterface Props {\n  topBrands: Brand[];\n  hasMenuItems: boolean;\n  hasSideBar: boolean;\n  children: any;\n  hasBrandList?: boolean;\n}\ninterface State {\n  adsense: Adsense[];\n  featureBrands: FeatureBrand[];\n}\nexport class MainContent extends React.Component<Props, State> {\n  state: State = {\n    adsense: [],\n    featureBrands: [],\n  };\n\n  componentDidMount () {\n    this.getAdsense();\n    this.getFeatureBrands();\n  }\n\n  getAdsense = async () => {\n    try {\n      const serviceProxy = getServiceProxy();\n      const adsense = await serviceProxy.getAdsense(5, 'position|asc', undefined, undefined);\n      this.setState({\n        adsense: adsense.data,\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  getFeatureBrands = async () => {\n    try {\n      const serviceProxy = getServiceProxy();\n      const featureBrands = await serviceProxy.getFeatureBrands(10, 'order|asc', undefined, undefined);\n      this.setState({\n        featureBrands: featureBrands.data,\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  render () {\n    const adsPosition1 = this.state.adsense.filter((item) => item.position === 1)[0];\n    const adsPosition3 = this.state.adsense.filter((item) => item.position === 3)[0];\n\n    return (\n      <main className='main-content'>\n        {this.props.hasBrandList && (\n          <Row className='home-page-brand-list' type='flex' justify='center'>\n            <Col lg={3} md={0} sm={0} xs={0}>\n              <a href={adsPosition1 && adsPosition1.hyperlink ? adsPosition1.hyperlink : '#'}>\n                <img\n                  className='image-promote'\n                  src={adsPosition1 && adsPosition1.imageUrl ? adsPosition1.imageUrl : '/static/images/promotion.png'}\n                  style={{ maxHeight: '60px' }}\n                />\n              </a>\n            </Col>\n            <Col lg={18} md={24} xs={24} sm={24}>\n              <BrandList featureBrands={this.state.featureBrands} />\n            </Col>\n            <Col lg={3} md={0} sm={0} xs={0}>\n              <a href={adsPosition3 && adsPosition3.hyperlink ? adsPosition3.hyperlink : '#'}>\n                <img\n                  className='image-promote'\n                  src={adsPosition3 && adsPosition3.imageUrl ? adsPosition3.imageUrl : '/static/images/promotion.png'}\n                  style={{ maxHeight: '60px' }}\n                />\n              </a>\n            </Col>\n          </Row>\n        )}\n\n        {this.props.hasSideBar ? (\n          <Row className='padding-of-page'>\n            <Col lg={3} md={24} sm={24} xs={24} >\n              {this.props.hasMenuItems ? (\n                <LeftSideBar topBrands={this.props.topBrands} adsense={this.state.adsense} />\n              ) : (\n                <LeftSideBarWithoutMenu />\n              )}\n            </Col>\n            <Col className='main-col' lg={18} md={24} sm={24} xs={24} >\n              {this.props.children}\n            </Col>\n            <Col lg={3} md={0} sm={0} xs={0} >\n              <RightSideBar adsense={this.state.adsense} />\n            </Col>\n          </Row>\n        ) : (\n          <Row className='padding-of-page'>\n            <Col lg={3} md={0} sm={0} xs={0} />\n            <Col className='main-col' lg={18} md={24} sm={24} xs={24} style={{ padding: '0px 20px' }}>\n              {this.props.children}\n            </Col>\n            <Col lg={3} md={0} sm={0} xs={0} />\n          </Row>\n        )}\n      </main>\n    );\n  }\n}\n","import React from 'react';\nimport { List, Icon, Spin } from 'antd';\nimport { Notification } from '../../services/service-proxies';\nimport { getShopUrl } from '../../core';\nimport * as moment from 'moment';\nimport './NotificationDropdown.less';\nimport 'firebase/auth';\n\ninterface Props {\n  loadingNotification: boolean;\n  hasNext: boolean;\n  notificationList: Notification[];\n  loadMoreNotifications: () => void;\n  readAllNotifications: () => void;\n  readNotification: (notificationId: string) => void;\n}\nexport const NotificationDropdown = (props: Props) => {\n  const getNotificationContent = (notification: Notification) => {\n    if (notification.type === 'CREATE_NEWS') {\n      const isShop = notification.news.shop && notification.news.shop._id;\n      if (isShop) {\n        const displayName = notification.news.shop.name;\n        return (\n          <p>\n            Bài viết &nbsp;\n            <a title={notification.news.title} onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `${getShopUrl(notification.news.shop.domain)}/bai-dang-cua-hang/${notification.news._id}`;\n            }}>\n              <b>{notification.news.title}</b>\n            </a> &nbsp;\n            đã được đăng thành công trong cửa hàng &nbsp;\n            <a title={displayName} onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `${getShopUrl(notification.news.shop.domain)}/thong-tin-cua-hang`;\n            }}>\n              <b>{displayName}</b>\n            </a>\n          </p>\n        );\n      } else {\n        return (\n          <p>\n            Bài viết &nbsp;\n            <a title={notification.news.title} onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `/bai-dang/${notification.news._id}`;\n            }}>\n              <b>{notification.news.title}</b>\n            </a> &nbsp;\n            đã được đăng thành công\n          </p>\n        );\n      }\n    } else if (notification.type === 'FOLLOW_USER') {\n      const displayName = notification.news.owner.fullName || notification.news.owner.email || notification.news.owner.phoneNo;\n      return (\n        <p>\n          Người dùng &nbsp;\n          <a title={displayName}\n            onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `/nguoi-dung/${notification.news.owner._id}`;\n            }}\n          >\n            <b>{displayName}</b>\n          </a> &nbsp;\n          vừa đăng bài viết &nbsp;\n          <a title={notification.news.title}\n            onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `/bai-dang/${notification.news._id}`;\n            }}\n          >\n            <b>{notification.news.title}</b>\n          </a>\n        </p>\n      );\n    } else if (notification.type === 'FOLLOW_SHOP') {\n      const displayName = notification.news.shop.name;\n      return (\n        <p>\n          Cửa hàng &nbsp;\n          <a title={displayName}\n            onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `${getShopUrl(notification.news.shop.domain)}/thong-tin-cua-hang`;\n            }}\n          >\n            <b>{displayName}</b>\n          </a> &nbsp;\n          vừa đăng bài viết &nbsp;\n          <a title={notification.news.title}\n            onClick={() => {\n              props.readNotification(notification._id);\n              window.location.href = `${getShopUrl(notification.news.shop.domain)}/bai-dang-cua-hang/${notification.news._id}`;\n            }}\n          >\n            <b>{notification.news.title}</b>\n          </a>\n        </p>\n      );\n    }\n    return ;\n  };\n\n  return (\n    <div className='notification-dropdown'>\n      <Spin spinning={props.loadingNotification}>\n        {props.notificationList.length > 0 ? (\n          <div>\n            <List\n              className='notification-list'\n              itemLayout='horizontal'\n              dataSource={props.notificationList}\n              renderItem={(item: Notification) => (\n                <List.Item\n                  onClick={async () => props.readNotification(item._id)}\n                  style={item.state === 'UNREAD' ? {background: '#e6f7ff', cursor: 'pointer'} : {}}\n                >\n                  <List.Item.Meta\n                    title={getNotificationContent(item)}\n                    description={<span style={{fontSize: '12px'}}><Icon type='clock-circle' /> {moment(item.createdAt).format('DD-MM-YYYY HH:mm')}</span>}\n                  />\n                </List.Item>\n              )}\n            >\n              {props.hasNext && (\n                <List.Item className='loadmore-containter'>\n                  <a className='loadmore-button' onClick={props.loadMoreNotifications} type='primary'>Xem thêm</a>\n                </List.Item>\n              )}\n            </List>\n            <div className='small-text'>\n              <a onClick={props.readAllNotifications}>Đánh dấu đã đọc tất cả</a>\n            </div>\n          </div>\n        ) : (\n          <div style={{height: '60px', textAlign: 'center', marginTop: '40px', fontWeight: 500}}>\n            {props.loadingNotification ? '' : 'Bạn không có thông báo nào'}\n          </div>\n        )}\n      </Spin>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Modal, Input, Button, Row, Col, message, Tabs, Icon, Form, Select } from 'antd';\nimport './RegisterModal.less';\nimport { ProfileState, ProfileEffects, ProfileReducers } from '@client/store';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport { submitLoginForm, validateField } from '@client/core';\nimport { Formik, FormikContext } from 'formik';\nimport * as yup from 'yup';\nimport { withNamespaces } from '@client/i18n';\nimport { config } from '@client/config';\n\ninterface Props {\n  profileState: ProfileState;\n  profileReducers: ProfileEffects & ProfileReducers;\n  t: (key: string) => string;\n}\ninterface State {\n  activeTab: 'email'|'phone';\n  phone: {\n    countryCode: string;\n    phoneNo: string;\n  };\n  loading: {\n    register: boolean;\n    getVerifyCode: boolean;\n  };\n}\n\nclass BaseRegisterModal extends React.Component<Props, State> {\n  state: State = {\n    activeTab: 'phone',\n    phone: {\n      countryCode: '',\n      phoneNo: '',\n    },\n    loading: {\n      register: false,\n      getVerifyCode: false,\n    },\n  };\n\n  activeTabChange = ({ activeTab }: {activeTab: 'email'|'phone'}) => {\n    this.setState({\n      activeTab,\n    });\n  }\n\n  getCode = async (values: {countryCode: string; phoneNo: string}) => {\n    this.setState({\n      phone: {\n        phoneNo: values.phoneNo,\n        countryCode: values.countryCode,\n      },\n      loading: {\n        ...this.state.loading,\n        getVerifyCode: true,\n      },\n    });\n\n    try {\n      const fullPhoneNumber = `${values.countryCode}${values.phoneNo}`;\n      const serviceProxy = getServiceProxy();\n      const phoneNoExistResult = await serviceProxy.checkPhoneNoExist(fullPhoneNumber);\n      if (!phoneNoExistResult.phoneNoExist) {\n        const appVerifier = (window as any).recaptchaVerifier;\n        const confirmationResult = await firebase.auth().signInWithPhoneNumber(fullPhoneNumber, appVerifier);\n        (window as any).confirmationResult = confirmationResult;\n        message.success(this.props.t('common:sendVerifyCodeSuccess'));\n      } else {\n        message.error(this.props.t('common:phoneNoHasBeenUsed'));\n      }\n\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          getVerifyCode: false,\n        },\n      });\n    } catch (error) {\n      message.error(this.props.t(error.code));\n    }\n\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        getVerifyCode: false,\n      },\n    });\n  }\n\n  register = async (values: any) => {\n    this.setState({\n      loading: {\n        ...this.state.loading,\n        register: true,\n      },\n    });\n\n    try {\n      if (this.state.activeTab === 'email') {\n        const newUser = await firebase.auth().createUserWithEmailAndPassword(values.email, values.password);\n        newUser.user!.sendEmailVerification();\n\n        // create mongodb record\n        const serviceProxy = getServiceProxy();\n        const idToken = await firebase.auth().currentUser!.getIdToken(true);\n        serviceProxy.registerUser({idToken});\n\n        // redirect\n        this.setState({\n          loading: {\n            ...this.state.loading,\n            register: false,\n          },\n        });\n        message.success(this.props.t('common:registerEmailSuccess'), 4);\n      } else if (this.state.activeTab === 'phone') {\n        const phoneNo = `${this.state.phone.countryCode}${this.state.phone.phoneNo}`;\n        await (window as any).confirmationResult.confirm(values.verifyCode);\n        await firebase.auth().currentUser!.updateEmail(`${phoneNo.replace('+', '')}@timmay.vn`);\n        await firebase.auth().currentUser!.updatePassword(values.password);\n\n        const idToken = await firebase.auth().currentUser!.getIdToken(true);\n        const serviceProxy = getServiceProxy();\n        await serviceProxy.registerUser({\n          idToken,\n        });\n\n        this.setState({\n          loading: {\n            ...this.state.loading,\n            register: false,\n          },\n        });\n        message.success(this.props.t('common:registerSuccess'));\n      }\n    } catch (error) {\n      message.error(this.props.t(error.code));\n      this.setState({\n        loading: {\n          ...this.state.loading,\n          register: false,\n        },\n      });\n    }\n  }\n\n  loginWithFacebook = async () => {\n    try {\n      const provider = new firebase.auth.FacebookAuthProvider();\n      await firebase.auth().signInWithPopup(provider);\n\n      // create mongodb record\n      const serviceProxy = getServiceProxy();\n      const idToken = await firebase.auth().currentUser!.getIdToken(true);\n      serviceProxy.registerUser({idToken});\n\n      message.success(this.props.t('common:registerSuccess'));\n      submitLoginForm(idToken);\n    } catch (error) {\n      message.error(this.props.t(`common:${error.code}`));\n    }\n  }\n\n  loginWithGoogle = async () => {\n    try {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      await firebase.auth().signInWithPopup(provider);\n\n      // create mongodb record\n      const serviceProxy = getServiceProxy();\n      const idToken = await firebase.auth().currentUser!.getIdToken(true);\n      serviceProxy.registerUser({idToken});\n\n      message.success(this.props.t('common:registerSuccess'));\n      submitLoginForm(idToken);\n    } catch (error) {\n      message.error(this.props.t(`common:${error.code}`));\n    }\n  }\n\n  render() {\n    const translate = this.props.t;\n\n    const EmailValidateSchema = yup.object().shape({\n      email: yup.string()\n        .required(translate('common:pleaseInputEmail')).matches(config.regex.email, translate('common:invalidEmail')),\n      password: yup.string()\n        .required(translate('common:pleaseInputPassword'))\n        .max(100, translate('common:passwordTooLong'))\n        .matches(config.regex.password, translate('common:invalidPassword')),\n      confirmPassword: yup.string()\n        .required(translate('common:pleaseConfirmPassword')),\n    });\n\n    const PhoneNumberValidateSchema = yup.object().shape({\n      countryCode: yup.string()\n        .required(translate('common:pleaseInputCountryCode')),\n      phoneNo: yup.string()\n        .matches(config.regex.phone, translate('common:invalidPhoneNo'))\n        .required(translate('common:pleaseInputPhoneNo')),\n    });\n\n    const VerifyCodeValidateSchema = yup.object().shape({\n      verifyCode: yup.string()\n        .required(translate('common:pleaseInputVerifyCode')),\n      password: yup.string()\n        .required(translate('common:pleaseInputPassword'))\n        .max(100, translate('common:passwordTooLong'))\n        .matches(config.regex.password, translate('common:invalidPassword')),\n      confirmPassword: yup.string()\n        .required(translate('common:pleaseConfirmPassword')),\n    });\n\n    return (\n      <Modal\n        className='register-modal'\n        visible={this.props.profileState.modal.register}\n        footer={null}\n        onCancel={() => this.props.profileReducers.closeModal({modalName: 'register'})}\n        destroyOnClose={true}\n      >\n        <h2>{translate('common:register')}</h2>\n        <hr className='title-underline' />\n\n        <Tabs defaultActiveKey={this.state.activeTab} onChange={(activeTab) => this.activeTabChange({ activeTab } as any)}>\n          <Tabs.TabPane tab={<span><Icon type='phone' />{translate('common:sms')}</span>} key='phone'>\n            <Formik\n              initialValues={{\n                countryCode: '+84',\n                phoneNo: '',\n              }}\n              validateOnChange={false}\n              validationSchema={PhoneNumberValidateSchema}\n              onSubmit={async (values) => {\n                await this.getCode(values);\n              }}\n            >\n              {(context: FormikContext<any>) => (\n                <Form.Item validateStatus={context.errors.phoneNo || context.errors.countryCode ? 'error' : undefined} help={context.errors.phoneNo || context.errors.countryCode}>\n                  <Input.Search\n                    addonBefore={(\n                      <Select style={{ width: 120 }} value={context.values.countryCode} onChange={context.handleChange}>\n                        <Select.Option value='+84'>VN (+84)</Select.Option>\n                      </Select>\n                    )}\n                    value={context.values.phoneNo}\n                    onChange={context.handleChange}\n                    onBlur={context.handleBlur}\n                    placeholder={translate('common:phoneNo')}\n                    enterButton={<Button type='primary' loading={this.state.loading.getVerifyCode}>{translate('common:sendCode')}</Button>}\n                    onSearch={context.handleSubmit as any}\n                    name='phoneNo'\n                  />\n                </Form.Item>\n              )}\n            </Formik>\n\n            <Formik\n              initialValues={{\n                verifyCode: '',\n                password: '',\n                confirmPassword: '',\n              }}\n              validateOnChange={false}\n              validationSchema={VerifyCodeValidateSchema}\n              onSubmit={async (values, formikBag) => {\n                await this.register(values);\n                formikBag.resetForm({});\n              }}\n            >\n              {(context: FormikContext<any>) => (\n                <Form onSubmit={context.handleSubmit}>\n                  <Form.Item validateStatus={context.errors.verifyCode ? 'error' : undefined} help={context.errors.verifyCode}>\n                    <Input\n                      value={context.values.verifyCode}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'verifyCode',\n                        validateSchema: VerifyCodeValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:verifyCode')}\n                      name='verifyCode'\n                    />\n                  </Form.Item>\n\n                  <Form.Item validateStatus={context.errors.password ? 'error' : undefined} help={context.errors.password}>\n                    <Input\n                      value={context.values.password}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'password',\n                        validateSchema: VerifyCodeValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:password')}\n                      type='password'\n                      name='password'\n                    />\n                  </Form.Item>\n\n                  <Form.Item validateStatus={context.errors.confirmPassword ? 'error' : undefined} help={context.errors.confirmPassword}>\n                    <Input\n                      value={context.values.confirmPassword}\n                      onChange={context.handleChange}\n                      onBlur={() => {\n                        if (context.values.confirmPassword && context.values.confirmPassword !== context.values.password) {\n                          context.setFieldError('confirmPassword', translate('common:confirmPasswordDidntMatch'));\n                        } else {\n                          validateField({\n                            fieldName: 'confirmPassword',\n                            validateSchema: VerifyCodeValidateSchema,\n                            context,\n                          });\n                        }\n                      }}\n                      placeholder={translate('common:confirmPassword')}\n                      type='password'\n                      name='confirmPassword'\n                    />\n                  </Form.Item>\n\n                  <Form.Item className='button-container'>\n                    <Button type='primary' className='login-button' htmlType='submit' loading={this.state.loading.register}>{translate('common:register')}</Button>\n                    <br />\n                  </Form.Item>\n                </Form>\n              )}\n            </Formik>\n          </Tabs.TabPane>\n\n          <Tabs.TabPane tab={<span><Icon type='mail' />Email</span>} key='email'>\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n                confirmPassword: '',\n              }}\n              validateOnChange={false}\n              validationSchema={EmailValidateSchema}\n              validate={(values) => {\n                const errors: any = {};\n                if (values.password !== values.confirmPassword) {\n                  errors.confirmPassword = translate('common:confirmPasswordDidntMatch');\n                }\n                return errors;\n              }}\n              onSubmit={async (values, formikBag) => {\n                await this.register(values);\n                formikBag.resetForm({\n                  email: '',\n                  password: '',\n                  confirmPassword: '',\n                });\n              }}\n            >\n              {(context: FormikContext<any>) => (\n                <Form onSubmit={context.handleSubmit}>\n                  <Form.Item validateStatus={context.errors.email ? 'error' : undefined} help={context.errors.email}>\n                    <Input\n                      value={context.values.email}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'email',\n                        validateSchema: EmailValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:email')}\n                      type='email' name='email'\n                    />\n                  </Form.Item>\n\n                  <Form.Item validateStatus={context.errors.password ? 'error' : undefined} help={context.errors.password}>\n                    <Input\n                      value={context.values.password}\n                      onChange={context.handleChange}\n                      onBlur={() => validateField({\n                        fieldName: 'password',\n                        validateSchema: EmailValidateSchema,\n                        context,\n                      })}\n                      placeholder={translate('common:password')}\n                      type='password'\n                      name='password'\n                    />\n                  </Form.Item>\n\n                  <Form.Item validateStatus={context.errors.confirmPassword ? 'error' : undefined} help={context.errors.confirmPassword}>\n                    <Input\n                      value={context.values.confirmPassword}\n                      onChange={context.handleChange}\n                      onBlur={() => {\n                        if (context.values.confirmPassword && context.values.confirmPassword !== context.values.password) {\n                          context.setFieldError('confirmPassword', translate('common:confirmPasswordDidntMatch'));\n                        } else {\n                          validateField({\n                            fieldName: 'confirmPassword',\n                            validateSchema: EmailValidateSchema,\n                            context,\n                          });\n                        }\n                      }}\n                      placeholder={translate('common:confirmPassword')}\n                      type='password'\n                      name='confirmPassword'\n                    />\n                  </Form.Item>\n\n                  <Form.Item className='button-container'>\n                    <Button type='primary' className='login-button' htmlType='submit' loading={this.state.loading.register}>{translate('common:register')}</Button>\n                    <br />\n                  </Form.Item>\n                </Form>\n              )}\n            </Formik>\n          </Tabs.TabPane>\n        </Tabs>\n\n        <Row>\n          <Col lg={10}><hr/></Col>\n          <Col lg={4} style={{textAlign: 'center'}}>\n            <span>{translate('common:or')}</span>\n          </Col>\n          <Col lg={10}><hr/></Col>\n        </Row>\n        <Row>\n          <Button type='primary' className='login-facebook-button' onClick={this.loginWithFacebook}>{translate('common:registerFacebook')}</Button>\n          <Button type='primary' className='login-google-button' onClick={this.loginWithGoogle}>{translate('common:registerGoogle')}</Button>\n        </Row>\n        <hr />\n        <Row style={{textAlign: 'center'}}>\n        <span style={{color: '#000'}}>{translate('common:alreadyHaveAccount')}? </span>\n        <span style={{color: 'blue', cursor: 'pointer'}} onClick={() => {\n          this.props.profileReducers.closeModal({modalName: 'register'});\n          this.props.profileReducers.openModal({modalName: 'login'});\n        }}>{translate('common:login')}</span>\n        </Row>\n        <form id='form' method='post' action='/auth/login' style={{display: 'none'}} />\n      </Modal>\n    );\n  }\n}\n\nexport const RegisterModal = withNamespaces('common')(BaseRegisterModal);\n","import * as React from 'react';\nimport { Adsense } from '@client/services/service-proxies';\nconst Fragment = React.Fragment;\n\ninterface Props {\n  adsense: Adsense[];\n}\ninterface State {}\nexport class RightSideBar extends React.Component<Props, State> {\n  render () {\n    const adsPosition4 = this.props.adsense.filter((item) => item.position === 4)[0];\n    const adsPosition5 = this.props.adsense.filter((item) => item.position === 5)[0];\n\n    return (\n      <Fragment>\n        <a href={adsPosition4 && adsPosition4.hyperlink ? adsPosition4.hyperlink : '#'}>\n          <img\n            src={adsPosition4 && adsPosition4.imageUrl ? adsPosition4.imageUrl : '/static/images/sidebar-1.png'}\n            width='100%'\n          />\n        </a>\n\n        <a href={adsPosition5 && adsPosition5.hyperlink ? adsPosition5.hyperlink : '#'}>\n          <img\n            src={adsPosition5 && adsPosition5.imageUrl ? adsPosition5.imageUrl : '/static/images/sidebar-1.png'}\n            width='100%'\n            style={{marginTop: '30px'}}\n          />\n        </a>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Row, Col, Icon, Button } from 'antd';\nimport './MachineDetailBox.less';\nimport MachineItem from '@client/components/MachineItem/MachineItem';\nimport { getImageUrl } from '@client/core';\nimport { ElasticSearchItemResult } from '@client/services/service-proxies';\nimport { ProfileState } from '@client/store';\n\ninterface Props {\n  data: ElasticSearchItemResult[];\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  profileState: ProfileState;\n  title: string;\n  disabledButtonLeft: boolean;\n  disabledButtonRight: boolean;\n  hiddenButton: boolean;\n  changeFollowStatus: (starStatus: string, id: string) => void;\n  buttonLeft: () => void;\n  totalFollow?: number;\n  isShowTotalFollowAndView?: boolean;\n  buttonRight: () => void;\n}\ninterface State { }\nclass MachineDetailBox extends Component<Props, State> {\n  render() {\n    const renderMachineDetailList = this.props.data.filter((ite) => Boolean(ite)).map((item: any, index: any) => {\n      return (\n        <MachineItem\n          id={item._id}\n          key={index}\n          lg={this.props.lg}\n          md={this.props.md}\n          sm={this.props.sm}\n          xs={this.props.xs}\n          linkRedirect={item._id ? `/bai-dang/${item._id}` : '#'}\n          imageUrl={item.imageUrls ? item.imageUrls.length > 0 ? getImageUrl(item.imageUrls[0], 'small') : item.categoryId.imageUrl : ''}\n          title={item.title ? item.title : ''}\n          price={item.price ? item.price : 0}\n          newsState={item.state}\n          location={item.location ? item.location.name : ''}\n          ownerName={item.shop ? item.shop.name : item.owner && item.owner.fullName ? item.owner.fullName : item.owner && item.owner.email\n            ? item.owner.email : item.owner && item.owner.phoneNo ? item.owner.phoneNo : ''}\n          starStatus={item.isFollowing ? 'filled' : 'outlined'}\n          changeFollowStatus={this.props.changeFollowStatus}\n          totalFollow={item.counterFollow && item.counterFollow !== 0 ? item.counterFollow : undefined}\n          totalView={item.counterView && item.counterView !== 0 ? item.counterView : undefined}\n          isShowTotalFollowAndView={this.props.isShowTotalFollowAndView}\n          ownerId={item.owner ? item.owner._id : ''}\n          currentUserId={this.props.profileState && this.props.profileState.authUser && this.props.profileState.authUser.id ? this.props.profileState.authUser.id : ''}\n        />\n      );\n    });\n\n    return (\n      <Fragment>\n        <h3 className='title'>{this.props.title}</h3>\n        <Row gutter={12} type='flex' className='grid-view'>\n          <Col className='button-pagging' lg={1} md={1} sm={1} xs={1}>\n            {!this.props.hiddenButton\n              ? <Button\n                disabled={this.props.disabledButtonLeft}\n                onClick={this.props.buttonLeft}\n                className='button-left'\n              >\n                <Icon type='arrow-left' />\n              </Button>\n              : <div></div>}\n          </Col>\n          <Col lg={22} md={22} sm={22} xs={22}>\n            {renderMachineDetailList}\n          </Col>\n          <Col className='button-pagging-right' lg={1} md={1} sm={1} xs={1}>\n            {!this.props.hiddenButton\n              ? <Button\n                disabled={this.props.disabledButtonRight}\n                onClick={this.props.buttonRight}\n                className='button-right'\n              >\n                <Icon type='arrow-right' />\n              </Button>\n              : <div></div>\n            }\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default MachineDetailBox;\n","import * as React from 'react';\nimport { formatMoney, newsStates } from '@client/core';\nimport { Row, Col, Icon } from 'antd';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  id: string;\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  starStatus: 'filled' | 'outlined';\n  linkRedirect: string;\n  title: string;\n  imageUrl: string;\n  price?: number;\n  newsState: string;\n  ownerName: string;\n  location: string;\n  totalFollow?: number;\n  totalView?: number;\n  currentUserId: string;\n  ownerId: string;\n  isShowTotalFollowAndView?: boolean;\n  changeFollowStatus: (starStatus: string, itemId: string) => void;\n  t: (key: string) => string;\n}\ninterface State { }\nclass MachineItem extends React.Component<Props, State> {\n  render() {\n    const newsState = newsStates.filter((item) => item.value === this.props.newsState)[0];\n    return (\n      <Col className='grid-post' lg={this.props.lg} md={this.props.md} sm={this.props.sm} xs={this.props.xs} >\n        <div className='container'>\n          <div style={{ marginBottom: 10 }}>\n            {this.props.currentUserId !== this.props.ownerId\n              ? <a className='star-following' title={`Follow ${this.props.title}`}>\n                <Icon type='star' theme={this.props.starStatus} onClick={() => this.props.changeFollowStatus(this.props.starStatus, this.props.id)} />\n              </a> : null}\n            <a href={this.props.linkRedirect} title={this.props.title} style={{ backgroundImage: `url('${this.props.imageUrl}')` }} className='grid-post-image' />\n          </div>\n\n          <div>\n            <Row>\n              <a href={this.props.linkRedirect} title={this.props.title} className='grid-post-title'>\n                {this.props.title}\n              </a>\n            </Row>\n            <Row>\n              <div className='grid-post-price'>{this.props.price ? formatMoney(Number(this.props.price)) : `${this.props.t('common:contact')}`}</div>\n            </Row>\n            <Row>\n              <Col lg={12} md={12} sm={24} xs={24}>\n                {newsState && (\n                  <div className='grid-post-status'><em>{this.props.t(`common:${newsState.value.toLowerCase()}`)}</em></div>\n                )}\n              </Col>\n              <Col lg={12} md={12} sm={0} xs={0}>\n                <div className='grid-post-owner-name'>\n                  {this.props.ownerName}\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <div className='grid-post-location'>\n                {this.props.location}\n              </div>\n            </Row>\n            {this.props.isShowTotalFollowAndView ?\n              <div>\n                {this.props.totalFollow ?\n                  <Row>\n                    <div className='grid-post-location'>\n                      {this.props.t('common:total-followers')} : {this.props.totalFollow}\n                    </div>\n                  </Row> : null}\n                {this.props.totalView ?\n                  <Row>\n                    <div className='grid-post-location'>\n                      {this.props.t('common:total-views')} : {this.props.totalView}\n                    </div>\n                  </Row> : null}\n              </div> : null}\n          </div>\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default withNamespaces('common')(MachineItem);\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { compose, withProps, lifecycle } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\nimport { get } from 'lodash';\nimport './MapWithSearchBox.less';\nimport { config } from '@client/config';\n\nconst MapWithSearchBox: any = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${config.googleMaps.apiKey}&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{\n      height: `100%`,\n      textAlign: 'center',\n    }}>\n      <Spin />\n    </div>,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs: any = {};\n\n      this.setState({\n        bounds: null,\n        center: (this.props as any).geocode ? (this.props as any).geocode : {lat: 21.0277644, lng: 105.8341598},\n        markers: [{position: (this.props as any).geocode ? (this.props as any).geocode : {lat: 21.0277644, lng: 105.8341598}}],\n        onMapMounted: (ref: any) => {\n          refs.map = ref;\n        },\n        onBoundsChanged: () => {\n          this.setState({\n            bounds: refs.map.getBounds(),\n            center: refs.map.getCenter(),\n          });\n        },\n        onSearchBoxMounted: (ref: any) => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n\n          const newAddress = places[0]['formatted_address'].indexOf(places[0].name) > -1 ? places[0]['formatted_address'] : `${places[0].name}, ${places[0]['formatted_address']}`;\n          (this.props as any).selectAddress('address', newAddress);\n          (this.props as any).selectAddress('geocode', {lng: places[0].geometry.location.lng(), lat: places[0].geometry.location.lat()});\n\n          const bounds = new (window as any).google.maps.LatLngBounds();\n\n          places.forEach((place: any) => {\n            if (place.geometry.viewport) {\n              bounds.union(place.geometry.viewport);\n            } else {\n              bounds.extend(place.geometry.location);\n            }\n          });\n          const nextMarkers = places.map((place: any) => ({\n            position: place.geometry.location,\n          }));\n          const nextCenter = get(nextMarkers, '0.position', (this.state as any).center);\n\n          this.setState({\n            center: nextCenter,\n            markers: nextMarkers,\n          });\n        },\n      });\n    },\n  }),\n  withScriptjs,\n  withGoogleMap,\n)((props: any) => {\n  return (\n    <GoogleMap\n      ref={props.onMapMounted}\n      defaultZoom={16}\n      center={props.center}\n      onBoundsChanged={props.onBoundsChanged}\n    >\n      <SearchBox\n        ref={props.onSearchBoxMounted}\n        bounds={props.bounds}\n        controlPosition={(window as any).google.maps.ControlPosition.TOP_LEFT}\n        onPlacesChanged={props.onPlacesChanged}\n      >\n        <input\n          type='text'\n          defaultValue={(props as any).address}\n          placeholder='Nhập địa chỉ cửa hàng ...'\n          style={{\n            boxSizing: `border-box`,\n            border: `1px solid transparent`,\n            width: `240px`,\n            height: `32px`,\n            marginTop: `10px`,\n            marginLeft: `10px`,\n            padding: `0 12px`,\n            borderRadius: `3px`,\n            boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n            fontSize: `14px`,\n            outline: `none`,\n            textOverflow: `ellipses`,\n          }}\n        />\n      </SearchBox>\n      {props.markers.map((marker: any, index: any) =>\n        <Marker key={index} position={marker.position} draggable={true} />,\n      )}\n    </GoogleMap>\n  );\n},\n);\n\nexport default MapWithSearchBox;\n","export * from './MachineDetailBox/MachineDetailBox';\nexport * from './CommonLayout/DropdownMenu';\nexport * from './CommonLayout/LoginModal';\nexport * from './CommonLayout/RegisterModal';\nexport * from './CommonLayout/Footer';\nexport * from './CommonLayout/Header';\nexport * from './CommonLayout/HamburgerMenu';\nexport * from './CommonLayout/LeftSideBar';\nexport * from './CommonLayout/RightSideBar';\nexport * from './CommonLayout/MainContent';\nexport * from './CommonLayout/CurrentTime';\nexport * from './MachineItem/MachineItem';\nexport * from './MapWithSearchBox/MapWithSearchBox';\n\nexport * from './AdminLayout/AdminSidebar';\nexport * from './AdminLayout/AdminSearchbar';\nexport * from './AdminLayout/PagingButtons';\nexport * from './AdminLayout/Authorize';\n","import { overrideConfig } from './override.config';\n\nexport const config = {\n  appName: '',\n  firebase: {\n    apiKey: '',\n    authDomain: '',\n    databaseURL: '',\n    projectId: '',\n    storageBucket: '',\n    messagingSenderId: '',\n  },\n  url: {\n    main: '',\n    api: '',\n    shop: '',\n  },\n  i18n: {\n    VN: 'vn',\n    EN: 'en',\n    defaultLang: 'vn',\n  },\n  upload: {\n    allowImageExt: /\\.(gif|jpg|jpeg|tiff|png|JPG|PNG|JPEG|GIF|TIFF)$/,\n    allowExcelExt: /\\.(csv|xls|xlsm|xlsx|xml|xlsb|xlam)$/,\n    shopIntroImageNumber: 10,\n  },\n  googleMaps: {\n    apiKey: 'AIzaSyBWcb9PYE2yddvlnN53fB76Y1XSfjURHFk', // 'AIzaSyCvrUsYnz-hSv0rZF3zAx7gx98uz4O-bvM',\n  },\n  cookies: {\n    domain: '',\n    maxAge: 0,\n  },\n  regex: {\n    password: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n    email: /^[a-z][a-z0-9_\\.]{5,40}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$/,\n    phone: /^([+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*){8,}$/,\n  },\n  ...overrideConfig,\n};\n","export * from './default.config';\n","export const overrideConfig = {\n  appName: 'excado-develop',\n  facebookAppId: '329120894475942',\n  firebase: {\n    apiKey: 'AIzaSyDaNVSsb66VTC7olY2VuAiKmO-J5e_PDYM',\n    authDomain: 'techkids-ac7a7.firebaseapp.com',\n    databaseURL: 'https://techkids-ac7a7.firebaseio.com',\n    projectId: 'techkids-ac7a7',\n    storageBucket: 'techkids-ac7a7.appspot.com',\n    messagingSenderId: '809846546437',\n  },\n  url: {\n    main: 'http://timmay.local:3000',\n    api: 'http://localhost:3000/api',\n    shop: 'http://shopDomain.timmay.local:3000',\n  },\n  cookies: {\n    domain: 'timmay.local',\n    maxAge: 60 * 60 * 1000,\n  },\n};\n","import { ProfileState } from '@client/store';\n\nexport const checkFollowStatus = (profileState: ProfileState, item: any) => {\n  return profileState && profileState.authUser && item && item.followBy.indexOf(profileState.authUser.id) !== -1 ? true : false;\n};\n","export const isMobile = (req: any) => {\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  return (userAgent.match(/Android/i)\n    || userAgent.match(/webOS/i)\n    || userAgent.match(/iPhone/i)\n    || userAgent.match(/iPad/i)\n    || userAgent.match(/iPod/i)\n    || userAgent.match(/BlackBerry/i)\n    || userAgent.match(/Windows Phone/i)\n  ) ? true : false;\n};\n","import { AuthUser } from '@client/store';\n\nexport const checkPermission = (authUser: AuthUser, requiredPermission: string) => {\n  if (!requiredPermission) {\n    return true;\n  }\n\n  return requiredPermission && authUser && authUser.permissions && authUser.permissions.indexOf(requiredPermission) > -1;\n};\n","import { getServiceProxy } from '@client/services';\nimport { config } from '@client/config';\n\nexport const checkSubdomain = async (req: any, res: any, next: any) => {\n  if (req.subdomains && req.subdomains.length > 0) {\n    let shopDomain = '';\n    if (config.url.main === `https://timmay.vn` && req.subdomains[0] !== `www`) {\n      shopDomain = req.subdomains[0];\n    } else if (config.url.main === `https://test.timmay.vn` && req.subdomains[1] !== `www`) {\n      shopDomain = req.subdomains[1];\n    } else if (config.url.main.indexOf(`techkids.io`) > -1 && req.subdomains[1] !== `www`) {\n      shopDomain = req.subdomains[1];\n    } else if (req.subdomains[0] !== `www`) {\n      shopDomain = req.subdomains[0];\n    }\n\n    if (shopDomain) {\n      const authUserId = req.authUser ? req.authUser.id : '';\n      const serviceProxies = getServiceProxy();\n      const shopResult = await serviceProxies.findShopByDomain(shopDomain, authUserId);\n\n      if (shopResult) {\n        req.shopInfo = shopResult;\n        const allowPaths = ['/thong-tin-cua-hang', '/bai-dang-cua-hang'];\n        if (allowPaths.indexOf(req.url) > -1 || req.url.indexOf('/bai-dang-cua-hang') > -1) {\n          next();\n        } else {\n          res.redirect('/thong-tin-cua-hang');\n        }\n      } else {\n        // custom 404 page\n        res.redirect(`${config.url.main}/not-found`);\n      }\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n};\n","import { config } from '@client/config';\n\nexport const clearCookie = async (_req: any, res: any) => {\n  res.clearCookie('token', {domain: config.cookies.domain}).redirect('/');\n};\n","// PENDING / PUBLIC / STOPPED / REJECTED / DELETED\nexport const newsStatus = {\n  PENDING: 'PENDING',\n  PUBLIC: 'PUBLIC',\n  STOPPED: 'STOPPED',\n  REJECTED: 'REJECTED',\n  DELETED: 'DELETED',\n};\n\nexport const newsTypeConst = {\n  SELL: 'SELL',\n  LEASE: 'LEASE',\n  BUY: 'BUY',\n  RENT: 'RENT',\n};\n\nexport const notificationState = {\n  READ: 'READ',\n  UNREAD: 'UNREAD',\n};\n\nexport const reportResults = {\n  SKIP: 'SKIP',\n  DELETE: 'DELETE',\n};\n\nexport const priceRanges = [\n  { min: 100000000, max: 500000000 },\n  { min: 500000000, max: 1000000000 },\n  { min: 1000000000, max: 5000000000 },\n  { min: 5000000000, max: 10000000000 },\n  { min: 10000000000, max: 50000000000 },\n];\n\nexport const newsStates = [\n  { value: 'NEW', label: 'Mới' },\n  { value: 'USED', label: 'Nhập bãi' },\n  { value: 'LIQUIDATE', label: 'Thanh lý' },\n];\n\nexport const newsTypes = [\n  { value: 'SELL', label: 'Cần bán' },\n  { value: 'LEASE', label: 'Cần cho thuê' },\n  { value: 'BUY', label: 'Cần mua' },\n  { value: 'RENT', label: 'Cần thuê' },\n];\n\nexport const storePackages = [\n  { label: '1 tháng', value: 86400 * 30 * 1000, price: 100000, imageUrl: '' },\n  { label: '3 tháng', value: 3 * 86400 * 30 * 1000, price: 300000, imageUrl: '/static/images/tag30k.png' },\n  { label: '6 tháng', value: 6 * 86400 * 30 * 1000, price: 600000, imageUrl: '/static/images/tag50k.png' },\n  { label: '12 tháng', value: 12 * 86400 * 30 * 1000, price: 1200000, imageUrl: '/static/images/tag990k.png' },\n];\n\nexport const paymentMethods = [\n  { label: 'Thẻ ngân hàng nội địa', value: 'domesticCard', imageUrl: ['/static/images/credit-card.png'] },\n  { label: 'Thẻ quốc tế', value: 'globalCard', imageUrl: ['/static/images/Visa.png', '/static/images/Mastercard.png'] },\n  { label: 'Ví momo', value: 'momoWallet', imageUrl: ['/static/images/momo.png'] },\n];\n\nexport const reportReasons = [\n  {label: 'Báo tin đã bán', value: 'SOLD'},\n  {label: 'Báo tin vi phạm', value: 'VIOLATE'},\n  {label: 'Báo tin đăng sai', value: 'WRONG_INFO'},\n];\n","export const convertVietnamese = (str: string) => {\n  let result = str.toLowerCase();\n  result = result.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/gi, 'a');\n  result = result.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/gi, 'e');\n  result = result.replace(/ì|í|ị|ỉ|ĩ/gi, 'i');\n  result = result.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/gi, 'o');\n  result = result.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/gi, 'u');\n  result = result.replace(/ỳ|ý|ỵ|ỷ|ỹ/gi, 'y');\n  result = result.replace(/đ/gi, 'd');\n  result = result.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/gi, ' ');\n  result = result.replace(/ + /gi, ' ');\n  result = result.trim();\n  return result;\n};\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { config } from '@client/config';\n\nexport const initializeFirebaseApp = () => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config.firebase);\n  }\n  firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    // tslint:disable-next-line:no-console\n    .catch((error) => console.log(error));\n};\n","const formatter = new Intl.NumberFormat('de-DE', {\n  style: 'currency',\n  currency: 'VND',\n  currencyDisplay: 'code',\n  minimumFractionDigits: 0,\n});\n\nconst formatMoney = formatter.format;\n\nexport {\n  formatMoney,\n};\n","import { MetadataState } from '@client/store';\n\nexport const generateFilters = (query: any, metadataState: MetadataState) => {\n  const availableFilters: any = {};\n\n  if (query.keyword) {\n    availableFilters.keyword = query.keyword;\n  }\n  if (query.minPrice) {\n    availableFilters.minPrice = query.minPrice;\n  }\n  if (query.maxPrice) {\n    availableFilters.maxPrice = query.maxPrice;\n  }\n  if (query.minWeight) {\n    availableFilters.weightRange = metadataState.weightRanges.filter((item: any) => item.min === Number(query.minWeight))[0]._id;\n  }\n  if (query.state) {\n    availableFilters.state = query.state;\n  }\n  if (query.newsType) {\n    availableFilters.newsType = query.newsType;\n  }\n  if (query.category) {\n    availableFilters.category = metadataState.categories.filter((item: any) => item.slug === query.category)[0]._id;\n  }\n  if (query.brand) {\n    availableFilters.brand = metadataState.brands.filter((item: any) => item.slug === query.brand)[0]._id;\n  }\n  if (query.location) {\n    availableFilters.location = metadataState.provinces.filter((item: any) => item.slug === query.location)[0]._id;\n  }\n\n  return availableFilters;\n};\n","import { v4 } from 'uuid';\nimport { config } from '@client/config';\n\nconst recentViewedCookie = 'recent_viewed';\nexport const generateRecentViewedKey = (req: any, res: any, next: any) => {\n  if (!req.cookies[recentViewedCookie]) {\n    const recentViewedKey = v4();\n    res.cookie(recentViewedCookie, recentViewedKey, {domain: config.cookies.domain});\n  }\n  next();\n};\n","import { SearchFilters } from '@client/store';\n\nexport const generateSearchUrl = (filters: SearchFilters & {minWeight?: number; maxWeight?: number}) => {\n  const filterValues: any = {};\n\n  if (filters.keyword) {\n    filterValues.keyword = filters.keyword;\n  }\n  if (Number(filters.minPrice)) {\n    filterValues.minPrice = Number(filters.minPrice);\n  }\n  if (Number(filters.maxPrice)) {\n    filterValues.maxPrice = Number(filters.maxPrice);\n  }\n  if (Number(filters.minWeight)) {\n    filterValues.minWeight = Number(filters.minWeight);\n  }\n  if (Number(filters.maxWeight)) {\n    filterValues.maxWeight = Number(filters.maxWeight);\n  }\n  if (filters.state) {\n    filterValues.state = filters.state;\n  }\n  if (filters.newsType) {\n    filterValues.newsType = filters.newsType;\n  }\n  if (filters.category) {\n    filterValues.category = filters.category;\n  }\n  if (filters.brand) {\n    filterValues.brand = filters.brand;\n  }\n  if (filters.model) {\n    filterValues.model = filters.model;\n  }\n  if (filters.location) {\n    filterValues.location = filters.location;\n  }\n\n  return Object.keys(filterValues).sort().map((item) => `${item}=${filterValues[item]}`).join('&');\n};\n","export const getBase64Image = (img: any, callback: any) => {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n","export const getImageUrl = (imageUrl: string, imageType: 'large'|'small') => {\n  return imageUrl ? imageUrl.indexOf('.jpg') === -1 && imageUrl.indexOf('.png') === -1 ? `${imageUrl}-${imageType}.jpg` : imageUrl : '';\n};\n","import { appMenuConfigs, authMenuConfigs, statisticsMenuConfigs } from '@client/modules/admin/menuConfigs';\n\nexport const getMenuConfigs = () => {\n  return [\n    authMenuConfigs,\n    appMenuConfigs,\n    statisticsMenuConfigs,\n  ];\n};\n","import { config } from '@client/config';\n\nexport const getShopUrl = (shopDomain: string) => {\n  return config.url.shop.replace('shopDomain', shopDomain);\n};\n","export * from './firebase';\nexport * from './setCookie';\nexport * from './formatter';\nexport * from './submitLoginForm';\nexport * from './validateField';\nexport * from './clearCookie';\nexport * from './metadata';\nexport * from './getBase64Image';\nexport * from './getImageUrl';\nexport * from './constants';\nexport * from './checkSubdomain';\nexport * from './checkFollowStatus';\nexport * from './getShopUrl';\nexport * from './generateSearchUrl';\nexport * from './generateFilters';\nexport * from './generateRecentViewedKey';\nexport * from './checkIsMobile';\nexport * from './convertVietnamese';\nexport * from './getMenuConfigs';\nexport * from './checkPermission';\n","export const metadata = {\n\n};\n","import { config } from '@client/config';\n\nexport const setCookie = async (req: any, res: any) => {\n  const token = req.body.token;\n  res.cookie('token', `Bearer ${token}`, {domain: config.cookies.domain}).redirect('/');\n};\n","export const submitLoginForm = (idToken: string) => {\n  const form = document.getElementById('form');\n  const input = document.createElement('input');\n  input.type = 'text';\n  input.name = 'token';\n  input.value = idToken;\n  form!.appendChild(input);\n  (form as any).submit();\n};\n","import { FormikContext } from 'formik';\nimport * as yup from 'yup';\n\ninterface ValidateFieldInput {\n  fieldName: string;\n  context: FormikContext<any>;\n  validateSchema: yup.Schema<any>;\n}\n\nexport const validateField = (params: ValidateFieldInput) => {\n  try {\n    params.validateSchema.validateSyncAt(params.fieldName, params.context.values);\n    params.context.setFieldError(params.fieldName, '');\n  } catch (error) {\n    params.context.setFieldError(params.fieldName, error.message);\n  }\n};\n","import NextI18Next from 'next-i18next';\nimport { config } from '@client/config';\n\nconst i18n = new NextI18Next({\n  defaultLanguage: config.i18n.defaultLang,\n  otherLanguages: [config.i18n.EN],\n  localePath: `${process.env.NODE_ENV !== 'production' ? 'src' : 'dist'}/client/static/locales`,\n  detection: {\n    cookieDomain: config.cookies.domain,\n  },\n});\n\nconst appWithTranslation = i18n.appWithTranslation;\n\nconst changeLanguage = (lang: string) => {\n  i18n.i18n.changeLanguage(lang);\n};\n\nconst withNamespaces = i18n.withNamespaces;\n\nexport {\n  i18n,\n  appWithTranslation,\n  changeLanguage,\n  withNamespaces,\n};\n","export * from './i18n';\n","import React, { Fragment } from 'react';\nimport { Layout, Icon, Dropdown, Menu, Spin } from 'antd';\nimport './AdminLayout.less';\nimport { SideBar } from './components/SideBar';\nimport { CollapsedButton } from './components/CollapsedButton';\nimport { HeaderDropdown } from './components/HeaderDropdown';\nimport { changeLanguage, withNamespaces } from '@client/i18n';\n\ninterface Props {\n  openedSubMenu: string;\n  selectedMenuItem: string;\n  currentLanguage: string;\n  t: (key: string) => string;\n}\ninterface State {\n  openedSubMenu: string;\n  selectedMenuItem: string;\n  menuCollapsed: boolean;\n  isChangingLanguage: boolean;\n}\nclass BaseAdminLayout extends React.Component<Props, State> {\n  state: State = {\n    openedSubMenu: this.props.openedSubMenu,\n    selectedMenuItem: this.props.selectedMenuItem,\n    menuCollapsed: false,\n    isChangingLanguage: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      menuCollapsed: !this.state.menuCollapsed,\n    });\n  };\n\n  openSubMenuChange = (newOpenedSubMenu: string) => {\n    this.setState({\n      openedSubMenu: newOpenedSubMenu,\n    });\n  }\n\n  changeLanguage = (newLang: string) => {\n    this.setState({\n      isChangingLanguage: true,\n    });\n    changeLanguage(newLang);\n    this.setState({\n      isChangingLanguage: false,\n    });\n  }\n\n  render() {\n    const translate = this.props.t;\n    const menuTheme = 'light';\n    const menuWidth = 256;\n    const collapsedWidth = 80;\n    const links = [\n      {\n        key: 'Pro Antd',\n        title: 'Pro Antd',\n        href: 'https://pro.ant.design',\n        blankTarget: true,\n      },\n      {\n        key: 'github',\n        title: <Icon type='github' />,\n        href: 'https://github.com/ant-design/ant-design-pro',\n        blankTarget: true,\n      },\n      {\n        key: 'Ant Design',\n        title: 'Ant Design',\n        href: 'https://ant.design',\n        blankTarget: true,\n      },\n    ];\n\n    return (\n      <div className='admin-container'>\n        <Spin spinning={this.state.isChangingLanguage}>\n          <Layout>\n            <SideBar\n              menuWidth={menuWidth}\n              collapsedWidth={collapsedWidth}\n              menuTheme={menuTheme}\n              openedSubMenu={this.state.openedSubMenu}\n              selectedMenuItem={this.state.selectedMenuItem}\n              openSubMenuChange={this.openSubMenuChange}\n              menuCollapsed={this.state.menuCollapsed}\n            />\n\n            <Layout\n              style={{ minHeight: '100vh' }}>\n              <Layout.Header\n                style={{ padding: 0 }}>\n                <div className='header'>\n                  <CollapsedButton menuCollapsed={this.state.menuCollapsed} toggle={this.toggle} />\n\n                  <div className='right'>\n                    <Dropdown placement='bottomCenter' overlay={(\n                      <Menu onClick={({ key }) => this.changeLanguage(key)} selectedKeys={[this.props.currentLanguage]}>\n                        <Menu.Item key='en'>\n                          <img src='/static/images/en.png' style={{ width: '20px', height: '20px' }} /> &nbsp; {translate(`common:en`)}\n                        </Menu.Item>\n                        <Menu.Item key='vn'>\n                          <img src='/static/images/vn.png' style={{ width: '20px', height: '20px' }} /> &nbsp; {translate(`common:vn`)}\n                        </Menu.Item>\n                      </Menu>\n                    )}>\n                      <span className='ant-dropdown-link' style={{ marginRight: '10px', cursor: 'pointer' }}>\n                        <img src={`/static/images/${this.props.currentLanguage}.png`} style={{ width: '20px', height: '20px' }} /> &nbsp; {translate(`common:${this.props.currentLanguage}`)}\n                      </span>\n                    </Dropdown>\n\n                    <HeaderDropdown />\n                  </div>\n                </div>\n              </Layout.Header>\n\n              <Layout.Content\n                className='content'>\n                {this.props.children}\n              </Layout.Content>\n\n              <Layout.Footer\n                style={{ padding: 0 }}>\n                <footer className='footer'>\n                  <div className='links'>\n                    {links.map((link) => (\n                      <a\n                        key={link.key}\n                        title={link.key}\n                        target={link.blankTarget ? '_blank' : '_self'}\n                        href={link.href}\n                      >\n                        {link.title}\n                      </a>\n                    ))}\n                  </div>\n                  <div className='copyright'>\n                    <Fragment>\n                      Copyright <Icon type='copyright' /> 2018 - Techkids Software\n                    </Fragment>\n                  </div>\n                </footer>\n              </Layout.Footer>\n            </Layout>\n          </Layout>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport const AdminLayout = withNamespaces('common')(BaseAdminLayout);\n","import React from 'react';\nimport { Icon } from 'antd';\nimport './CollapsedButton.less';\n\ninterface Props {\n  menuCollapsed: boolean;\n  toggle: () => void;\n}\nexport const CollapsedButton = (props: Props) => {\n  return (\n    <span className='trigger' onClick={props.toggle}>\n      <Icon type={props.menuCollapsed ? 'menu-unfold' : 'menu-fold'} />\n    </span>\n  );\n};\n","import React from 'react';\nimport { Dropdown, Menu, Icon, Avatar } from 'antd';\nimport './HeaderDropdown.less';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { initializeFirebaseApp } from '@client/core';\nimport { AuthUser, initStore, withRematch } from '@client/store';\n\nconst logOut = () => {\n  initializeFirebaseApp();\n  firebase.auth().signOut();\n  window.location.href = '/auth/logout';\n};\n\nconst menu = (\n  <Menu className='dropdownMenu' selectedKeys={[]}>\n    <Menu.Item key='homePage'>\n      <a href='/'>\n        <Icon type='home' />&nbsp; <span>Quay lại trang chủ</span>\n      </a>\n    </Menu.Item>\n    <Menu.Divider />\n    <Menu.Item key='logout'>\n      <a onClick={logOut}>\n        <Icon type='logout' />&nbsp; <span>Đăng xuất</span>\n      </a>\n    </Menu.Item>\n  </Menu>\n);\n\ninterface Props {\n  authUser: AuthUser;\n}\nconst DropdownMenu = (props: Props) => {\n  const avatarUrl = props.authUser && props.authUser.avatarUrl ? props.authUser.avatarUrl : '/static/images/default-avatar.jpg';\n\n  return (\n    <Dropdown overlayClassName='headerDropdown' overlay={menu}>\n      <span className={`action account`}>\n        <Avatar\n          size='small'\n          className='avatar'\n          src={avatarUrl}\n          alt='avatar'\n        />\n        <span className='name'>{props.authUser ? props.authUser.fullName : 'Admin'}</span>\n      </span>\n    </Dropdown>\n  );\n};\n\nconst mapState = (rootState: any) => {\n  return {\n    authUser: rootState.profileModel.authUser,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst HeaderDropdown = withRematch(initStore, mapState, mapDispatch)(DropdownMenu);\n\nexport {\n  HeaderDropdown,\n};\n","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport './SideBar.less';\nimport { getMenuConfigs, checkPermission } from '@client/core';\nimport { initStore, AuthUser, withRematch } from '@client/store';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  menuCollapsed: boolean;\n  menuWidth: number;\n  collapsedWidth: number;\n  menuTheme: 'dark'|'light';\n  selectedMenuItem: string;\n  openedSubMenu: string;\n  openSubMenuChange: (newOpenSubMenu: string) => void;\n  t: (key: string) => string;\n}\ninterface State {}\nclass SideBarMenu extends React.Component<Props & {authUser: AuthUser}, State> {\n  state: State = {\n    selectedMenuItem: '',\n    openedSubMenu: '',\n  };\n\n  render () {\n    const translate = this.props.t;\n\n    const getMenuItem = (item: any) => {\n      if (checkPermission(this.props.authUser, item.permission)) {\n        return (\n          <Menu.Item key={item.path}>\n            <a href={item.path}>\n              <span>{translate(`common:${item.name}`)}</span>\n            </a>\n          </Menu.Item>\n        );\n      }\n      return;\n    };\n\n    const getSubMenus = (subMenu: any) => {\n      let render = false;\n      for (const item of subMenu.items) {\n        if (checkPermission(this.props.authUser, item.permission)) {\n          render = true;\n          break;\n        }\n      }\n      if (render) {\n        return (\n          <Menu.SubMenu key={subMenu.name} title={<span><Icon type={subMenu.icon} /><span>{translate(`common:${subMenu.name}`)}</span></span>}>\n            {subMenu.items.map((item: any) => getMenuItem(item))}\n          </Menu.SubMenu>\n        );\n      }\n      return;\n    };\n\n    const menuProps: any = {};\n    if (!this.props.menuCollapsed) {\n      menuProps.openKeys = [this.props.openedSubMenu];\n    }\n    return (\n      <Layout.Sider\n        trigger={null}\n        collapsible={true}\n        collapsed={this.props.menuCollapsed}\n        breakpoint='lg'\n        width={this.props.menuWidth}\n        collapsedWidth={this.props.collapsedWidth}\n        theme={this.props.menuTheme}\n        className='sider'\n      >\n        <div className='logo' id='logo'>\n            <a href='#'>\n              <img src='/static/images/logo-timmay.png' alt='logo' />\n              {/* <h1>Timmay.vn</h1> */}\n            </a>\n        </div>\n\n        <Menu\n          key='Menu'\n          mode='inline'\n          inlineCollapsed={this.props.menuCollapsed}\n          theme={this.props.menuTheme}\n          style={{ padding: '16px 0', width: '100%' }}\n          className='sider'\n          onOpenChange={(openKeys: string[]) => this.props.openSubMenuChange(openKeys[openKeys.length - 1])}\n          selectedKeys={[this.props.selectedMenuItem]}\n          {...menuProps}\n        >\n          {getMenuConfigs().map((item) => getSubMenus(item))}\n        </Menu>\n      </Layout.Sider>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    authUser: rootState.profileModel.authUser,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst SideBar = withNamespaces('common')(withRematch<Props>(initStore, mapState, mapDispatch)(SideBarMenu));\n\nexport {\n  SideBar,\n};\n","import React from 'react';\nimport './AuthLayout.less';\nimport { Divider } from 'antd';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Link } from '../../routes';\n\ninterface Props {\n  pageName: 'login' | 'register';\n}\ninterface State {\n  clientOnly: boolean;\n}\nexport class AuthLayout extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      clientOnly: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      clientOnly: true,\n    });\n  }\n\n  uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: (\n        _authResult: any,\n        _redirectUrl?: string,\n      ) => {\n        (async () => {\n          const idToken = await firebase.auth().currentUser!.getIdToken();\n\n          const form = document.getElementById('form');\n          const input = document.createElement('input');\n          input.type = 'text';\n          input.name = 'token';\n          input.value = idToken;\n          form!.appendChild(input);\n          (form as any).submit();\n        })();\n        return false;\n      },\n      signInFailure: async (error: any) => {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n      },\n    },\n  };\n\n  render() {\n    return (\n      <div className='auth-container'>\n        <div className='form-wrapper'>\n          <div className='logo'>\n            <span>Techkids Software</span>\n          </div>\n\n          {this.props.children}\n\n          <Divider dashed={true} />\n\n          {this.state.clientOnly && <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} className='oauth-container' />}\n\n          <div className='links-wrapper'>\n            <a href='#' className='forgot'>Forgot password</a>\n            {this.props.pageName === 'login' && (\n              <Link route='/dang-ki'>\n                <a className='login-register'>Create an account</a>\n              </Link>\n            )}\n            {this.props.pageName === 'register' && (\n              <Link route='/dang-nhap'>\n                <a className='login-register'>Already have an account? Log in</a>\n              </Link>\n            )}\n            <form id='form' method='post' action='/auth/login' style={{display: 'none'}} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nconst Fragment = React.Fragment;\nimport { ProfileState, ProfileEffects, ProfileReducers } from '@client/store';\nimport { Header, MainContent } from '@client/components';\nimport Footer from '@client/components/CommonLayout/Footer';\nimport { Brand, CommonKeyword } from '../../services/service-proxies';\nimport CurrentTime from '@client/components/CommonLayout/CurrentTime';\nimport { getServiceProxy } from '@client/services';\n\ninterface Props {\n  topBrands: Brand[];\n  searchKeyword: string;\n  profileState: ProfileState;\n  profileReducers: ProfileEffects & ProfileReducers;\n  hasSideBar: boolean;\n  hasMenuItems: boolean;\n  fullName?: string;\n  updateFilters: (payload: {[key: string]: string|number}) => void;\n}\ninterface State {\n  commonKeywords: CommonKeyword[];\n}\nclass CommonLayout extends React.Component<Props, State> {\n  state: State = {\n    commonKeywords: [],\n  };\n\n  componentDidMount () {\n    this.getCommonKeywords();\n  }\n\n  getCommonKeywords = async () => {\n    try {\n      const serviceProxy = getServiceProxy();\n      const commonKeywords = await serviceProxy.getCommonKeywords(4, 'count|desc', undefined, undefined);\n      this.setState({\n        commonKeywords: commonKeywords.data,\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <CurrentTime/>\n        <Header\n          commonKeywords={this.state.commonKeywords}\n          searchKeyword={this.props.searchKeyword}\n          updateFilters={this.props.updateFilters}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n          fullName={this.props.fullName}\n        />\n          <MainContent\n            topBrands={this.props.topBrands}\n            hasSideBar={this.props.hasSideBar}\n            hasMenuItems={this.props.hasMenuItems}\n          >\n            {this.props.children}\n          </MainContent>\n         <div style={{marginBottom: '350px'}} className='push' />\n        <Footer/>\n      </Fragment>\n    );\n  }\n}\n\nexport default CommonLayout;\n","import React from 'react';\n\nexport class Page extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","export * from './Page/Page';\nexport * from './Auth/AuthLayout';\nexport * from './Page/CommonLayout';\nexport * from './Admin/AdminLayout';\n","export const appMenuConfigs = {\n  name: 'appManagement',\n  icon: 'qrcode',\n  items: [\n    {\n      name: 'reportsManagement',\n      path: '/quan-ly/bao-cao-vi-pham',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'brandsManagement',\n      path: '/quan-ly/danh-sach-hang',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'categoriesManagement',\n      path: '/quan-ly/chung-loai-may',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'modelsManagement',\n      path: '/quan-ly/danh-sach-models',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'weightRangesManagement',\n      path: '/quan-ly/khoang-trong-luong',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'rentalPeriodsManagement',\n      path: '/quan-ly/thoi-gian-thue',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'featureBrandsManagement',\n      path: '/quan-ly/hang-hop-tac',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'adsenseManagement',\n      path: '/quan-ly/quang-cao',\n      permission: '',\n      children: [],\n    },\n    {\n      name: 'uploadExcelFile',\n      path: '/quan-ly/dang-tin',\n      permission: '',\n      children: [],\n    },\n  ],\n};\n\nexport const authMenuConfigs = {\n  name: 'authManagement',\n  icon: 'user',\n  items: [\n    {\n      name: 'usersManagement',\n      path: '/quan-ly/nguoi-dung',\n      permission: '',\n      children: [],\n    },\n  ],\n};\n\nexport const statisticsMenuConfigs = {\n  name: 'statisticsManagement',\n  icon: 'rise',\n  items: [\n    {\n      name: 'newsStatistics',\n      path: '/quan-ly/thong-ke-tin-bai',\n      permission: '',\n      children: [],\n    },\n  ],\n};\n","import * as React from 'react';\nimport DetailsHomePage from './components/DetailsHomePage';\nimport { message } from 'antd';\nimport { ProfileState, ProfileEffects, ProfileReducers, FollowState, FollowReducers, FollowEffects, SearchState, SearchReducers, SearchEffects, DataResult } from '@client/store';\nimport { Header, MainContent } from '@client/components';\nimport { popularMachine } from './HomePageScreenDbTest';\nimport Footer from '@client/components/CommonLayout/Footer';\nimport { Brand, ElasticSearchResult, Category, Province, RecentViewedItem, CommonKeyword, User } from '../../../../services/service-proxies';\nimport { getServiceProxy } from '../../../../services';\nimport * as jsCookie from 'js-cookie';\nimport { isMobile } from 'react-device-detect';\nimport './HomePageScreen.less';\nimport CurrentTime from '@client/components/CommonLayout/CurrentTime';\nimport { withNamespaces } from '@client/i18n';\nimport Head from 'next/head';\nimport { config } from '@client/config';\n\ninterface Props {\n  topBrands: Brand[];\n  searchKeyword: string;\n  resultSearchNewestPost: ElasticSearchResult;\n  profileState: ProfileState;\n  profileData: User;\n  profileReducers: ProfileReducers & ProfileEffects;\n  followState: FollowState;\n  followReducers: FollowReducers & FollowEffects;\n  searchState: SearchState;\n  searchReducers: SearchReducers & SearchEffects;\n}\ninterface State {\n  categories: Category[];\n  provinces: Province[];\n  commonKeywords: CommonKeyword[];\n  seeMoreClicked: boolean;\n  seeMoreTotalMachineClicked: boolean;\n  resultSearchNewestPost: ElasticSearchResult;\n  resultSuggestForToday: ElasticSearchResult;\n  isLoadingNearestMachine: boolean;\n  newsDataNearestMachine: DataResult;\n  recentViewed: {\n    data: RecentViewedItem[];\n    before?: string;\n    after?: string;\n    first: number;\n    sortBy: string;\n  };\n  isLoadingRecentViewed: boolean;\n}\nclass HomePageScreen extends React.Component<Props, State> {\n  state: State = {\n    categories: [],\n    provinces: [],\n    commonKeywords: [],\n    seeMoreTotalMachineClicked: false,\n    seeMoreClicked: false,\n    resultSearchNewestPost: this.props.resultSearchNewestPost,\n    resultSuggestForToday: {\n      data: [],\n      before: '',\n      after: '',\n    },\n    newsDataNearestMachine: {\n      data: [],\n    },\n    isLoadingNearestMachine: false,\n    recentViewed: {\n      data: [],\n      before: undefined,\n      after: undefined,\n      first: 4,\n      sortBy: `lastModifiedAt|desc`,\n    },\n    isLoadingRecentViewed: false,\n  };\n\n  componentDidMount() {\n    this.getCategories();\n    this.getProvinces();\n    this.getCommonKeywords();\n    this.getResultSuggestForToday();\n    this.getMostFollowNews();\n    this.getRecentViewedData();\n  }\n\n  getCategories = async () => {\n    try {\n      const serviceProxy = getServiceProxy();\n      const categories = await serviceProxy.findCategories();\n      this.setState({\n        categories: categories.data,\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  getProvinces = async () => {\n    try {\n      const serviceProxy = getServiceProxy();\n      const provinces = await serviceProxy.findProvinces();\n      this.setState({\n        provinces: provinces.data,\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  getCommonKeywords = async () => {\n    try {\n      const serviceProxy = getServiceProxy();\n      const commonKeywords = await serviceProxy.getCommonKeywords(20, 'count|desc', undefined, undefined);\n      this.setState({\n        commonKeywords: commonKeywords.data,\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  getResultSuggestForToday = async () => {\n    try {\n      const pageSizeSuggestForToday = 20;\n      const serviceProxy = getServiceProxy();\n      const resultSuggestForToday = await serviceProxy.searchElasticsearch(\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        'SELL',\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        pageSizeSuggestForToday,\n        'elasticsearchCreatedAt|desc',\n        undefined,\n        undefined,\n      );\n      this.setState({\n        resultSuggestForToday: {\n          data: resultSuggestForToday.data,\n          before: resultSuggestForToday.before,\n          after: resultSuggestForToday.after,\n        },\n      });\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  getMostFollowNews = async () => {\n    try {\n      const pageSizeNewsMostFollow = isMobile ? 2 : 4;\n      const serviceProxy = getServiceProxy();\n      const resultNewsMostFollow = await serviceProxy.searchNewsMostFollow(\n        undefined,\n        pageSizeNewsMostFollow,\n        'counterFollow',\n        '_id',\n        undefined,\n        undefined,\n      );\n\n      this.props.searchReducers.getDataMostFollowSuccess(resultNewsMostFollow);\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.log(error);\n    }\n  }\n\n  getRecentViewedData = async () => {\n    const idToken = jsCookie.get('token');\n    const serviceProxies = getServiceProxy(idToken);\n    const recentViewedResult = await serviceProxies.getRecentViewed(\n      this.state.recentViewed.first,\n      this.state.recentViewed.sortBy,\n      undefined,\n      undefined,\n    );\n\n    this.setState({\n      recentViewed: {\n        ...this.state.recentViewed,\n        data: recentViewedResult.data,\n        before: recentViewedResult.before,\n        after: recentViewedResult.after,\n      },\n    });\n  }\n\n  getRecentViewedNextPage = async () => {\n    this.setState({ isLoadingRecentViewed: true });\n    try {\n      const serviceProxies = getServiceProxy();\n      const recentViewedResult = await serviceProxies.getRecentViewed(\n        this.state.recentViewed.first,\n        this.state.recentViewed.sortBy,\n        undefined,\n        this.state.recentViewed.after,\n      );\n\n      this.setState({\n        recentViewed: {\n          ...this.state.recentViewed,\n          data: recentViewedResult.data,\n          before: recentViewedResult.before,\n          after: recentViewedResult.after,\n        },\n        isLoadingRecentViewed: false,\n      });\n    } catch (error) {\n      message.error(error.message || JSON.parse(error.response).message);\n    }\n  }\n\n  getRecentViewedPrevPage = async () => {\n    this.setState({ isLoadingRecentViewed: true });\n    try {\n      const serviceProxies = getServiceProxy();\n      const recentViewedResult = await serviceProxies.getRecentViewed(\n        this.state.recentViewed.first,\n        this.state.recentViewed.sortBy,\n        this.state.recentViewed.before,\n        undefined,\n      );\n\n      this.setState({\n        recentViewed: {\n          ...this.state.recentViewed,\n          data: recentViewedResult.data,\n          before: recentViewedResult.before,\n          after: recentViewedResult.after,\n        },\n        isLoadingRecentViewed: false,\n      });\n    } catch (error) {\n      message.error(error.message || JSON.parse(error.response).message);\n    }\n  }\n\n  changeSuggestForTodayFollowStatus = async (starStatus: string, id: string) => {\n    if (this.props.profileState && this.props.profileState.authUser) {\n      if (starStatus === 'filled') {\n        await this.props.followReducers.unfollowNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.setState({\n          resultSuggestForToday: {\n            ...this.state.resultSuggestForToday,\n            data: this.state.resultSuggestForToday.data.map((value: any) => {\n              if (value._id === id) {\n                return {\n                  ...value,\n                  isFollowing: false,\n                };\n              } else {\n                return value;\n              }\n            }),\n          },\n        });\n      } else {\n        await this.props.followReducers.followNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.setState({\n          resultSuggestForToday: {\n            ...this.state.resultSuggestForToday,\n            data: this.state.resultSuggestForToday.data.map((value: any) => {\n              if (value._id === id) {\n                return {\n                  ...value,\n                  isFollowing: true,\n                };\n              } else {\n                return value;\n              }\n            }),\n          },\n        });\n      }\n    } else {\n      await this.props.profileReducers.openModal({ modalName: 'login' });\n      message.warning('Bạn cần đăng nhập để thực hiện chức năng này!');\n    }\n  }\n\n  changeRecentViewedFollowStatus = async (starStatus: string, id: string) => {\n    if (this.props.profileState && this.props.profileState.authUser) {\n      if (starStatus === 'filled') {\n        await this.props.followReducers.unfollowNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.setState({\n          recentViewed: {\n            ...this.state.recentViewed,\n            data: this.state.recentViewed.data.map((value: any) => {\n              if (value.news._id === id) {\n                return {\n                  ...value,\n                  news: {\n                    ...value.news,\n                    isFollowing: false,\n                  },\n                };\n              } else {\n                return value;\n              }\n            }),\n          },\n        });\n      } else {\n        await this.props.followReducers.followNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.setState({\n          recentViewed: {\n            ...this.state.recentViewed,\n            data: this.state.recentViewed.data.map((value: any) => {\n              if (value.news._id === id) {\n                return {\n                  ...value,\n                  news: {\n                    ...value.news,\n                    isFollowing: true,\n                  },\n                };\n              } else {\n                return value;\n              }\n            }),\n          },\n        });\n      }\n    } else {\n      await this.props.profileReducers.openModal({ modalName: 'login' });\n      message.warning('Bạn cần đăng nhập để thực hiện chức năng này!');\n    }\n  }\n\n  onSeeMoreCityListButtonClick: any = () => {\n    this.setState({ seeMoreClicked: true });\n  }\n\n  fetchDataDynamic = async (newsType: string | undefined, otherNewsType: string | undefined, before: string | undefined, after: string | undefined, location: string | undefined) => {\n    const pageSize = isMobile ? 4 : 8;\n    const serviceProxy = getServiceProxy();\n    const result = await serviceProxy.searchElasticsearch(\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      otherNewsType,\n      newsType,\n      undefined,\n      undefined,\n      undefined,\n      location,\n      undefined,\n      undefined,\n      undefined,\n      pageSize,\n      'elasticsearchCreatedAt|desc',\n      before,\n      after,\n    );\n    return result;\n  }\n\n  getDataMostFollow = async (before: string | undefined, after: string | undefined) => {\n    const pageSize = isMobile ? 2 : 4;\n    const sortBy = 'counterFollow';\n    const otherSortBy = '_id';\n\n    const serviceProxy = getServiceProxy();\n    const result = await serviceProxy.searchNewsMostFollow(\n      undefined,\n      pageSize,\n      sortBy,\n      otherSortBy,\n      before,\n      after,\n    );\n    return result;\n  }\n\n  getDataInTabs = async (activeTab: string, newsType: string, otherNewsType: string | undefined, dataLength: number, objectLoading: object) => {\n    this.props.searchReducers.changeTabsOnHomePage(activeTab);\n    this.props.searchReducers.changeStatusNewsTypeSearch(newsType);\n    if (dataLength === 0) {\n      this.props.searchReducers.activeLoading(objectLoading);\n      const result = await this.fetchDataDynamic(newsType, otherNewsType, undefined, undefined, undefined);\n      this.props.searchReducers.getDataInTabsSuccess({ result, newsType });\n    }\n  }\n\n  onChangeTabs = async (activeKeys: string) => {\n    switch (activeKeys) {\n      case '1':\n        this.getDataInTabs('1', 'SELL', undefined, this.props.searchState.dataTotal.dataSell.data.length, { isLoadingDataSell: true });\n        break;\n      case '2':\n        this.getDataInTabs('2', 'BUY', 'RENT', this.props.searchState.dataTotal.dataBuy.data.length, { isLoadingDataBuy: true });\n        break;\n      case '3':\n        this.getDataInTabs('3', 'LEASE', undefined, this.props.searchState.dataTotal.dataLease.data.length, { isLoadingDataLease: true });\n        break;\n      case '4':\n        if (this.props.profileData && this.props.profileData.province) {\n          this.setState({ isLoadingNearestMachine: true });\n          this.props.searchReducers.changeStatusNewsTypeSearch('NEAREST');\n          const result = await this.fetchDataDynamic(undefined, undefined, undefined, undefined, this.props.profileData.province);\n          this.setState({\n            newsDataNearestMachine: result,\n            isLoadingNearestMachine: false,\n          });\n        }\n    }\n  }\n\n  getDataForButton = async (beforeInData: any, afterInData: any, objectLoading: object, tab: string, otherNewsType: string | undefined) => {\n    if (beforeInData !== undefined || afterInData !== undefined) {\n      this.props.searchReducers.activeLoading(objectLoading);\n      const result = await this.fetchDataDynamic(tab, otherNewsType, beforeInData, afterInData, undefined);\n      this.props.searchReducers.getDataInTabsSuccess({ result, newsType: this.props.searchState.statusNewsTypeSearch });\n    }\n  }\n\n  onClickButtonLeft = async () => {\n    switch (this.props.searchState.statusNewsTypeSearch) {\n      case 'SELL':\n        this.getDataForButton(this.props.searchState.dataTotal.dataSell.before, undefined, { isLoadingDataSell: true }, 'SELL', undefined);\n        break;\n      case 'BUY':\n        this.getDataForButton(this.props.searchState.dataTotal.dataBuy.before, undefined, { isLoadingDataBuy: true }, 'BUY', 'RENT');\n        break;\n      case 'LEASE':\n        this.getDataForButton(this.props.searchState.dataTotal.dataLease.before, undefined, { isLoadingDataLease: true }, 'LEASE', undefined);\n        break;\n      case 'NEAREST':\n        this.setState({ isLoadingNearestMachine: true });\n        const before = this.state.newsDataNearestMachine.before;\n        if (before) {\n          const result = await this.fetchDataDynamic(undefined, undefined, before, undefined, (this.props.profileState.authUser as any).province);\n          this.setState({\n            isLoadingNearestMachine: false,\n            newsDataNearestMachine: result,\n          });\n        }\n        break;\n    }\n  }\n\n  onClickButtonRight = async () => {\n    switch (this.props.searchState.statusNewsTypeSearch) {\n      case 'SELL':\n        this.getDataForButton(undefined, this.props.searchState.dataTotal.dataSell.after, { isLoadingDataSell: true }, 'SELL', undefined);\n        break;\n      case 'BUY':\n        this.getDataForButton(undefined, this.props.searchState.dataTotal.dataBuy.after, { isLoadingDataBuy: true }, 'BUY', 'RENT');\n        break;\n      case 'LEASE':\n        this.getDataForButton(undefined, this.props.searchState.dataTotal.dataLease.after, { isLoadingDataLease: true }, 'LEASE', undefined);\n        break;\n      case 'NEAREST':\n        this.setState({ isLoadingNearestMachine: true });\n        const after = this.state.newsDataNearestMachine.after;\n        if (after) {\n          const result = await this.fetchDataDynamic(undefined, undefined, undefined, after, (this.props.profileState.authUser as any).province);\n          this.setState({\n            isLoadingNearestMachine: false,\n            newsDataNearestMachine: result,\n          });\n        }\n        break;\n    }\n  }\n\n  onClickButtonRightMostFollow = async () => {\n    this.props.searchReducers.activeLoading({ isLoadingDataMostFollow: true });\n    const afterDataMostFollow = this.props.searchState.dataTotal.dataMostFollow.after;\n    if (afterDataMostFollow !== undefined) {\n      const result = await this.getDataMostFollow(undefined, afterDataMostFollow);\n      this.props.searchReducers.getDataMostFollowSuccess(result);\n    }\n  }\n  onClickButtonLeftMostFollow = async () => {\n    this.props.searchReducers.activeLoading({ isLoadingDataMostFollow: true });\n    const beforeDataMostFollow = this.props.searchState.dataTotal.dataMostFollow.before;\n    if (beforeDataMostFollow !== undefined) {\n      const result = await this.getDataMostFollow(beforeDataMostFollow, undefined);\n      this.props.searchReducers.getDataMostFollowSuccess(result);\n    }\n  }\n\n  changeFollowStatus = async (starStatus: string, id: string) => {\n    if (this.props.profileState && this.props.profileState.authUser) {\n\n      if (starStatus === 'filled') {\n        await this.props.followReducers.unfollowNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.props.searchReducers.onFollowChangeOnHomeScreenSuccess({\n          starStatus,\n          newsId: id,\n        });\n      } else {\n        await this.props.followReducers.followNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.props.searchReducers.onFollowChangeOnHomeScreenSuccess({\n          starStatus,\n          newsId: id,\n        });\n      }\n    } else {\n      await this.props.profileReducers.openModal({ modalName: 'login' });\n      message.warning('Bạn cần đăng nhập để thực hiện chức năng này!');\n    }\n  }\n  changeMostFollowNewsFollowStatus = async (starStatus: string, id: string) => {\n    if (this.props.profileState && this.props.profileState.authUser) {\n\n      if (starStatus === 'filled') {\n        await this.props.followReducers.unfollowNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.props.searchReducers.onFollowChangeMostFollowNewsSuccess({\n          starStatus,\n          newsId: id,\n        });\n      } else {\n        await this.props.followReducers.followNews({\n          userId: (this.props.profileState.authUser as any).id,\n          newsId: id,\n        });\n        this.props.searchReducers.onFollowChangeMostFollowNewsSuccess({\n          starStatus,\n          newsId: id,\n        });\n      }\n    } else {\n      await this.props.profileReducers.openModal({ modalName: 'login' });\n      message.warning('Bạn cần đăng nhập để thực hiện chức năng này!');\n    }\n  }\n\n  isShowButton = (value: any) => {\n    return value !== undefined ? false : true;\n  }\n\n  onSeeMoreTotalMachineClick = () => {\n    this.setState({ seeMoreTotalMachineClicked: !this.state.seeMoreTotalMachineClicked });\n  }\n\n  render() {\n    const isShowButtonRight = () => {\n      const statusTab = this.props.searchState.statusNewsTypeSearch;\n      switch (statusTab) {\n        case 'SELL':\n          return this.isShowButton(this.props.searchState.dataTotal.dataSell.after);\n          break;\n        case 'BUY':\n          return this.isShowButton(this.props.searchState.dataTotal.dataBuy.after);\n          break;\n        case 'LEASE':\n          return this.isShowButton(this.props.searchState.dataTotal.dataLease.after);\n          break;\n        case 'NEAREST':\n          return this.isShowButton(this.state.newsDataNearestMachine.after);\n          break;\n        default:\n          return null;\n      }\n    };\n    const isShowButtonLeft = () => {\n      const statusTab = this.props.searchState.statusNewsTypeSearch;\n      switch (statusTab) {\n        case 'SELL':\n          return this.isShowButton(this.props.searchState.dataTotal.dataSell.before);\n          break;\n        case 'BUY':\n          return this.isShowButton(this.props.searchState.dataTotal.dataBuy.before);\n          break;\n        case 'LEASE':\n          return this.isShowButton(this.props.searchState.dataTotal.dataLease.before);\n          break;\n        case 'NEAREST':\n          return this.isShowButton(this.state.newsDataNearestMachine.before);\n          break;\n        default:\n          return null;\n      }\n    };\n\n    return (\n      <div className='home-page-screen'>\n        <Head>\n          <title>{`Chợ máy công trình | timmay.vn`}</title>\n          <meta property='fb:app_id' content={config.facebookAppId} />\n          <meta property='description' content='Chợ máy công trình' />\n          <meta property='og:url' content={config.url.main} />\n          <meta property='og:type' content='website' />\n          <meta property='og:title' content={`Chợ máy công trình | timmay.vn`} />\n          <meta property='og:description' content='Chợ máy công trình' />\n          <meta property='og:image:url' content={'/static/images/logo-timmay.png'} />\n          <meta property='og:image:width' content='800' />\n          <meta property='og:image:height' content='600' />\n        </Head>\n\n        <CurrentTime />\n\n        <Header\n          commonKeywords={this.state.commonKeywords}\n          searchKeyword={this.props.searchKeyword}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n          updateFilters={this.props.searchReducers.updateFilters}\n        />\n\n        <MainContent\n          hasSideBar={true}\n          hasMenuItems={true}\n          topBrands={this.props.topBrands}\n          hasBrandList={true}\n        >\n          <DetailsHomePage\n            commonKeywords={this.state.commonKeywords}\n            recentViewedData={this.state.recentViewed.data}\n            isLoadingRecentViewed={this.state.isLoadingRecentViewed}\n            getRecentViewedNextPage={this.getRecentViewedNextPage}\n            getRecentViewedPrevPage={this.getRecentViewedPrevPage}\n            hasRecentViewedNextPage={!Boolean(this.state.recentViewed.after)}\n            hasRecentViewedPrevPage={!Boolean(this.state.recentViewed.before)}\n            categories={this.state.categories}\n            profileState={this.props.profileState}\n            profileData={this.props.profileData}\n            profileReducers={this.props.profileReducers}\n            popularMachine={popularMachine}\n            provinces={this.state.provinces}\n            seeMoreClicked={this.state.seeMoreClicked}\n            onSeeMoreCityListButtonClick={this.onSeeMoreCityListButtonClick}\n            resultSuggestForToday={this.state.resultSuggestForToday}\n            changeFollowStatus={this.changeFollowStatus}\n            onChangeTabs={this.onChangeTabs}\n            searchState={this.props.searchState}\n            buttonLeft={this.onClickButtonLeft}\n            buttonRight={this.onClickButtonRight}\n            disabledButtonLeft={isShowButtonLeft() as any}\n            disabledButtonRight={isShowButtonRight() as any}\n            buttonLeftMostFollow={this.onClickButtonLeftMostFollow}\n            buttonRightMostFollow={this.onClickButtonRightMostFollow}\n            disabledButtonLeftMostFollow={this.isShowButton(this.props.searchState.dataTotal.dataMostFollow.before)}\n            disabledButtonRightMostFollow={this.isShowButton(this.props.searchState.dataTotal.dataMostFollow.after)}\n            changeMostFollowNewsFollowStatus={this.changeMostFollowNewsFollowStatus}\n            changeRecentViewedFollowStatus={this.changeRecentViewedFollowStatus}\n            changeSuggestForTodayFollowStatus={this.changeSuggestForTodayFollowStatus}\n            isLoadingNearestMachine={this.state.isLoadingNearestMachine}\n            newsDataNearestMachine={this.state.newsDataNearestMachine}\n            seeMoreTotalMachineClicked={this.state.seeMoreTotalMachineClicked}\n            onSeeMoreTotalMachineClick={this.onSeeMoreTotalMachineClick}\n          />\n        </MainContent>\n        <Footer />\n      </div >\n    );\n  }\n}\n\nexport default withNamespaces('index')(HomePageScreen);\n","export const cityList = [\n  {\n    'cityName': 'Hà Nội',\n    'quantity': 150,\n  },\n  {\n    'cityName': 'TP. Hồ Chí Minh',\n    'quantity': 149,\n  },\n  {\n    'cityName': 'Bắc Giang',\n    'quantity': 148,\n  },\n  {\n    'cityName': 'Nam Định',\n    'quantity': 147,\n  },\n  {\n    'cityName': 'Sơn La',\n    'quantity': 146,\n  },\n  {\n    'cityName': 'Hà Nội',\n    'quantity': 150,\n  },\n  {\n    'cityName': 'TP. Hồ Chí Minh',\n    'quantity': 149,\n  },\n  {\n    'cityName': 'Bắc Giang',\n    'quantity': 148,\n  },\n  {\n    'cityName': 'Nam Định',\n    'quantity': 147,\n  },\n  {\n    'cityName': 'Sơn La',\n    'quantity': 146,\n  },\n  {\n    'cityName': 'Hà Nội',\n    'quantity': 150,\n  },\n  {\n    'cityName': 'TP. Hồ Chí Minh',\n    'quantity': 149,\n  },\n  {\n    'cityName': 'Bắc Giang',\n    'quantity': 148,\n  },\n  {\n    'cityName': 'Nam Định',\n    'quantity': 147,\n  },\n  {\n    'cityName': 'Sơn La',\n    'quantity': 146,\n  },\n  {\n    'cityName': 'Hà Nội',\n    'quantity': 150,\n  },\n  {\n    'cityName': 'TP. Hồ Chí Minh',\n    'quantity': 149,\n  },\n  {\n    'cityName': 'Bắc Giang',\n    'quantity': 148,\n  },\n  {\n    'cityName': 'Nam Định',\n    'quantity': 147,\n  },\n  {\n    'cityName': 'Sơn La',\n    'quantity': 146,\n  },\n];\nexport const brandList = [\n  {\n    'imageUrl': '/static/images/brand-1.png',\n    'name': '1',\n  },\n  {\n    'imageUrl': '/static/images/brand-2.png',\n    'name': '1',\n  },\n  {\n    'imageUrl': '/static/images/brand-3.png',\n    'name': '1',\n  },\n  {\n    'imageUrl': '/static/images/brand-4.png',\n    'name': '1',\n  },\n  {\n    'imageUrl': '/static/images/brand-5.png',\n    'name': '1',\n  },\n  {\n    'imageUrl': '/static/images/brand-6.png',\n    'name': '1',\n  },\n  {\n    'imageUrl': '/static/images/brand-7.png',\n    'name': '1',\n  },\n];\n\nexport const dataMachine = [\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 1,\n    title: 'Komatsu PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Hà Nội',\n    price: 45000000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 2,\n    title: 'Hitachi PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Nam Định',\n    price: 3600000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 3,\n    title: 'Komatsu PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Hà Nội',\n    price: 45000000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 4,\n    title: 'Hitachi PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Nam Định',\n    price: 3600000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 5,\n    title: 'Komatsu PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Hà Nội',\n    price: 45000000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 6,\n    title: 'Hitachi PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Nam Định',\n    price: 3600000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 7,\n    title: 'Komatsu PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Hà Nội',\n    price: 45000000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 8,\n    title: 'Hitachi PC200-6',\n    imageUrls: ['/static/images/may-ui.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Nam Định',\n    price: 3600000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n];\nexport const popularMachine = [\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 1,\n    title: 'Komatsu PC200-6',\n    imageUrls: ['/static/images/may-1.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Hà Nội',\n    price: 45000000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 2,\n    title: 'Hitachi PC200-6',\n    imageUrls: ['/static/images/may-2.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Nam Định',\n    price: 3600000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 3,\n    title: 'Komatsu PC200-6',\n    imageUrls: ['/static/images/may-3.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Hà Nội',\n    price: 45000000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n  {\n    id: 'iVTOIQVYireM25PdQknwnt1o8n12',\n    key: 4,\n    title: 'Hitachi PC200-6',\n    imageUrls: ['/static/images/may-4.jpg'],\n    status: 'Đã sử dụng',\n    ownerName: 'Thinh Nguyen',\n    location: 'Nam Định',\n    price: 3600000,\n    followBy: ['Uv438xXnmIbKKUdjQfTzG8QYot82'],\n  },\n];\n","import React, { Fragment } from 'react';\nimport './BrandList.less';\nimport { FeatureBrand } from '@client/services/service-proxies';\nimport Slider from 'react-slick';\nimport Head from 'next/head';\n\ninterface Props {\n  featureBrands: FeatureBrand[];\n}\nconst BrandList = (props: Props) => {\n  const renderBrand = props.featureBrands.map((featureBrand: FeatureBrand, index: number) => {\n    return (\n      <div className='brand-image' key={index}>\n        <a href={`${featureBrand.hyperlink}`} title={featureBrand.brand.name}>\n          <img src={featureBrand.logoImage} />\n        </a>\n      </div>\n    );\n  });\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    initialSlide: 0,\n    autoplay: true,\n    speed: 4000,\n    autoplaySpeed: 4000,\n    responsive: [\n      {\n        breakpoint: 1120,\n        settings: {\n          dots: false,\n          infinite: true,\n          slidesToShow: 4,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          autoplay: true,\n          speed: 4000,\n          autoplaySpeed: 4000,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          dots: false,\n          infinite: true,\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          autoplay: true,\n          speed: 4000,\n          autoplaySpeed: 4000,\n        },\n      },\n      {\n        breakpoint: 425,\n        settings: {\n          dots: false,\n          infinite: true,\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          autoplay: true,\n          speed: 4000,\n          autoplaySpeed: 4000,\n        },\n      },\n      {\n        breakpoint: 576,\n        settings: {\n          dots: false,\n          infinite: true,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          autoplay: true,\n          speed: 4000,\n          autoplaySpeed: 4000,\n        },\n      },\n    ],\n  };\n  return (\n    <Fragment>\n      <Head>\n        <meta name='viewport' content='width=device-width, initial-scale=1' />\n        <meta name='google' content='notranslate'></meta>\n        <meta charSet='utf-8' />\n        <link rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css' />\n        <link rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css' />\n        <link rel='shortcut icon' type='image/png' href='/static/images/favicon.png' />\n        <title>Timmay.vn | Chợ máy công trình</title>\n      </Head>\n        <div className='brand-list'>\n          <Slider {...settings}>\n            {renderBrand}\n          </Slider>\n        </div>\n    </Fragment>\n  );\n};\n\nexport default BrandList;\n","import * as React from 'react';\nimport './CityList.less';\nimport { Row, Col } from 'antd';\nimport { Province } from '@client/services/service-proxies';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  provinces: Province[];\n  seeMoreClicked: boolean;\n  onSeeMoreButtonClick: () => void;\n  t: (key: string) => string;\n}\nconst CityList = (props: Props) => {\n  const translate = props.t;\n  const renderCityList = props.provinces.map((value: any, index: number) => {\n    if (!props.seeMoreClicked) {\n      if (index < 15) {\n        return (\n          <Col lg={6} md={8} sm={12} xs={12} key={index}>\n            <a href={`/tim-kiem?location=${value.slug}`} target='_blank' title={value.name}>\n              <span className='city-item'>{value.name} ({value.totalNews > 9999 ? '9999+' : value.totalNews})</span>\n            </a>\n          </Col>\n        );\n      } else if (index === 15) {\n        return (\n          <Col lg={6} md={8} sm={12} xs={12} key={index}>\n            <span className='see-more-button' onClick={props.onSeeMoreButtonClick}>{translate('common:showMore')}</span>\n          </Col>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return (\n        <Col lg={6} md={8} sm={12} xs={12} key={index}>\n          <a href={`/tim-kiem?location=${value.slug}`} target='_blank' title={value.name}>\n            <span className='city-item'>{value.name} ({value.totalNews})</span>\n          </a>\n        </Col>\n      );\n    }\n  });\n\n  return (\n    <div className='city-list'>\n      <h3>{translate('common:provinces')}</h3>\n      <Row>\n        {renderCityList}\n      </Row>\n    </div>\n  );\n};\n\nexport default withNamespaces('common')(CityList);\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { CommonKeyword } from '@client/services/service-proxies';\nimport './CommonKeywords.less';\n\ninterface Props {\n  commonKeywords: CommonKeyword[];\n  t: (key: string) => string;\n}\nconst CommonKeywords = (props: Props) => {\n  return (\n    <div className='common-keywords'>\n      <h3>{props.t('common:common-keywords')}</h3>\n\n      <Row>\n        <ul>\n          {props.commonKeywords.map((item, index) => (\n            <Col lg={6} md={8} sm={12} xs={12} key={index}>\n              <li>\n                <a href={`/tim-kiem?keyword=${item.keyword}`} target='_blank' title={item.keyword}>\n                  <span className='city-item'>{item.keyword}</span>\n                </a>\n              </li>\n            </Col>\n          ))}\n        </ul>\n      </Row>\n    </div>\n  );\n};\n\nexport default CommonKeywords;\n","import React from 'react';\nimport { Row, Tabs, Spin } from 'antd';\nimport './DetailsHomePage.less';\nimport CityList from '../components/CityList';\nimport MachineList from './MachineList';\nimport MachineDetailBox from '@client/components/MachineDetailBox/MachineDetailBox';\nimport { RecentViewedItem, Category, Province, CommonKeyword, User } from '@client/services/service-proxies';\nimport CommonKeywords from './CommonKeywords';\nconst TabPane = Tabs.TabPane;\nimport { SearchState, ProfileState, ProfileReducers, ProfileEffects } from '@client/store';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  searchState: SearchState;\n  profileState: ProfileState;\n  profileData: User;\n  profileReducers: ProfileReducers & ProfileEffects;\n  disabledButtonLeft: boolean;\n  disabledButtonRight: boolean;\n  disabledButtonLeftMostFollow: boolean;\n  disabledButtonRightMostFollow: boolean;\n  categories: Category[];\n  provinces: Province[];\n  seeMoreClicked: boolean;\n  recentViewedData: RecentViewedItem[];\n  popularMachine: any[];\n  commonKeywords: CommonKeyword[];\n  hasRecentViewedNextPage: boolean;\n  hasRecentViewedPrevPage: boolean;\n  isLoadingRecentViewed: boolean;\n  isLoadingNearestMachine: boolean;\n  newsDataNearestMachine: any;\n  resultSuggestForToday: any;\n  seeMoreTotalMachineClicked: boolean;\n  changeFollowStatus: (starStatus: string, id: string) => void;\n  onChangeTabs: (activeKey: string) => void;\n  buttonLeft: () => void;\n  buttonRight: () => void;\n  changeMostFollowNewsFollowStatus: (starStatus: string, id: string) => void;\n  buttonLeftMostFollow: () => void;\n  buttonRightMostFollow: () => void;\n  onSeeMoreCityListButtonClick: () => void;\n  getRecentViewedNextPage: () => void;\n  getRecentViewedPrevPage: () => void;\n  onSeeMoreTotalMachineClick: () => void;\n  changeRecentViewedFollowStatus: (starStatus: string, id: string) => void;\n  changeSuggestForTodayFollowStatus: (starStatus: string, id: string) => void;\n  t: (key: string) => string;\n}\ninterface State { }\nclass DetailsHomePage extends React.Component<Props, State> {\n  render() {\n    const translate = this.props.t;\n    return (\n      <Row className='details-home-page'>\n        <Tabs defaultActiveKey='1' onChange={(activeKey) => this.props.onChangeTabs(activeKey)}>\n          <TabPane tab={translate('index:news-sell')} key='1'>\n            <Spin spinning={this.props.searchState.isLoadingDataSell}>\n              <Row className='machine-list'>\n                {this.props.searchState.dataTotal.dataSell.data.length === 0\n                  ? <div className='box-nodata'>{translate('index:no-data')}</div>\n                  : <MachineDetailBox\n                    title={translate('index:news-sell')}\n                    data={this.props.searchState.dataTotal.dataSell.data}\n                    profileState={this.props.profileState}\n                    changeFollowStatus={this.props.changeFollowStatus}\n                    buttonLeft={this.props.buttonLeft}\n                    buttonRight={this.props.buttonRight}\n                    disabledButtonLeft={this.props.disabledButtonLeft}\n                    disabledButtonRight={this.props.disabledButtonRight}\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    hiddenButton={false}\n                  />}\n              </Row>\n            </Spin>\n          </TabPane>\n\n          <TabPane tab={translate('index:news-buy-or-rent')} key='2'>\n            <Spin spinning={this.props.searchState.isLoadingDataBuy}>\n              <Row className='machine-list'>\n                {this.props.searchState.dataTotal.dataBuy.data.length === 0\n                  ? <div className='box-nodata'>{translate('index:no-data')}</div>\n                  : <MachineDetailBox\n                    title={translate('index:news-buy-or-rent')}\n                    data={this.props.searchState.dataTotal.dataBuy.data}\n                    profileState={this.props.profileState}\n                    changeFollowStatus={this.props.changeFollowStatus}\n                    buttonLeft={this.props.buttonLeft}\n                    buttonRight={this.props.buttonRight}\n                    disabledButtonLeft={this.props.disabledButtonLeft}\n                    disabledButtonRight={this.props.disabledButtonRight}\n                    hiddenButton={false}\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    lg={6} />}\n              </Row>\n            </Spin>\n          </TabPane>\n\n          <TabPane tab={translate('index:machine-for-rent')} key='3'>\n            <Spin spinning={this.props.searchState.isLoadingDataLease}>\n              <Row className='machine-list'>\n                {this.props.searchState.dataTotal.dataLease.data.length === 0\n                  ? <div className='box-nodata'>{translate('index:no-data')}</div>\n                  : <MachineDetailBox\n                    title={translate('index:machine-for-rent')}\n                    data={this.props.searchState.dataTotal.dataLease.data}\n                    profileState={this.props.profileState}\n                    changeFollowStatus={this.props.changeFollowStatus}\n                    buttonLeft={this.props.buttonLeft}\n                    buttonRight={this.props.buttonRight}\n                    disabledButtonLeft={this.props.disabledButtonLeft}\n                    disabledButtonRight={this.props.disabledButtonRight}\n                    hiddenButton={false}\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    lg={6} />}\n              </Row>\n            </Spin>\n          </TabPane>\n\n          <TabPane tab={translate('index:machine-nearest')} key='4' >\n            <Spin spinning={this.props.isLoadingNearestMachine}>\n              <Row className='machine-list'>\n                {this.props.profileData && this.props.profileData.province\n                  ? (\n                    <MachineDetailBox\n                      profileState={this.props.profileState}\n                      title={translate('index:machine-nearest')}\n                      data={this.props.newsDataNearestMachine.data}\n                      changeFollowStatus={this.props.changeMostFollowNewsFollowStatus}\n                      buttonLeft={this.props.buttonLeft}\n                      buttonRight={this.props.buttonRight}\n                      disabledButtonLeft={this.props.disabledButtonLeft}\n                      disabledButtonRight={this.props.disabledButtonRight}\n                      hiddenButton={false}\n                      xs={12}\n                      sm={12}\n                      md={12}\n                      lg={6}\n                    />\n                  ) : (\n                    <div className='box-nodata'>\n                      {this.props.profileState && this.props.profileState.authUser && this.props.profileState.authUser.id ? (\n                        <a href={`/thong-tin-ca-nhan`}>\n                          {translate('common:update-location-notify')}\n                        </a>\n                      ) : (\n                        <a onClick={() => this.props.profileReducers.openModal({ modalName: 'login' })}>\n                          {translate('common:login-update-location-notify')}\n                        </a>\n                      )}\n                    </div>\n                  )}\n              </Row>\n            </Spin>\n          </TabPane>\n        </Tabs>\n        <Spin spinning={this.props.searchState.isLoadingDataMostFollow}>\n          <Row className='machine-list'>\n            <MachineDetailBox\n              profileState={this.props.profileState}\n              title={translate('index:most-follow-news')}\n              data={this.props.searchState.dataTotal.dataMostFollow.data}\n              changeFollowStatus={this.props.changeMostFollowNewsFollowStatus}\n              buttonLeft={this.props.buttonLeftMostFollow}\n              buttonRight={this.props.buttonRightMostFollow}\n              disabledButtonLeft={this.props.disabledButtonLeftMostFollow}\n              disabledButtonRight={this.props.disabledButtonRightMostFollow}\n              hiddenButton={false}\n              isShowTotalFollowAndView={false}\n              xs={12}\n              sm={12}\n              md={12}\n              lg={6} />\n          </Row>\n        </Spin>\n        <Row>\n          <MachineList categories={this.props.categories} seeMoreTotalMachineClicked={this.props.seeMoreTotalMachineClicked} onSeeMoreTotalMachineClick={this.props.onSeeMoreTotalMachineClick} />\n        </Row>\n\n        <CityList\n          provinces={this.props.provinces}\n          seeMoreClicked={this.props.seeMoreClicked}\n          onSeeMoreButtonClick={this.props.onSeeMoreCityListButtonClick}\n        />\n        {this.props.recentViewedData.length > 0 && (\n          <Spin spinning={this.props.isLoadingRecentViewed}>\n            <Row className='machine-list'>\n              <MachineDetailBox\n                title={translate('index:recent-news')}\n                data={this.props.recentViewedData.map((item: RecentViewedItem) => item.news)}\n                profileState={this.props.profileState}\n                xs={12}\n                sm={12}\n                md={12}\n                lg={6}\n                buttonRight={this.props.getRecentViewedNextPage}\n                buttonLeft={this.props.getRecentViewedPrevPage}\n                disabledButtonRight={this.props.hasRecentViewedNextPage}\n                disabledButtonLeft={this.props.hasRecentViewedPrevPage}\n                changeFollowStatus={this.props.changeRecentViewedFollowStatus}\n                hiddenButton={false}\n              />\n            </Row>\n          </Spin>\n        )}\n        <Row className='machine-list'>\n          <MachineDetailBox\n            title={translate('index:suggest-for-today')}\n            data={this.props.resultSuggestForToday.data}\n            profileState={this.props.profileState}\n            hiddenButton={true}\n            disabledButtonLeft={true}\n            disabledButtonRight={true}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={6}\n            changeFollowStatus={this.props.changeSuggestForTodayFollowStatus}\n            buttonLeft={() => { return; }}\n            buttonRight={() => { return; }}\n          />\n        </Row>\n\n        <CommonKeywords commonKeywords={this.props.commonKeywords} t={this.props.t} />\n      </Row>\n    );\n  }\n}\n\nexport default withNamespaces('index')(DetailsHomePage);\n","import * as React from 'react';\nimport { Row, Col } from 'antd';\nimport './MachineList.less';\nimport { Category } from '@client/services/service-proxies';\nimport { withNamespaces } from '@client/i18n';\nimport { isMobile } from 'react-device-detect';\n\ninterface Props {\n  categories: Category[];\n  onSeeMoreTotalMachineClick: () => void;\n  seeMoreTotalMachineClicked: boolean;\n  t: (key: string) => string;\n}\nconst Fragment = React.Fragment;\nconst MachineList = (props: Props) => {\n  const renderMachineList = props.categories.map((category, index) => {\n    if (!props.seeMoreTotalMachineClicked) {\n      if (isMobile) {\n        if (index < 6) {\n          return (\n            <Col lg={4} md={8} sm={8} xs={8} className='machine-item' key={index} style={{ textAlign: 'center' }}>\n              <a onClick={() => {\n                window.location.href = `/chung-loai-may/${category.slug}`;\n              }} title={category.name}>\n                <img src={category.imageUrl} width='80%' />\n                <br />\n                <span className='name-machine' >{category.name} ({category.totalNews})</span>\n              </a>\n            </Col>\n          );\n        } else {\n          return null;\n        }\n\n      } else {\n        if (index < 12) {\n          return (\n            <Col lg={4} md={8} sm={8} xs={8} className='machine-item' key={index} style={{ textAlign: 'center' }}>\n              <a onClick={() => {\n                window.location.href = `/chung-loai-may/${category.slug}`;\n              }} title={category.name}>\n                <img src={category.imageUrl} width='80%' />\n                <br />\n                <span className='name-machine' >{category.name} ({category.totalNews})</span>\n              </a>\n            </Col>\n          );\n        } else {\n          return null;\n        }\n      }\n\n    } else {\n      return (\n        <Col lg={4} md={8} sm={8} xs={8} className='machine-item' key={index} style={{ textAlign: 'center' }}>\n          <a onClick={() => {\n            window.location.href = `/chung-loai-may/${category.slug}`;\n          }} title={category.name}>\n            <img src={category.imageUrl} width='80%' />\n            <br />\n            <span className='name-machine' >{category.name} ({category.totalNews})</span>\n          </a>\n        </Col>\n      );\n    }\n\n  });\n\n  return (\n    <Fragment>\n      <Row className='machine-list-title'>\n        <h3>{props.t('common:list-of-total-machine')}</h3>\n        <a onClick={props.onSeeMoreTotalMachineClick}>{props.seeMoreTotalMachineClicked ? props.t('common:showLess') : props.t('common:showMore')}</a>\n      </Row>\n      <Row gutter={12} type='flex' className='machine-list'>\n        <Col className='button-pagging' lg={1} md={1} sm={0} xs={0}>\n        </Col>\n        <Col lg={22} md={22} sm={24} xs={24}>\n          {renderMachineList}\n        </Col>\n        <Col className='button-pagging-right' lg={1} md={1} sm={0} xs={0}>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default withNamespaces('common')(MachineList);\n","import React from 'react';\nimport HomePageScreen from '../modules/machine-news/screens/HomePageScreen/HomePageScreen';\nimport { ProfileState, ProfileEffects, ProfileReducers, FollowState, FollowReducers, FollowEffects, SearchState, SearchReducers, SearchEffects, withRematch, initStore } from '../store';\nimport { Brand, ElasticSearchResult, User } from '../services/service-proxies';\nimport { getServiceProxy } from '../services';\nimport { withNamespaces } from '../i18n';\nimport { isMobile } from '../core/checkIsMobile';\nimport * as jsCookie from 'js-cookie';\n\ninterface Props {\n  topBrands: Brand[];\n  profileState: ProfileState;\n  profileData: User;\n  profileReducers: ProfileReducers & ProfileEffects;\n  resultSearchNewestPost: ElasticSearchResult;\n  resultSuggestForToday: ElasticSearchResult;\n  followState: FollowState;\n  followReducers: FollowReducers & FollowEffects;\n  searchState: SearchState;\n  searchReducers: SearchReducers & SearchEffects;\n}\ninterface State { }\nclass Index extends React.Component<Props, State> {\n  static async getInitialProps(context: any) {\n    const pageSizeOfNewestPost = isMobile(context.req) ? 4 : 8;\n    let serviceProxy: any;\n    const idToken = !context.req ? jsCookie.get('token') : (context.req as any).cookies.token;\n    serviceProxy = getServiceProxy(idToken);\n\n    const promises = [\n      serviceProxy.searchElasticsearch(\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        'SELL',\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        pageSizeOfNewestPost,\n        'elasticsearchCreatedAt|desc',\n        undefined,\n        undefined,\n      ),\n      serviceProxy.findTopBrands(),\n    ];\n    if (idToken) {\n      promises.push(serviceProxy.findProfile());\n    }\n    const [resultSearchNewestPost, topBrands, profileData] = await Promise.all(promises);\n\n    (context as any).store.dispatch.searchModel.getDataInTabsSuccess({ result: resultSearchNewestPost, newsType: 'SELL' });\n    return {\n      namespacesRequired: ['common', 'index'],\n      resultSearchNewestPost,\n      topBrands: topBrands.data,\n      profileData: profileData ? profileData : {},\n    };\n  }\n\n  render() {\n    return (\n      <HomePageScreen\n        topBrands={this.props.topBrands}\n        followState={this.props.followState}\n        followReducers={this.props.followReducers}\n        searchState={this.props.searchState}\n        searchReducers={this.props.searchReducers}\n        profileState={this.props.profileState}\n        profileReducers={this.props.profileReducers}\n        searchKeyword={this.props.searchState.filters.keyword}\n        resultSearchNewestPost={this.props.resultSearchNewestPost}\n        profileData={this.props.profileData}\n      />\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n    searchState: rootState.searchModel,\n    followState: rootState.followModel,\n  };\n};\n\nconst mapDispatch = (rootReducer: any) => {\n  return {\n    profileReducers: rootReducer.profileModel,\n    searchReducers: rootReducer.searchModel,\n    followReducers: rootReducer.followModel,\n  };\n};\nexport default withRematch(initStore, mapState, mapDispatch)(withNamespaces('index')(Index));\n","\nimport NextRoutes from 'next-routes';\nconst routes: NextRoutes = (NextRoutes as any)();\nconst Link = routes.Link;\nconst Router = routes.Router;\nexport {\n  Link,\n  Router,\n};\nexport default routes;\n","import 'firebase/auth';\nimport { ServiceProxy } from './service-proxies';\nimport { config } from '@client/config';\nimport fetch from 'isomorphic-fetch';\n\nconst getAuthHttp = (idToken: string) => {\n  return {\n    fetch: (url: any, option: any): Promise<Response> => {\n      option.headers.Authorization = `${idToken}`;\n      option.headers['Access-Control-Allow-Origin'] = '*';\n      option.credentials = 'include';\n      return fetch(url, option);\n    },\n  };\n};\n\nconst getServiceProxy = (idToken = ''): ServiceProxy => {\n  const httpOption = getAuthHttp(idToken);\n  return new ServiceProxy(\n    config.url.api,\n    httpOption,\n  );\n};\n\nexport {\n  getServiceProxy,\n};\n","/* tslint:disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v12.0.5.0 (NJsonSchema v9.13.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nexport class ServiceProxy {\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\n        this.http = http ? http : <any>window;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:3000/api\";\n    }\n\n    /**\n     * Register user\n     * @param body (optional) \n     * @return successful operation\n     */\n    registerUser(body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processRegisterUser(_response);\n        });\n    }\n\n    protected processRegisterUser(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find permissions list of all modules\n     * @return successful operation\n     */\n    findPermissions(): Promise<any> {\n        let url_ = this.baseUrl + \"/permissions\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindPermissions(_response);\n        });\n    }\n\n    protected processFindPermissions(response: Response): Promise<any> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <any>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<any>(<any>null);\n    }\n\n    /**\n     * Check role name exist\n     * @param roleName roleName\n     * @return successful operation\n     */\n    checkRoleNameExist(roleName: string): Promise<CheckRoleNameExistResult> {\n        let url_ = this.baseUrl + \"/roles/customs/check-name-exist/{roleName}\";\n        if (roleName === undefined || roleName === null)\n            throw new Error(\"The parameter 'roleName' must be defined.\");\n        url_ = url_.replace(\"{roleName}\", encodeURIComponent(\"\" + roleName)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCheckRoleNameExist(_response);\n        });\n    }\n\n    protected processCheckRoleNameExist(response: Response): Promise<CheckRoleNameExistResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CheckRoleNameExistResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CheckRoleNameExistResult>(<any>null);\n    }\n\n    /**\n     * Find all roles\n     * @return successful operation\n     */\n    getAllRoles(): Promise<GetAllRolesResult> {\n        let url_ = this.baseUrl + \"/roles/customs/get-all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAllRoles(_response);\n        });\n    }\n\n    protected processGetAllRoles(response: Response): Promise<GetAllRolesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAllRolesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAllRolesResult>(<any>null);\n    }\n\n    /**\n     * Find role by id\n     * @param roleId roleId\n     * @return successful operation\n     */\n    findRoleById(roleId: string): Promise<Role> {\n        let url_ = this.baseUrl + \"/roles/{roleId}\";\n        if (roleId === undefined || roleId === null)\n            throw new Error(\"The parameter 'roleId' must be defined.\");\n        url_ = url_.replace(\"{roleId}\", encodeURIComponent(\"\" + roleId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindRoleById(_response);\n        });\n    }\n\n    protected processFindRoleById(response: Response): Promise<Role> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Role>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Role>(<any>null);\n    }\n\n    /**\n     * Update role\n     * @param roleId roleId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateRole(roleId: string, body: any | undefined): Promise<Role> {\n        let url_ = this.baseUrl + \"/roles/{roleId}\";\n        if (roleId === undefined || roleId === null)\n            throw new Error(\"The parameter 'roleId' must be defined.\");\n        url_ = url_.replace(\"{roleId}\", encodeURIComponent(\"\" + roleId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateRole(_response);\n        });\n    }\n\n    protected processUpdateRole(response: Response): Promise<Role> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Role>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Role>(<any>null);\n    }\n\n    /**\n     * Find roles\n     * @param search (optional) search\n     * @param permissions (optional) filter by permissions\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findRoles(search: string | undefined, permissions: string[] | undefined, first: string, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindRolesResult> {\n        let url_ = this.baseUrl + \"/roles?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (permissions === null)\n            throw new Error(\"The parameter 'permissions' cannot be null.\");\n        else if (permissions !== undefined)\n            permissions && permissions.forEach(item => { url_ += \"permissions=\" + encodeURIComponent(\"\" + item) + \"&\"; });\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindRoles(_response);\n        });\n    }\n\n    protected processFindRoles(response: Response): Promise<FindRolesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindRolesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindRolesResult>(<any>null);\n    }\n\n    /**\n     * Create role\n     * @param body (optional) \n     * @return successful operation\n     */\n    createRole(body: any | undefined): Promise<Role> {\n        let url_ = this.baseUrl + \"/roles\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateRole(_response);\n        });\n    }\n\n    protected processCreateRole(response: Response): Promise<Role> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Role>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Role>(<any>null);\n    }\n\n    /**\n     * Find profile\n     * @return successful operation\n     */\n    findProfile(): Promise<User> {\n        let url_ = this.baseUrl + \"/profiles\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindProfile(_response);\n        });\n    }\n\n    protected processFindProfile(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Find use profile for guess view\n     * @param userId userId\n     * @return successful operation\n     */\n    findPublicProfile(userId: string): Promise<User> {\n        let url_ = this.baseUrl + \"/profiles/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindPublicProfile(_response);\n        });\n    }\n\n    protected processFindPublicProfile(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Update profile\n     * @param userId userId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateProfile(userId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/profiles/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateProfile(_response);\n        });\n    }\n\n    protected processUpdateProfile(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find users\n     * @param search (optional) search\n     * @param roles (optional) filter by roles\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findUsers(search: string | undefined, roles: string[] | undefined, first: number, sortBy: string, before: number | undefined, after: number | undefined): Promise<FindUserResult> {\n        let url_ = this.baseUrl + \"/users?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (roles === null)\n            throw new Error(\"The parameter 'roles' cannot be null.\");\n        else if (roles !== undefined)\n            roles && roles.forEach(item => { url_ += \"roles=\" + encodeURIComponent(\"\" + item) + \"&\"; });\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindUsers(_response);\n        });\n    }\n\n    protected processFindUsers(response: Response): Promise<FindUserResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindUserResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindUserResult>(<any>null);\n    }\n\n    /**\n     * Create user\n     * @param body (optional) \n     * @return successful operation\n     */\n    createUser(body: any | undefined): Promise<User> {\n        let url_ = this.baseUrl + \"/users\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateUser(_response);\n        });\n    }\n\n    protected processCreateUser(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Check phone number exist\n     * @param phoneNo phoneNo\n     * @return successful operation\n     */\n    checkPhoneNoExist(phoneNo: string): Promise<CheckPhoneNoExistResult> {\n        let url_ = this.baseUrl + \"/users/customs/check-phone-number-exist/{phoneNo}\";\n        if (phoneNo === undefined || phoneNo === null)\n            throw new Error(\"The parameter 'phoneNo' must be defined.\");\n        url_ = url_.replace(\"{phoneNo}\", encodeURIComponent(\"\" + phoneNo)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCheckPhoneNoExist(_response);\n        });\n    }\n\n    protected processCheckPhoneNoExist(response: Response): Promise<CheckPhoneNoExistResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CheckPhoneNoExistResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CheckPhoneNoExistResult>(<any>null);\n    }\n\n    /**\n     * Check email exist\n     * @param email email\n     * @return successful operation\n     */\n    checkEmailExist(email: string): Promise<CheckEmailExistResult> {\n        let url_ = this.baseUrl + \"/users/customs/check-email-exist/{email}\";\n        if (email === undefined || email === null)\n            throw new Error(\"The parameter 'email' must be defined.\");\n        url_ = url_.replace(\"{email}\", encodeURIComponent(\"\" + email)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCheckEmailExist(_response);\n        });\n    }\n\n    protected processCheckEmailExist(response: Response): Promise<CheckEmailExistResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CheckEmailExistResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CheckEmailExistResult>(<any>null);\n    }\n\n    /**\n     * Find user by id\n     * @param userId userId\n     * @return successful operation\n     */\n    findUserById(userId: string): Promise<User> {\n        let url_ = this.baseUrl + \"/users/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindUserById(_response);\n        });\n    }\n\n    protected processFindUserById(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Update user\n     * @param userId userId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateUser(userId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/users/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateUser(_response);\n        });\n    }\n\n    protected processUpdateUser(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * update adsense\n     * @param adsenseId adsenseId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateAdsense(adsenseId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/adsense/{adsenseId}\";\n        if (adsenseId === undefined || adsenseId === null)\n            throw new Error(\"The parameter 'adsenseId' must be defined.\");\n        url_ = url_.replace(\"{adsenseId}\", encodeURIComponent(\"\" + adsenseId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateAdsense(_response);\n        });\n    }\n\n    protected processUpdateAdsense(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create adsense\n     * @param body (optional) \n     * @return successful operation\n     */\n    createAdsense(body: any | undefined): Promise<Adsense> {\n        let url_ = this.baseUrl + \"/adsense\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateAdsense(_response);\n        });\n    }\n\n    protected processCreateAdsense(response: Response): Promise<Adsense> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Adsense>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Adsense>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Adsense>(<any>null);\n    }\n\n    /**\n     * Get adsense\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getAdsense(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetAdsenseResult> {\n        let url_ = this.baseUrl + \"/adsense?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAdsense(_response);\n        });\n    }\n\n    protected processGetAdsense(response: Response): Promise<GetAdsenseResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAdsenseResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAdsenseResult>(<any>null);\n    }\n\n    /**\n     * update feature brand\n     * @param featureBrandId featureBrandId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateFeatureBrand(featureBrandId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/feature-brands/{featureBrandId}\";\n        if (featureBrandId === undefined || featureBrandId === null)\n            throw new Error(\"The parameter 'featureBrandId' must be defined.\");\n        url_ = url_.replace(\"{featureBrandId}\", encodeURIComponent(\"\" + featureBrandId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateFeatureBrand(_response);\n        });\n    }\n\n    protected processUpdateFeatureBrand(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Get feature brands\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getFeatureBrands(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetFeatureBrandsResult> {\n        let url_ = this.baseUrl + \"/feature-brands?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetFeatureBrands(_response);\n        });\n    }\n\n    protected processGetFeatureBrands(response: Response): Promise<GetFeatureBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetFeatureBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetFeatureBrandsResult>(<any>null);\n    }\n\n    /**\n     * Create feature brand for ads\n     * @param body (optional) \n     * @return successful operation\n     */\n    createFeatureBrand(body: any | undefined): Promise<FeatureBrand> {\n        let url_ = this.baseUrl + \"/feature-brands\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateFeatureBrand(_response);\n        });\n    }\n\n    protected processCreateFeatureBrand(response: Response): Promise<FeatureBrand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FeatureBrand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <FeatureBrand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FeatureBrand>(<any>null);\n    }\n\n    /**\n     * Update rental period\n     * @param rentalPeriodId rental period id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateRentalPeriod(rentalPeriodId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/rental-periods/{rentalPeriodId}\";\n        if (rentalPeriodId === undefined || rentalPeriodId === null)\n            throw new Error(\"The parameter 'rentalPeriodId' must be defined.\");\n        url_ = url_.replace(\"{rentalPeriodId}\", encodeURIComponent(\"\" + rentalPeriodId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateRentalPeriod(_response);\n        });\n    }\n\n    protected processUpdateRentalPeriod(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create rental period item\n     * @param body (optional) \n     * @return successful operation\n     */\n    createRentalPeriod(body: any | undefined): Promise<RentalPeriod> {\n        let url_ = this.baseUrl + \"/rental-periods\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateRentalPeriod(_response);\n        });\n    }\n\n    protected processCreateRentalPeriod(response: Response): Promise<RentalPeriod> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <RentalPeriod>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <RentalPeriod>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<RentalPeriod>(<any>null);\n    }\n\n    /**\n     * Get rental periods\n     * @return successful operation\n     */\n    getAllRentalPeriods(): Promise<GetAllRentalPeriodsResult> {\n        let url_ = this.baseUrl + \"/rental-periods/customs/get-all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAllRentalPeriods(_response);\n        });\n    }\n\n    protected processGetAllRentalPeriods(response: Response): Promise<GetAllRentalPeriodsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAllRentalPeriodsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAllRentalPeriodsResult>(<any>null);\n    }\n\n    /**\n     * Update weight range\n     * @param weightRangeId weight range Id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateWeightRange(weightRangeId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/weight-ranges/{weightRangeId}\";\n        if (weightRangeId === undefined || weightRangeId === null)\n            throw new Error(\"The parameter 'weightRangeId' must be defined.\");\n        url_ = url_.replace(\"{weightRangeId}\", encodeURIComponent(\"\" + weightRangeId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateWeightRange(_response);\n        });\n    }\n\n    protected processUpdateWeightRange(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create weight range item\n     * @param body (optional) \n     * @return successful operation\n     */\n    createWeightRange(body: any | undefined): Promise<WeightRange> {\n        let url_ = this.baseUrl + \"/weight-ranges\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateWeightRange(_response);\n        });\n    }\n\n    protected processCreateWeightRange(response: Response): Promise<WeightRange> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <WeightRange>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <WeightRange>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<WeightRange>(<any>null);\n    }\n\n    /**\n     * Get weight ranges\n     * @return successful operation\n     */\n    getAllWeightRanges(): Promise<GetAllWeightRangesResult> {\n        let url_ = this.baseUrl + \"/weight-ranges/customs/get-all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAllWeightRanges(_response);\n        });\n    }\n\n    protected processGetAllWeightRanges(response: Response): Promise<GetAllWeightRangesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAllWeightRangesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAllWeightRangesResult>(<any>null);\n    }\n\n    /**\n     * Get common search keywords\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getCommonKeywords(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetCommonKeywordsResult> {\n        let url_ = this.baseUrl + \"/common-keywords?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetCommonKeywords(_response);\n        });\n    }\n\n    protected processGetCommonKeywords(response: Response): Promise<GetCommonKeywordsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetCommonKeywordsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetCommonKeywordsResult>(<any>null);\n    }\n\n    /**\n     * Create recent viewed item\n     * @param body (optional) \n     * @return successful operation\n     */\n    createRecentViewed(body: any | undefined): Promise<RecentViewedItem> {\n        let url_ = this.baseUrl + \"/recent-viewed\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateRecentViewed(_response);\n        });\n    }\n\n    protected processCreateRecentViewed(response: Response): Promise<RecentViewedItem> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <RecentViewedItem>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <RecentViewedItem>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<RecentViewedItem>(<any>null);\n    }\n\n    /**\n     * Get recent viewed items by users or uuid key\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getRecentViewed(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetRecentViewedResult> {\n        let url_ = this.baseUrl + \"/recent-viewed?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetRecentViewed(_response);\n        });\n    }\n\n    protected processGetRecentViewed(response: Response): Promise<GetRecentViewedResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetRecentViewedResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetRecentViewedResult>(<any>null);\n    }\n\n    /**\n     * Search news most follow\n     * @param shopId (optional) shop Id\n     * @param first limit size\n     * @param sortBy order by\n     * @param otherSortBy other order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    searchNewsMostFollow(shopId: number | undefined, first: number, sortBy: string, otherSortBy: string, before: any | undefined, after: any | undefined): Promise<SearchNewsMostFollowResult> {\n        let url_ = this.baseUrl + \"/search-news-most-follow?\";\n        if (shopId === null)\n            throw new Error(\"The parameter 'shopId' cannot be null.\");\n        else if (shopId !== undefined)\n            url_ += \"shopId=\" + encodeURIComponent(\"\" + shopId) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (otherSortBy === undefined || otherSortBy === null)\n            throw new Error(\"The parameter 'otherSortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"otherSortBy=\" + encodeURIComponent(\"\" + otherSortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processSearchNewsMostFollow(_response);\n        });\n    }\n\n    protected processSearchNewsMostFollow(response: Response): Promise<SearchNewsMostFollowResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <SearchNewsMostFollowResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<SearchNewsMostFollowResult>(<any>null);\n    }\n\n    /**\n     * Count unread notification\n     * @param ownerId owner id\n     * @return successful operation\n     */\n    countUnreadNotifications(ownerId: string): Promise<CountUnreadNotificationsResult> {\n        let url_ = this.baseUrl + \"/notifications/{ownerId}\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCountUnreadNotifications(_response);\n        });\n    }\n\n    protected processCountUnreadNotifications(response: Response): Promise<CountUnreadNotificationsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CountUnreadNotificationsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CountUnreadNotificationsResult>(<any>null);\n    }\n\n    /**\n     * Read notifications\n     * @param ownerId owner id\n     * @param body (optional) \n     * @return successful operation\n     */\n    readNotifications(ownerId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/notifications/{ownerId}\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processReadNotifications(_response);\n        });\n    }\n\n    protected processReadNotifications(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find notifications\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findNotifications(first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindNotificationsResult> {\n        let url_ = this.baseUrl + \"/notifications?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNotifications(_response);\n        });\n    }\n\n    protected processFindNotifications(response: Response): Promise<FindNotificationsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNotificationsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNotificationsResult>(<any>null);\n    }\n\n    /**\n     * Update report\n     * @param reportId report id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateReport(reportId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/reports/{reportId}\";\n        if (reportId === undefined || reportId === null)\n            throw new Error(\"The parameter 'reportId' must be defined.\");\n        url_ = url_.replace(\"{reportId}\", encodeURIComponent(\"\" + reportId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateReport(_response);\n        });\n    }\n\n    protected processUpdateReport(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find report by id\n     * @param reportId report id\n     * @return successful operation\n     */\n    findReportById(reportId: string): Promise<Report> {\n        let url_ = this.baseUrl + \"/reports/{reportId}\";\n        if (reportId === undefined || reportId === null)\n            throw new Error(\"The parameter 'reportId' must be defined.\");\n        url_ = url_.replace(\"{reportId}\", encodeURIComponent(\"\" + reportId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindReportById(_response);\n        });\n    }\n\n    protected processFindReportById(response: Response): Promise<Report> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Report>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Report>(<any>null);\n    }\n\n    /**\n     * Create report\n     * @param body (optional) \n     * @return successful operation\n     */\n    createReport(body: any | undefined): Promise<Report> {\n        let url_ = this.baseUrl + \"/reports\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateReport(_response);\n        });\n    }\n\n    protected processCreateReport(response: Response): Promise<Report> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Report>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Report>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Report>(<any>null);\n    }\n\n    /**\n     * Find reports\n     * @param search (optional) state filter\n     * @param state (optional) state filter\n     * @param reason (optional) reason filter\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findReports(search: string | undefined, state: State | undefined, reason: Reason | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindReportsResult> {\n        let url_ = this.baseUrl + \"/reports?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (state === null)\n            throw new Error(\"The parameter 'state' cannot be null.\");\n        else if (state !== undefined)\n            url_ += \"state=\" + encodeURIComponent(\"\" + state) + \"&\"; \n        if (reason === null)\n            throw new Error(\"The parameter 'reason' cannot be null.\");\n        else if (reason !== undefined)\n            url_ += \"reason=\" + encodeURIComponent(\"\" + reason) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindReports(_response);\n        });\n    }\n\n    protected processFindReports(response: Response): Promise<FindReportsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindReportsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindReportsResult>(<any>null);\n    }\n\n    /**\n     * Find shop by owner id\n     * @param ownerId shop owner id\n     * @return successful operation\n     */\n    findShopByOwner(ownerId: string): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop/get-by-owner/{ownerId}\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShopByOwner(_response);\n        });\n    }\n\n    protected processFindShopByOwner(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Find shop by id\n     * @param shopDomain shop domain\n     * @param authId (optional) authUserId\n     * @return successful operation\n     */\n    findShopByDomain(shopDomain: string, authId: string | undefined): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop/get-by-domain/{shopDomain}?\";\n        if (shopDomain === undefined || shopDomain === null)\n            throw new Error(\"The parameter 'shopDomain' must be defined.\");\n        url_ = url_.replace(\"{shopDomain}\", encodeURIComponent(\"\" + shopDomain)); \n        if (authId === null)\n            throw new Error(\"The parameter 'authId' cannot be null.\");\n        else if (authId !== undefined)\n            url_ += \"authId=\" + encodeURIComponent(\"\" + authId) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShopByDomain(_response);\n        });\n    }\n\n    protected processFindShopByDomain(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Find news by id\n     * @param shopId shop id\n     * @return successful operation\n     */\n    findShopById(shopId: string): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop/{shopId}\";\n        if (shopId === undefined || shopId === null)\n            throw new Error(\"The parameter 'shopId' must be defined.\");\n        url_ = url_.replace(\"{shopId}\", encodeURIComponent(\"\" + shopId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShopById(_response);\n        });\n    }\n\n    protected processFindShopById(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Update shop\n     * @param shopId shop id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateShop(shopId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/shop/{shopId}\";\n        if (shopId === undefined || shopId === null)\n            throw new Error(\"The parameter 'shopId' must be defined.\");\n        url_ = url_.replace(\"{shopId}\", encodeURIComponent(\"\" + shopId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateShop(_response);\n        });\n    }\n\n    protected processUpdateShop(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create shops\n     * @param body (optional) \n     * @return successful operation\n     */\n    createShop(body: any | undefined): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateShop(_response);\n        });\n    }\n\n    protected processCreateShop(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Find shops\n     * @param search (optional) search query\n     * @param isActive (optional) isActive filter\n     * @param owner (optional) owner filter\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findShops(search: string | undefined, isActive: boolean | undefined, owner: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindShopsResult> {\n        let url_ = this.baseUrl + \"/shop?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (isActive === null)\n            throw new Error(\"The parameter 'isActive' cannot be null.\");\n        else if (isActive !== undefined)\n            url_ += \"isActive=\" + encodeURIComponent(\"\" + isActive) + \"&\"; \n        if (owner === null)\n            throw new Error(\"The parameter 'owner' cannot be null.\");\n        else if (owner !== undefined)\n            url_ += \"owner=\" + encodeURIComponent(\"\" + owner) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShops(_response);\n        });\n    }\n\n    protected processFindShops(response: Response): Promise<FindShopsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindShopsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindShopsResult>(<any>null);\n    }\n\n    /**\n     * Find news by id\n     * @param newsId newsId\n     * @return successful operation\n     */\n    findNewsById(newsId: string): Promise<FindNewsDetail> {\n        let url_ = this.baseUrl + \"/news/{newsId}\";\n        if (newsId === undefined || newsId === null)\n            throw new Error(\"The parameter 'newsId' must be defined.\");\n        url_ = url_.replace(\"{newsId}\", encodeURIComponent(\"\" + newsId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNewsById(_response);\n        });\n    }\n\n    protected processFindNewsById(response: Response): Promise<FindNewsDetail> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNewsDetail>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNewsDetail>(<any>null);\n    }\n\n    /**\n     * Update news\n     * @param newsId newsId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateNews(newsId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/news/{newsId}\";\n        if (newsId === undefined || newsId === null)\n            throw new Error(\"The parameter 'newsId' must be defined.\");\n        url_ = url_.replace(\"{newsId}\", encodeURIComponent(\"\" + newsId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateNews(_response);\n        });\n    }\n\n    protected processUpdateNews(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find news statistics for admin\n     * @param startDate startDate\n     * @param endDate endDate\n     * @return successful operation\n     */\n    findNewsStatisticsInfo(startDate: string, endDate: string): Promise<NewsStatisticsResult> {\n        let url_ = this.baseUrl + \"/news/statistics/info?\";\n        if (startDate === undefined || startDate === null)\n            throw new Error(\"The parameter 'startDate' must be defined and cannot be null.\");\n        else\n            url_ += \"startDate=\" + encodeURIComponent(\"\" + startDate) + \"&\"; \n        if (endDate === undefined || endDate === null)\n            throw new Error(\"The parameter 'endDate' must be defined and cannot be null.\");\n        else\n            url_ += \"endDate=\" + encodeURIComponent(\"\" + endDate) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNewsStatisticsInfo(_response);\n        });\n    }\n\n    protected processFindNewsStatisticsInfo(response: Response): Promise<NewsStatisticsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <NewsStatisticsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<NewsStatisticsResult>(<any>null);\n    }\n\n    /**\n     * Find news by owner\n     * @param ownerId ownerId\n     * @param status news status\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findNewsByOwner(ownerId: string, status: string, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindNewsResultWithFollow> {\n        let url_ = this.baseUrl + \"/news/get-by-owner/{ownerId}?\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        if (status === undefined || status === null)\n            throw new Error(\"The parameter 'status' must be defined and cannot be null.\");\n        else\n            url_ += \"status=\" + encodeURIComponent(\"\" + status) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNewsByOwner(_response);\n        });\n    }\n\n    protected processFindNewsByOwner(response: Response): Promise<FindNewsResultWithFollow> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNewsResultWithFollow>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNewsResultWithFollow>(<any>null);\n    }\n\n    /**\n     * Find news\n     * @param keyword (optional) search keyword\n     * @param state (optional) product state (old/new)\n     * @param priceType (optional) price type (fixed/negociate)\n     * @param minPrice (optional) min price\n     * @param maxPrice (optional) max price\n     * @param newsType (optional) news type (sell/buy/...)\n     * @param owner (optional) news owner id\n     * @param shop (optional) shop id\n     * @param location (optional) location (only by city)\n     * @param type (optional) product type (may ui/may xuc/may dao)\n     * @param brand (optional) product's brand\n     * @param model (optional) product model\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findNews(keyword: string | undefined, state: string | undefined, priceType: string | undefined, minPrice: number | undefined, maxPrice: number | undefined, newsType: string | undefined, owner: string | undefined, shop: string | undefined, location: string | undefined, type: string | undefined, brand: string | undefined, model: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindNewsResult> {\n        let url_ = this.baseUrl + \"/news?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\"; \n        if (state === null)\n            throw new Error(\"The parameter 'state' cannot be null.\");\n        else if (state !== undefined)\n            url_ += \"state=\" + encodeURIComponent(\"\" + state) + \"&\"; \n        if (priceType === null)\n            throw new Error(\"The parameter 'priceType' cannot be null.\");\n        else if (priceType !== undefined)\n            url_ += \"priceType=\" + encodeURIComponent(\"\" + priceType) + \"&\"; \n        if (minPrice === null)\n            throw new Error(\"The parameter 'minPrice' cannot be null.\");\n        else if (minPrice !== undefined)\n            url_ += \"minPrice=\" + encodeURIComponent(\"\" + minPrice) + \"&\"; \n        if (maxPrice === null)\n            throw new Error(\"The parameter 'maxPrice' cannot be null.\");\n        else if (maxPrice !== undefined)\n            url_ += \"maxPrice=\" + encodeURIComponent(\"\" + maxPrice) + \"&\"; \n        if (newsType === null)\n            throw new Error(\"The parameter 'newsType' cannot be null.\");\n        else if (newsType !== undefined)\n            url_ += \"newsType=\" + encodeURIComponent(\"\" + newsType) + \"&\"; \n        if (owner === null)\n            throw new Error(\"The parameter 'owner' cannot be null.\");\n        else if (owner !== undefined)\n            url_ += \"owner=\" + encodeURIComponent(\"\" + owner) + \"&\"; \n        if (shop === null)\n            throw new Error(\"The parameter 'shop' cannot be null.\");\n        else if (shop !== undefined)\n            url_ += \"shop=\" + encodeURIComponent(\"\" + shop) + \"&\"; \n        if (location === null)\n            throw new Error(\"The parameter 'location' cannot be null.\");\n        else if (location !== undefined)\n            url_ += \"location=\" + encodeURIComponent(\"\" + location) + \"&\"; \n        if (type === null)\n            throw new Error(\"The parameter 'type' cannot be null.\");\n        else if (type !== undefined)\n            url_ += \"type=\" + encodeURIComponent(\"\" + type) + \"&\"; \n        if (brand === null)\n            throw new Error(\"The parameter 'brand' cannot be null.\");\n        else if (brand !== undefined)\n            url_ += \"brand=\" + encodeURIComponent(\"\" + brand) + \"&\"; \n        if (model === null)\n            throw new Error(\"The parameter 'model' cannot be null.\");\n        else if (model !== undefined)\n            url_ += \"model=\" + encodeURIComponent(\"\" + model) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNews(_response);\n        });\n    }\n\n    protected processFindNews(response: Response): Promise<FindNewsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNewsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNewsResult>(<any>null);\n    }\n\n    /**\n     * Create news\n     * @param body (optional) \n     * @return successful operation\n     */\n    createNews(body: any | undefined): Promise<News> {\n        let url_ = this.baseUrl + \"/news\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateNews(_response);\n        });\n    }\n\n    protected processCreateNews(response: Response): Promise<News> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <News>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <News>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<News>(<any>null);\n    }\n\n    /**\n     * Find brands\n     * @param search (optional) search query to filter brands\n     * @param first search query to filter brands\n     * @param sortBy search query to filter brands\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findBrands(search: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindBrandsResult> {\n        let url_ = this.baseUrl + \"/brands?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrands(_response);\n        });\n    }\n\n    protected processFindBrands(response: Response): Promise<FindBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindBrandsResult>(<any>null);\n    }\n\n    /**\n     * Create brand\n     * @param body (optional) \n     * @return successful operation\n     */\n    createBrand(body: any | undefined): Promise<Brand> {\n        let url_ = this.baseUrl + \"/brands\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateBrand(_response);\n        });\n    }\n\n    protected processCreateBrand(response: Response): Promise<Brand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Brand>(<any>null);\n    }\n\n    /**\n     * Find brands list\n     * @return successful operation\n     */\n    findBrandList(): Promise<FindBrandsResult> {\n        let url_ = this.baseUrl + \"/brands/customs/find-brand-list\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrandList(_response);\n        });\n    }\n\n    protected processFindBrandList(response: Response): Promise<FindBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindBrandsResult>(<any>null);\n    }\n\n    /**\n     * Find brand detail by slug\n     * @param brandSlug brandSlug\n     * @return successful operation\n     */\n    findBrandDetail(brandSlug: string): Promise<Brand> {\n        let url_ = this.baseUrl + \"/brands/customs/find-brand-detail/{brandSlug}\";\n        if (brandSlug === undefined || brandSlug === null)\n            throw new Error(\"The parameter 'brandSlug' must be defined.\");\n        url_ = url_.replace(\"{brandSlug}\", encodeURIComponent(\"\" + brandSlug)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrandDetail(_response);\n        });\n    }\n\n    protected processFindBrandDetail(response: Response): Promise<Brand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Brand>(<any>null);\n    }\n\n    /**\n     * Find top brands\n     * @return successful operation\n     */\n    findTopBrands(): Promise<FindBrandsResult> {\n        let url_ = this.baseUrl + \"/brands/customs/find-top-brands\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindTopBrands(_response);\n        });\n    }\n\n    protected processFindTopBrands(response: Response): Promise<FindBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindBrandsResult>(<any>null);\n    }\n\n    /**\n     * Find brand by id\n     * @param brandId brandId\n     * @return successful operation\n     */\n    findBrandById(brandId: string): Promise<Brand> {\n        let url_ = this.baseUrl + \"/brands/{brandId}\";\n        if (brandId === undefined || brandId === null)\n            throw new Error(\"The parameter 'brandId' must be defined.\");\n        url_ = url_.replace(\"{brandId}\", encodeURIComponent(\"\" + brandId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrandById(_response);\n        });\n    }\n\n    protected processFindBrandById(response: Response): Promise<Brand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Brand>(<any>null);\n    }\n\n    /**\n     * Update brand\n     * @param brandId brandId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateBrand(brandId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/brands/{brandId}\";\n        if (brandId === undefined || brandId === null)\n            throw new Error(\"The parameter 'brandId' must be defined.\");\n        url_ = url_.replace(\"{brandId}\", encodeURIComponent(\"\" + brandId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateBrand(_response);\n        });\n    }\n\n    protected processUpdateBrand(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find categories\n     * @return successful operation\n     */\n    findCategories(): Promise<FindCategoriesResult> {\n        let url_ = this.baseUrl + \"/categories\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindCategories(_response);\n        });\n    }\n\n    protected processFindCategories(response: Response): Promise<FindCategoriesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindCategoriesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindCategoriesResult>(<any>null);\n    }\n\n    /**\n     * Create category\n     * @param body (optional) \n     * @return successful operation\n     */\n    createCategory(body: any | undefined): Promise<Category> {\n        let url_ = this.baseUrl + \"/categories\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateCategory(_response);\n        });\n    }\n\n    protected processCreateCategory(response: Response): Promise<Category> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Category>(<any>null);\n    }\n\n    /**\n     * Find category detail by slug\n     * @param categorySlug categorySlug\n     * @return successful operation\n     */\n    findCategoryDetail(categorySlug: string): Promise<Category> {\n        let url_ = this.baseUrl + \"/categories/customs/find-category-detail/{categorySlug}\";\n        if (categorySlug === undefined || categorySlug === null)\n            throw new Error(\"The parameter 'categorySlug' must be defined.\");\n        url_ = url_.replace(\"{categorySlug}\", encodeURIComponent(\"\" + categorySlug)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindCategoryDetail(_response);\n        });\n    }\n\n    protected processFindCategoryDetail(response: Response): Promise<Category> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Category>(<any>null);\n    }\n\n    /**\n     * Find category by id\n     * @param categoryId categoryId\n     * @return successful operation\n     */\n    findCategoryById(categoryId: string): Promise<Category> {\n        let url_ = this.baseUrl + \"/categories/{categoryId}\";\n        if (categoryId === undefined || categoryId === null)\n            throw new Error(\"The parameter 'categoryId' must be defined.\");\n        url_ = url_.replace(\"{categoryId}\", encodeURIComponent(\"\" + categoryId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindCategoryById(_response);\n        });\n    }\n\n    protected processFindCategoryById(response: Response): Promise<Category> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Category>(<any>null);\n    }\n\n    /**\n     * Update category\n     * @param categoryId categoryId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateCategory(categoryId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/categories/{categoryId}\";\n        if (categoryId === undefined || categoryId === null)\n            throw new Error(\"The parameter 'categoryId' must be defined.\");\n        url_ = url_.replace(\"{categoryId}\", encodeURIComponent(\"\" + categoryId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateCategory(_response);\n        });\n    }\n\n    protected processUpdateCategory(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find models\n     * @param search (optional) search string\n     * @param brand (optional) brand\n     * @param category (optional) category\n     * @param first search query to filter brands\n     * @param sortBy search query to filter brands\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findModels(search: string | undefined, brand: string | undefined, category: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindModelsResult> {\n        let url_ = this.baseUrl + \"/models?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (brand === null)\n            throw new Error(\"The parameter 'brand' cannot be null.\");\n        else if (brand !== undefined)\n            url_ += \"brand=\" + encodeURIComponent(\"\" + brand) + \"&\"; \n        if (category === null)\n            throw new Error(\"The parameter 'category' cannot be null.\");\n        else if (category !== undefined)\n            url_ += \"category=\" + encodeURIComponent(\"\" + category) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindModels(_response);\n        });\n    }\n\n    protected processFindModels(response: Response): Promise<FindModelsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindModelsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindModelsResult>(<any>null);\n    }\n\n    /**\n     * Create model\n     * @param body (optional) \n     * @return successful operation\n     */\n    createModel(body: any | undefined): Promise<Model> {\n        let url_ = this.baseUrl + \"/models\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateModel(_response);\n        });\n    }\n\n    protected processCreateModel(response: Response): Promise<Model> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Model>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Model>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Model>(<any>null);\n    }\n\n    /**\n     * Find model by id\n     * @param modelId modelId\n     * @return successful operation\n     */\n    findModelById(modelId: string): Promise<Model> {\n        let url_ = this.baseUrl + \"/models/{modelId}\";\n        if (modelId === undefined || modelId === null)\n            throw new Error(\"The parameter 'modelId' must be defined.\");\n        url_ = url_.replace(\"{modelId}\", encodeURIComponent(\"\" + modelId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindModelById(_response);\n        });\n    }\n\n    protected processFindModelById(response: Response): Promise<Model> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Model>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Model>(<any>null);\n    }\n\n    /**\n     * Update model\n     * @param modelId modelId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateModel(modelId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/models/{modelId}\";\n        if (modelId === undefined || modelId === null)\n            throw new Error(\"The parameter 'modelId' must be defined.\");\n        url_ = url_.replace(\"{modelId}\", encodeURIComponent(\"\" + modelId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateModel(_response);\n        });\n    }\n\n    protected processUpdateModel(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find provinces\n     * @return successful operation\n     */\n    findProvinces(): Promise<FindProvincesResult> {\n        let url_ = this.baseUrl + \"/provinces\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindProvinces(_response);\n        });\n    }\n\n    protected processFindProvinces(response: Response): Promise<FindProvincesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindProvincesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindProvincesResult>(<any>null);\n    }\n\n    /**\n     * Create province\n     * @param body (optional) \n     * @return successful operation\n     */\n    createProvince(body: any | undefined): Promise<Province> {\n        let url_ = this.baseUrl + \"/provinces\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateProvince(_response);\n        });\n    }\n\n    protected processCreateProvince(response: Response): Promise<Province> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Province>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Province>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Province>(<any>null);\n    }\n\n    /**\n     * Find province by id\n     * @param provinceId provinceId\n     * @return successful operation\n     */\n    findProvinceById(provinceId: string): Promise<Province> {\n        let url_ = this.baseUrl + \"/provinces/{provinceId}\";\n        if (provinceId === undefined || provinceId === null)\n            throw new Error(\"The parameter 'provinceId' must be defined.\");\n        url_ = url_.replace(\"{provinceId}\", encodeURIComponent(\"\" + provinceId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindProvinceById(_response);\n        });\n    }\n\n    protected processFindProvinceById(response: Response): Promise<Province> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Province>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Province>(<any>null);\n    }\n\n    /**\n     * Update province\n     * @param province provinceId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateProvince(province: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/provinces/{provinceId}\";\n        if (province === undefined || province === null)\n            throw new Error(\"The parameter 'province' must be defined.\");\n        url_ = url_.replace(\"{province}\", encodeURIComponent(\"\" + province)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateProvince(_response);\n        });\n    }\n\n    protected processUpdateProvince(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Search by elasticsearch\n     * @param keyword (optional) search keyword\n     * @param state (optional) product state (old/new)\n     * @param priceType (optional) price type (fixed/negociate)\n     * @param minPrice (optional) min price\n     * @param maxPrice (optional) max price\n     * @param weightRange (optional) weight range\n     * @param otherNewsType (optional) news type (sell/buy/...)\n     * @param newsType (optional) news type (sell/buy/...)\n     * @param categoryId (optional) categoryID\n     * @param owner (optional) news owner id\n     * @param shop (optional) shop id\n     * @param location (optional) location (only by city)\n     * @param type (optional) product type (may ui/may xuc/may dao)\n     * @param brand (optional) product's brand\n     * @param model (optional) product model\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    searchElasticsearch(keyword: string | undefined, state: string | undefined, priceType: string | undefined, minPrice: number | undefined, maxPrice: number | undefined, weightRange: string | undefined, otherNewsType: string | undefined, newsType: string | undefined, categoryId: string | undefined, owner: string | undefined, shop: string | undefined, location: string | undefined, type: string | undefined, brand: string | undefined, model: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<ElasticSearchResult> {\n        let url_ = this.baseUrl + \"/search?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\"; \n        if (state === null)\n            throw new Error(\"The parameter 'state' cannot be null.\");\n        else if (state !== undefined)\n            url_ += \"state=\" + encodeURIComponent(\"\" + state) + \"&\"; \n        if (priceType === null)\n            throw new Error(\"The parameter 'priceType' cannot be null.\");\n        else if (priceType !== undefined)\n            url_ += \"priceType=\" + encodeURIComponent(\"\" + priceType) + \"&\"; \n        if (minPrice === null)\n            throw new Error(\"The parameter 'minPrice' cannot be null.\");\n        else if (minPrice !== undefined)\n            url_ += \"minPrice=\" + encodeURIComponent(\"\" + minPrice) + \"&\"; \n        if (maxPrice === null)\n            throw new Error(\"The parameter 'maxPrice' cannot be null.\");\n        else if (maxPrice !== undefined)\n            url_ += \"maxPrice=\" + encodeURIComponent(\"\" + maxPrice) + \"&\"; \n        if (weightRange === null)\n            throw new Error(\"The parameter 'weightRange' cannot be null.\");\n        else if (weightRange !== undefined)\n            url_ += \"weightRange=\" + encodeURIComponent(\"\" + weightRange) + \"&\"; \n        if (otherNewsType === null)\n            throw new Error(\"The parameter 'otherNewsType' cannot be null.\");\n        else if (otherNewsType !== undefined)\n            url_ += \"otherNewsType=\" + encodeURIComponent(\"\" + otherNewsType) + \"&\"; \n        if (newsType === null)\n            throw new Error(\"The parameter 'newsType' cannot be null.\");\n        else if (newsType !== undefined)\n            url_ += \"newsType=\" + encodeURIComponent(\"\" + newsType) + \"&\"; \n        if (categoryId === null)\n            throw new Error(\"The parameter 'categoryId' cannot be null.\");\n        else if (categoryId !== undefined)\n            url_ += \"categoryId=\" + encodeURIComponent(\"\" + categoryId) + \"&\"; \n        if (owner === null)\n            throw new Error(\"The parameter 'owner' cannot be null.\");\n        else if (owner !== undefined)\n            url_ += \"owner=\" + encodeURIComponent(\"\" + owner) + \"&\"; \n        if (shop === null)\n            throw new Error(\"The parameter 'shop' cannot be null.\");\n        else if (shop !== undefined)\n            url_ += \"shop=\" + encodeURIComponent(\"\" + shop) + \"&\"; \n        if (location === null)\n            throw new Error(\"The parameter 'location' cannot be null.\");\n        else if (location !== undefined)\n            url_ += \"location=\" + encodeURIComponent(\"\" + location) + \"&\"; \n        if (type === null)\n            throw new Error(\"The parameter 'type' cannot be null.\");\n        else if (type !== undefined)\n            url_ += \"type=\" + encodeURIComponent(\"\" + type) + \"&\"; \n        if (brand === null)\n            throw new Error(\"The parameter 'brand' cannot be null.\");\n        else if (brand !== undefined)\n            url_ += \"brand=\" + encodeURIComponent(\"\" + brand) + \"&\"; \n        if (model === null)\n            throw new Error(\"The parameter 'model' cannot be null.\");\n        else if (model !== undefined)\n            url_ += \"model=\" + encodeURIComponent(\"\" + model) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processSearchElasticsearch(_response);\n        });\n    }\n\n    protected processSearchElasticsearch(response: Response): Promise<ElasticSearchResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <ElasticSearchResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<ElasticSearchResult>(<any>null);\n    }\n\n    /**\n     * Follow\n     * @param id newsId\n     * @param body (optional) \n     * @return successful operation\n     */\n    follow(id: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/follows/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFollow(_response);\n        });\n    }\n\n    protected processFollow(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find follow by user/news\n     * @param id id\n     * @param type type\n     * @param newsType (optional) type\n     * @param first first\n     * @param sortBy sortBy\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    findFollow(id: string, type: string, newsType: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<any> {\n        let url_ = this.baseUrl + \"/follows?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined and cannot be null.\");\n        else\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\"; \n        if (type === undefined || type === null)\n            throw new Error(\"The parameter 'type' must be defined and cannot be null.\");\n        else\n            url_ += \"type=\" + encodeURIComponent(\"\" + type) + \"&\"; \n        if (newsType === null)\n            throw new Error(\"The parameter 'newsType' cannot be null.\");\n        else if (newsType !== undefined)\n            url_ += \"newsType=\" + encodeURIComponent(\"\" + newsType) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindFollow(_response);\n        });\n    }\n\n    protected processFindFollow(response: Response): Promise<any> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <any>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<any>(<any>null);\n    }\n}\n\nexport interface GetAllRolesResult {\n    roles: Role[];\n}\n\nexport interface CheckPhoneNoExistResult {\n    phoneNoExist: boolean;\n}\n\nexport interface CheckRoleNameExistResult {\n    roleNameExist: boolean;\n}\n\nexport interface RegisterUserPayload {\n    idToken: string;\n}\n\nexport interface FindRolesResult {\n    data: Role[];\n    before: any;\n    after: any;\n}\n\nexport interface ActivateRolePayload {\n    operation: ActivateRolePayloadOperation;\n}\n\nexport interface DeactivateRolePayload {\n    operation: DeactivateRolePayloadOperation;\n}\n\nexport interface UpdateRolePayload {\n    operation: UpdateRolePayloadOperation;\n    payload: Payload;\n}\n\nexport interface Role {\n    _id: string;\n    name: string;\n    description: string;\n    permissions: string[];\n}\n\nexport interface CreateRolePayload {\n    name: string;\n    description: string;\n    permissions: string[];\n}\n\nexport interface FindUserResult {\n    data: User[];\n    before: any;\n    after: any;\n    roles: any[];\n    completeSignUp: boolean;\n    isActive: boolean;\n    isDeleted: boolean;\n    lastModifiedAt: any;\n    _id: string;\n    permissions: any[];\n    email: string;\n    createdBy: string;\n    createdAt: any;\n    followBy: any[];\n}\n\nexport interface FacebookLogin {\n    uid: string;\n    email: string;\n    provider: FacebookLoginProvider;\n}\n\nexport interface GoogleLogin {\n    uid: string;\n    email: string;\n    provider: GoogleLoginProvider;\n}\n\nexport interface PhoneLogin {\n    phoneNo: string;\n    provider: PhoneLoginProvider;\n}\n\nexport interface EmailLogin {\n    email: string;\n    provider: EmailLoginProvider;\n}\n\nexport interface User {\n    _id: string;\n    email: string;\n    familyName: string;\n    givenName: string;\n    fullName: string;\n    phoneNo: string;\n    address: string;\n    description: string;\n    avatarUrl: string;\n    province: string;\n    dob: number;\n    gender: string;\n    loginDetail: any;\n    roles: string[];\n    completeSignUp: boolean;\n    followBy: any[];\n    isActive: boolean;\n    createdAt: number;\n    createdBy: number;\n    counterFollow: number;\n    isFollowing: boolean;\n}\n\nexport interface CheckEmailExistResult {\n    emailExist: boolean;\n}\n\nexport interface UpdateUserPayload {\n    operation: UpdateUserPayloadOperation;\n    payload: Payload2;\n}\n\nexport interface UpdateProfilePayload {\n    operation: UpdateProfilePayloadOperation;\n    payload: Payload3;\n}\n\nexport interface ChangePasswordPayload {\n    newPassword: string;\n}\n\nexport interface ActivateUserPayload {\n    operation: ActivateUserPayloadOperation;\n}\n\nexport interface DeactivateUserPayload {\n    operation: DeactivateUserPayloadOperation;\n}\n\nexport interface UpdateAvatarPayload {\n    operation: UpdateAvatarPayloadOperation;\n    data: Data;\n}\n\nexport interface CreateUserPayload {\n    email: string;\n    password: string;\n    roles: string[];\n    familyName: string;\n    givenName: string;\n}\n\nexport interface NewsStatisticsResult {\n    daysOfWeek: DaysOfWeek[];\n    hoursOfDay: HoursOfDay[];\n    brands: Brand[];\n    categories: Category[];\n    provinces: Province[];\n}\n\nexport interface UpdateAdsensePayload {\n    operation: UpdateAdsensePayloadOperation;\n    payload: Payload4;\n}\n\nexport interface CreateAdsensePayload {\n    name: string;\n    imageUrl: string;\n    hyperlink: string;\n    position: number;\n}\n\nexport interface GetAdsenseResult {\n    data: Adsense[];\n}\n\nexport interface Adsense {\n    _id: string;\n    name: string;\n    imageUrl: string;\n    hyperlink: string;\n    position: number;\n    createdAt: number;\n}\n\nexport interface UpdateFeatureBrandPayload {\n    operation: UpdateFeatureBrandPayloadOperation;\n    payload: Payload5;\n}\n\nexport interface GetFeatureBrandsResult {\n    data: FeatureBrand[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateFeatureBrandPayload {\n    brand: string;\n    logoImage: string;\n    hyperlink: string;\n    order: number;\n}\n\nexport interface FeatureBrand {\n    _id: string;\n    brand: any;\n    logoImage: string;\n    hyperlink: string;\n    order: number;\n    createdAt: number;\n}\n\nexport interface CreateRentalPeriodPayload {\n    min: number;\n    max: number;\n}\n\nexport interface UpdateRentalPeriodPayload {\n    operation: UpdateRentalPeriodPayloadOperation;\n    payload: Payload6;\n}\n\nexport interface UpdateWeightRangePayload {\n    operation: UpdateWeightRangePayloadOperation;\n    payload: Payload7;\n}\n\nexport interface CreateWeightRangePayload {\n    min: number;\n    max: number;\n}\n\nexport interface RentalPeriod {\n    _id: string;\n    min: number;\n    max: number;\n    createdAt: number;\n}\n\nexport interface GetAllRentalPeriodsResult {\n    data: RentalPeriod[];\n}\n\nexport interface WeightRange {\n    _id: string;\n    min: number;\n    max: number;\n    createdAt: number;\n}\n\nexport interface GetAllWeightRangesResult {\n    data: WeightRange[];\n}\n\nexport interface CommonKeyword {\n    keyword: string;\n    count: number;\n    createdAt: number;\n}\n\nexport interface GetCommonKeywordsResult {\n    data: CommonKeyword[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateRecentViewedPayload {\n    news: string;\n}\n\nexport interface RecentViewedItem {\n    _id: string;\n    uuid: string;\n    user: string;\n    news: any;\n    createdAt: number;\n    lastModifiedAt: number;\n}\n\nexport interface GetRecentViewedResult {\n    data: RecentViewedItem[];\n    before: string;\n    after: string;\n}\n\nexport interface SearchNewsMostFollowResult {\n    data: SearchNewsMostFollowItemResult[];\n    before: string;\n    after: string;\n}\n\nexport interface ReadNotificationPayload {\n    operation: ReadNotificationPayloadOperation;\n    payload: Payload8;\n}\n\nexport interface ReadAllNotificationsPayload {\n    operation: ReadAllNotificationsPayloadOperation;\n}\n\nexport interface CountUnreadNotificationsResult {\n    unreadNotifications: number;\n}\n\nexport interface Notification {\n    _id: string;\n    owner: any;\n    news: any;\n    state: NotificationState;\n    type: NotificationType;\n    createdAt: number;\n}\n\nexport interface FindNotificationsResult {\n    data: Notification[];\n    before: string;\n    after: string;\n}\n\nexport interface SearchNewsMostFollowItemResult {\n    _id: string;\n    imageUrls: string[];\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    isFollowing: boolean;\n    title: string;\n    state: string;\n    newsType: string;\n    counterFollow: number;\n    counterView: number;\n}\n\nexport interface FindReportsResult {\n    data: Report[];\n    before: string;\n    after: string;\n}\n\nexport interface UpdateReportPayload {\n    operation: UpdateReportPayloadOperation;\n    payload: Payload9;\n}\n\nexport interface Report {\n    _id: any;\n    news: any;\n    reports: Reports[];\n    state: ReportState;\n    resolvedResult: ReportResolvedResult;\n    resolvedBy: any;\n    resolvedAt: number;\n}\n\nexport interface CreateReportPayload {\n    news: string;\n    reason: CreateReportPayloadReason;\n    description: string;\n    email: string;\n    phoneNo: string;\n}\n\nexport interface UpdateIntroImagesShopPayload {\n    operation: UpdateIntroImagesShopPayloadOperation;\n    payload: Payload10;\n}\n\nexport interface UpdateLogoImageShopPayload {\n    operation: UpdateLogoImageShopPayloadOperation;\n    payload: Payload11;\n}\n\nexport interface DeactivateShopPayload {\n    operation: DeactivateShopPayloadOperation;\n}\n\nexport interface ActivateShopPayload {\n    operation: ActivateShopPayloadOperation;\n}\n\nexport interface UpdateShopPayload {\n    operation: UpdateShopPayloadOperation;\n    payload: Payload12;\n}\n\nexport interface CreateShopPayload {\n    owner: string;\n    domain: string;\n    name: string;\n    email: string;\n    address: string;\n    geocode: Geocode;\n    description: string;\n    phone: string;\n    introImages: string[];\n    logoImage: string;\n    expiryDate: number;\n}\n\nexport interface FindShopsResult {\n    data: Shop[];\n    before: string;\n    after: string;\n}\n\nexport interface Shop {\n    _id: string;\n    owner: any;\n    domain: string;\n    name: string;\n    address: string;\n    geocode: Geocode2;\n    description: string;\n    followBy: any[];\n    isFollowing: boolean;\n    phone: string;\n    email: string;\n    introImages: string[];\n    logoImage: string;\n}\n\nexport interface ElasticSearchResult {\n    data: ElasticSearchItemResult[];\n    before: string;\n    after: string;\n}\n\nexport interface ElasticSearchItemResult {\n    title: string;\n    state: string;\n    description: string;\n    imageUrls: string[];\n    price: number;\n    priceType: string;\n    newsType: string;\n    owner: string;\n    location: Location;\n    status: string;\n    usedHours: number;\n    serialNo: number;\n    categoryId: CategoryId;\n    brand: Brand2;\n    model: Model2;\n    weight: number;\n    year: number;\n    followBy: string[];\n    isDeleted: boolean;\n    createdBy: number;\n    createdAt: number;\n    lastModifiedAt: number;\n    elasticsearchID: string;\n    elasticsearchTitle: string;\n    isFollowing: boolean;\n    _id: string;\n}\n\nexport interface News {\n    _id: string;\n    title: string;\n    state: string;\n    description: string;\n    imageUrls: string[];\n    price: number;\n    priceType: string;\n    newsType: string;\n    owner: any;\n    shop: any;\n    location: any;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: any;\n    type: any;\n    brand: any;\n    model: any;\n    weight: number;\n    year: number;\n    weightRange: any;\n    rentalPeriod: any;\n    followBy: any[];\n    isFollowing: boolean;\n    createdAt: number;\n    counterFollow: number;\n    counterView: number;\n}\n\nexport interface FindNewsDetail {\n    _id: string;\n    title: string;\n    state: string;\n    description: string;\n    imageUrls: string[];\n    price: number;\n    priceType: string;\n    newsType: string;\n    owner: any;\n    shop: any;\n    location: any;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: any;\n    type: any;\n    brand: any;\n    model: any;\n    weight: number;\n    year: number;\n    weightRange: any;\n    rentalPeriod: any;\n    followBy: any[];\n    isFollowing: boolean;\n    createdAt: number;\n    counterView: number;\n    counterFollow: number;\n}\n\nexport interface CreateNewsPayload {\n    title: string;\n    state: string;\n    newsType: string;\n    priceType: string;\n    location: string;\n    owner: string;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: string;\n    type: string;\n    brand: string;\n    model: string;\n    weight: number;\n    year: number;\n}\n\nexport interface UpdateNewsPayload {\n    operation: string;\n    data: Data2;\n}\n\nexport interface FindNewsResult {\n    data: News[];\n    before: string;\n    after: string;\n}\n\nexport interface FindNewsResultWithFollow {\n    data: FindNewsDetail[];\n    before: string;\n    after: string;\n}\n\nexport interface Brand {\n    _id: string;\n    slug: string;\n    name: string;\n    logoImage: string;\n    totalNews: number;\n    brandCategories: Category[];\n    brandModels: Model[];\n    createdAt: number;\n}\n\nexport interface FindBrandsResult {\n    data: Brand[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateBrandPayload {\n    name: string;\n    logoImage: string;\n}\n\nexport interface UpdateBrandPayload {\n    operation: UpdateBrandPayloadOperation;\n    payload: any;\n}\n\nexport interface Category {\n    _id: string;\n    slug: string;\n    name: string;\n    imageUrl: string;\n    totalNews: number;\n    categoryBrands: Brand[];\n    categoryModels: Model[];\n    createdAt: number;\n}\n\nexport interface FindCategoriesResult {\n    data: Category[];\n}\n\nexport interface CreateCategoryPayload {\n    name: string;\n    imageUrl: string;\n}\n\nexport interface UpdateCategoryPayload {\n    operation: UpdateCategoryPayloadOperation;\n    payload: Payload13;\n}\n\nexport interface Model {\n    _id: string;\n    slug: string;\n    name: string;\n    brand: any;\n    category: any;\n    totalNews: number;\n    createdAt: number;\n}\n\nexport interface FindModelsResult {\n    data: Model[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateModelPayload {\n    name: string;\n    slug: string;\n    brand: string;\n    model: string;\n}\n\nexport interface UpdateModelPayload {\n    _id: string;\n    name: string;\n    slug: string;\n    brand: string;\n    model: string;\n}\n\nexport interface Province {\n    _id: string;\n    slug: string;\n    name: string;\n    totalNews: number;\n}\n\nexport interface FindProvincesResult {\n    data: Province[];\n}\n\nexport interface CreateProvincePayload {\n    name: string;\n    slug: string;\n}\n\nexport interface UpdateProvincePayload {\n    _id: string;\n    name: string;\n    slug: string;\n}\n\nexport interface FollowPayload {\n    operation: string;\n    payload: Payload14;\n}\n\nexport interface FindUserFollowResult {\n    data: FindUserResult[];\n}\n\nexport enum State {\n    PENDING = \"PENDING\", \n    RESOLVED = \"RESOLVED\", \n}\n\nexport enum Reason {\n    WRONG_INFO = \"WRONG_INFO\", \n    SOLD = \"SOLD\", \n    VIOLATE = \"VIOLATE\", \n}\n\nexport enum ActivateRolePayloadOperation {\n    Activate = \"activate\", \n}\n\nexport enum DeactivateRolePayloadOperation {\n    Deactivate = \"deactivate\", \n}\n\nexport enum UpdateRolePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload {\n    name: string;\n    description: string;\n    permissions: string[];\n}\n\nexport enum FacebookLoginProvider {\n    Facebook = \"facebook\", \n}\n\nexport enum GoogleLoginProvider {\n    Google = \"google\", \n}\n\nexport enum PhoneLoginProvider {\n    Phone = \"phone\", \n}\n\nexport enum EmailLoginProvider {\n    Email = \"email\", \n}\n\nexport enum UpdateUserPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload2 {\n    roles: string[];\n    familyName: string;\n    givenName: string;\n    email: string;\n}\n\nexport enum UpdateProfilePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload3 {\n    familyName: string;\n    givenName: string;\n    phoneNo: string;\n    email: string;\n    address: string;\n    description: string;\n}\n\nexport enum ActivateUserPayloadOperation {\n    Activate = \"activate\", \n}\n\nexport enum DeactivateUserPayloadOperation {\n    Deactivate = \"deactivate\", \n}\n\nexport enum UpdateAvatarPayloadOperation {\n    UpdateAvatar = \"updateAvatar\", \n}\n\nexport interface Data {\n    avatarUrl: string;\n}\n\nexport interface DaysOfWeek {\n    _id: number;\n    totalNews: number;\n}\n\nexport interface HoursOfDay {\n    _id: number;\n    totalNews: number;\n}\n\nexport enum UpdateAdsensePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload4 {\n    name: string;\n    imageUrl: string;\n    hyperlink: string;\n    position: number;\n}\n\nexport enum UpdateFeatureBrandPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload5 {\n    brand: string;\n    logoImage: string;\n    hyperlink: string;\n    order: number;\n}\n\nexport enum UpdateRentalPeriodPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload6 {\n    min: number;\n    max: number;\n}\n\nexport enum UpdateWeightRangePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload7 {\n    min: number;\n    max: number;\n}\n\nexport enum ReadNotificationPayloadOperation {\n    ReadNotification = \"readNotification\", \n}\n\nexport interface Payload8 {\n    notificationId: string;\n}\n\nexport enum ReadAllNotificationsPayloadOperation {\n    ReadAllNotifications = \"readAllNotifications\", \n}\n\nexport enum NotificationState {\n    READ = \"READ\", \n    UNREAD = \"UNREAD\", \n}\n\nexport enum NotificationType {\n    FOLLOW_USER = \"FOLLOW_USER\", \n    FOLLOW_SHOP = \"FOLLOW_SHOP\", \n    CREATE_NEWS = \"CREATE_NEWS\", \n}\n\nexport enum UpdateReportPayloadOperation {\n    ResolveReport = \"resolveReport\", \n}\n\nexport interface Payload9 {\n    resolvedResult: Payload9ResolvedResult;\n}\n\nexport interface Reports {\n    reason: ReportsReason;\n    description: string;\n    email: string;\n    phoneNo: string;\n    createdAt: number;\n}\n\nexport enum ReportState {\n    PENDING = \"PENDING\", \n    RESOLVED = \"RESOLVED\", \n}\n\nexport enum ReportResolvedResult {\n    SKIP = \"SKIP\", \n    DELETE = \"DELETE\", \n}\n\nexport enum CreateReportPayloadReason {\n    WRONG_INFO = \"WRONG_INFO\", \n    SOLD = \"SOLD\", \n    VIOLATE = \"VIOLATE\", \n}\n\nexport enum UpdateIntroImagesShopPayloadOperation {\n    UpdateCover = \"updateCover\", \n}\n\nexport interface Payload10 {\n    introImages: string[];\n}\n\nexport enum UpdateLogoImageShopPayloadOperation {\n    UpdateAvatar = \"updateAvatar\", \n}\n\nexport interface Payload11 {\n    logoImage: string;\n}\n\nexport enum DeactivateShopPayloadOperation {\n    Deactivate = \"deactivate\", \n}\n\nexport enum ActivateShopPayloadOperation {\n    Activate = \"activate\", \n}\n\nexport enum UpdateShopPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload12 {\n    domain: string;\n    name: string;\n    address: string;\n    geocode: Geocode3;\n    phone: string;\n    email: string;\n    expiryDate: number;\n}\n\nexport interface Geocode {\n    lng: number;\n    lat: number;\n}\n\nexport interface Geocode2 {\n    lng: number;\n    lat: number;\n}\n\nexport interface Location {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n}\n\nexport interface CategoryId {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n}\n\nexport interface Brand2 {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n    totalNews: number;\n}\n\nexport interface Model2 {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n    brand: string;\n    category: string;\n}\n\nexport interface Data2 {\n    title: string;\n    state: string;\n    newsType: string;\n    priceType: string;\n    location: string;\n    owner: string;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: string;\n    type: string;\n    brand: string;\n    model: string;\n    weight: number;\n    year: number;\n}\n\nexport enum UpdateBrandPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport enum UpdateCategoryPayloadOperation {\n    UdpateDetail = \"udpateDetail\", \n}\n\nexport interface Payload13 {\n    name: string;\n    imageUrl: string;\n}\n\nexport interface Payload14 {\n    userId: string;\n    newsId: string;\n}\n\nexport enum Payload9ResolvedResult {\n    SKIP = \"SKIP\", \n    DELETE = \"DELETE\", \n}\n\nexport enum ReportsReason {\n    WRONG_INFO = \"WRONG_INFO\", \n    SOLD = \"SOLD\", \n    VIOLATE = \"VIOLATE\", \n}\n\nexport interface Geocode3 {\n    lng: number;\n    lat: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {\n    if(result !== null && result !== undefined)\n        throw result;\n    else\n        throw new SwaggerException(message, status, response, headers, null);\n}","export * from './store';\nexport * from './withRematch';\n\nexport * from './models/profile/interface';\nexport * from './models/profile/model';\nexport * from './models/follow/interface';\nexport * from './models/follow/model';\n\nexport * from './models/search/interface';\nexport * from './models/search/model';\n\nexport * from './models/metadata/interface';\nexport * from './models/metadata/model';\n","import { createModel, ModelConfig } from '@rematch/core';\nimport { FollowState, GetFollowDataPayload, FollowNewsPayload, FollowUserPayload, FollowShopPayload } from './interface';\nimport { getServiceProxy } from '@client/services';\nimport { message } from 'antd';\n\nconst followModel: ModelConfig<FollowState> = createModel({\n  state: {\n    data: [],\n    currentTab: 'SELL',\n    currentType: 'news',\n  },\n  reducers: {\n    getFollowDataSuccess: (state: FollowState, payload: any): FollowState => {\n      return {\n        ...state,\n        data: payload.data,\n      };\n    },\n  },\n  effects: {\n    async getFollowData(payload: GetFollowDataPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        const data = await serviceProxies.findFollow(\n          payload.id,\n          payload.type,\n          payload.newsType,\n          payload.first,\n          payload.sortBy,\n          payload.before,\n          payload.after,\n        );\n        this.getFollowDataSuccess(data);\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n      }\n    },\n    async followNews (payload: FollowNewsPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        await serviceProxies.follow(\n          payload.userId,\n          {\n            operation: 'followNews',\n            payload: {\n              newsId: payload.newsId,\n        }});\n        message.success('Theo dõi tin thành công');\n      } catch (error) {\n        message.error('Đã có lỗi xảy ra');\n      }\n    },\n    async unfollowNews (payload: FollowNewsPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        await serviceProxies.follow(\n          payload.userId,\n          {\n            operation: 'unfollowNews',\n            payload: {\n              newsId: payload.newsId,\n        }});\n        message.success('Bỏ theo dõi tin thành công');\n      } catch (error) {\n        message.error('Đã có lỗi xảy ra');\n      }\n    },\n    async followUser (payload: FollowUserPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        await serviceProxies.follow(\n          payload.authId,\n          {\n            operation: 'followUser',\n            payload: {\n              userId: payload.userId,\n        }});\n        message.success('Theo dõi người bán thành công');\n      } catch (error) {\n        message.error('Đã có lỗi xảy ra');\n      }\n    },\n    async unfollowUser (payload: FollowUserPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        await serviceProxies.follow(\n          payload.authId,\n          {\n            operation: 'unfollowUser',\n            payload: {\n              userId: payload.userId,\n        }});\n        message.success(' Bỏ theo dõi người bán thành công');\n      } catch (error) {\n        message.error('Đã có lỗi xảy ra');\n      }\n    },\n    async followShop (payload: FollowShopPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        await serviceProxies.follow(\n          payload.authId,\n          {\n            operation: 'followShop',\n            payload: {\n              shopId: payload.shopId,\n        }});\n        message.success('Theo dõi cửa hàng thành công');\n      } catch (error) {\n        message.error('Đã có lỗi xảy ra');\n      }\n    },\n    async unfollowShop (payload: FollowShopPayload): Promise<void> {\n      try {\n        const serviceProxies = getServiceProxy();\n        await serviceProxies.follow(\n          payload.authId,\n          {\n            operation: 'unfollowShop',\n            payload: {\n              shopId: payload.shopId,\n        }});\n        message.success('Bỏ theo dõi cửa hàng thành công');\n      } catch (error) {\n        message.error('Đã có lỗi xảy ra');\n      }\n    },\n  },\n});\n\nexport default followModel;\n","import { createModel, ModelConfig } from '@rematch/core';\nimport { MetadataState } from './interface';\nimport { Model } from '@client/services/service-proxies';\n\nconst metadataModel: ModelConfig<MetadataState> = createModel({\n  state: {\n    loaded: false,\n    brands: [],\n    categories: [],\n    models: [],\n    provinces: [],\n    weightRanges: [],\n    rentalPeriods: [],\n    state: [],\n    commonKeywords: [],\n  },\n  reducers: {\n    loadMetadataSuccess: (state: MetadataState): MetadataState => {\n      return {\n        ...state,\n      };\n    },\n    addNewModel: (state: MetadataState, payload: Model): MetadataState => {\n      return {\n        ...state,\n        models: [...state.models, payload],\n      };\n    },\n  },\n  effects: {},\n});\n\nexport default metadataModel;\n","import { createModel, ModelConfig } from '@rematch/core';\nimport { ProfileState, OpenModalPayload } from './interface';\n\nconst profileModel: ModelConfig<ProfileState> = createModel({\n  state: {\n    modal: {\n      login: false,\n      register: false,\n    },\n    authUser: null,\n  },\n  reducers: {\n    openModal: (state: ProfileState, payload: OpenModalPayload): ProfileState => {\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          [payload.modalName]: true,\n        },\n      };\n    },\n    closeModal: (state: ProfileState, payload: OpenModalPayload): ProfileState => {\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          [payload.modalName]: false,\n        },\n      };\n    },\n    changeModal: (state: ProfileState): ProfileState => {\n      return {\n        ...state,\n        modal: {\n          login: !state.modal.login,\n          register: !state.modal.register,\n        },\n      };\n    },\n    updateProfileInfo: (state: ProfileState, payload: any) => {\n      return {\n        ...state,\n        authUser: {\n          ...state.authUser,\n          ...payload,\n        },\n      };\n    },\n  },\n  effects: {},\n});\n\nexport default profileModel;\n","import { createModel, ModelConfig } from '@rematch/core';\nimport { SearchState, FiltersChangePayload, OnFollowChangeOnSearchDetailScreenSuccess, OnFollowChangeOnHomeScreenSuccess, SortChangePayload, GetDataSuccessPayload } from './interface';\nimport { getServiceProxy } from '../../../services';\nimport { FindNewsResult } from '../../../services/service-proxies';\n\nconst searchModel: ModelConfig<SearchState> = createModel({\n  state: {\n    filters: {\n      keyword: undefined,\n      state: undefined,\n      priceType: undefined,\n      minPrice: undefined,\n      maxPrice: undefined,\n      minWeight: undefined,\n      maxWeight: undefined,\n      newsType: undefined,\n      owner: undefined,\n      shop: undefined,\n      location: undefined,\n      type: undefined,\n      brand: undefined,\n      model: undefined,\n      category: undefined,\n    },\n    data: [],\n    first: 16,\n    sortBy: 'elasticsearchCreatedAt|desc', // fieldName|sortOrder\n    before: undefined,\n    after: undefined,\n    statusNewsTypeSearch: 'SELL',\n    statusTab: '1',\n    isLoading: false,\n    isLoadingDataSell: false,\n    isLoadingDataBuy: false,\n    isLoadingDataLease: false,\n    isLoadingDataMostFollow: false,\n    isLoadingDataNewMachine: false,\n    dataTotal: {\n      dataSell: {\n        data: [],\n        after: undefined,\n        before: undefined,\n      },\n      dataBuy: {\n        data: [],\n        before: undefined,\n        after: undefined,\n      },\n      dataLease: {\n        data: [],\n        before: undefined,\n        after: undefined,\n      },\n      dataMostFollow: {\n        data: [],\n        before: undefined,\n        after: undefined,\n      },\n      dataNewMachine: {\n        data: [],\n        before: undefined,\n        after: undefined,\n      },\n    },\n  },\n  reducers: {\n    onFollowChangeOnSearchDetailScreenSuccess: (state: SearchState, payload: OnFollowChangeOnSearchDetailScreenSuccess): SearchState => {\n      if (payload.starStatus === 'filled') {\n        return {\n          ...state,\n          data: state.data.map((value) => {\n            if (value._id === payload.newsId) {\n              return {\n                ...value,\n                isFollowing: false,\n              };\n            } else {\n              return value;\n            }\n          }),\n        };\n      } else {\n        return {\n          ...state,\n          data: state.data.map((value) => {\n            if (value._id === payload.newsId) {\n              return {\n                ...value,\n                isFollowing: true,\n              };\n            } else {\n              return value;\n            }\n          }),\n        };\n      }\n    },\n    onFollowChangeMostFollowNewsSuccess: (state: SearchState, payload: OnFollowChangeOnHomeScreenSuccess): SearchState => {\n      if (payload.starStatus === 'filled') {\n        return {\n          ...state,\n          dataTotal: {\n            ...state.dataTotal,\n            dataMostFollow: {\n              ...state.dataTotal.dataMostFollow,\n              data: state.dataTotal.dataMostFollow.data.map((value: any) => {\n                if (value._id === payload.newsId) {\n                  return {\n                    ...value,\n                    isFollowing: false,\n                  };\n                } else {\n                  return value;\n                }\n              }),\n            },\n          },\n        };\n      } else {\n        return {\n          ...state,\n          dataTotal: {\n            ...state.dataTotal,\n            dataMostFollow: {\n              ...state.dataTotal.dataMostFollow,\n              data: state.dataTotal.dataMostFollow.data.map((value: any) => {\n                if (value._id === payload.newsId) {\n                  return {\n                    ...value,\n                    isFollowing: true,\n                  };\n                } else {\n                  return value;\n                }\n              }),\n            },\n          },\n        };\n      }\n    },\n    onFollowChangeOnHomeScreenSuccess: (state: SearchState, payload: OnFollowChangeOnHomeScreenSuccess): SearchState => {\n      if (payload.starStatus === 'filled') {\n        switch (state.statusTab) {\n          case '1':\n            return {\n              ...state,\n              dataTotal: {\n                ...state.dataTotal,\n                dataSell: {\n                  ...state.dataTotal.dataSell,\n                  data: state.dataTotal.dataSell.data.map((value: any) => {\n                    if (value._id === payload.newsId) {\n                      return {\n                        ...value,\n                        isFollowing: false,\n                      };\n                    } else {\n                      return value;\n                    }\n                  }),\n                },\n              },\n            };\n          case '2':\n            return {\n              ...state,\n              dataTotal: {\n                ...state.dataTotal,\n                dataBuy: {\n                  ...state.dataTotal.dataBuy,\n                  data: state.dataTotal.dataBuy.data.map((value: any) => {\n                    if (value._id === payload.newsId) {\n                      return {\n                        ...value,\n                        isFollowing: false,\n                      };\n                    } else {\n                      return value;\n                    }\n                  }),\n                },\n              },\n            };\n          case '3':\n            return {\n              ...state,\n              dataTotal: {\n                ...state.dataTotal,\n                dataLease: {\n                  ...state.dataTotal.dataLease,\n                  data: state.dataTotal.dataLease.data.map((value: any) => {\n                    if (value._id === payload.newsId) {\n                      return {\n                        ...value,\n                        isFollowing: false,\n                      };\n                    } else {\n                      return value;\n                    }\n                  }),\n                },\n              },\n            };\n          default:\n            return {\n              ...state,\n            };\n        }\n      } else {\n        switch (state.statusTab) {\n          case '1':\n            return {\n              ...state,\n              dataTotal: {\n                ...state.dataTotal,\n                dataSell: {\n                  ...state.dataTotal.dataSell,\n                  data: state.dataTotal.dataSell.data.map((value: any) => {\n                    if (value._id === payload.newsId) {\n                      return {\n                        ...value,\n                        isFollowing: true,\n                      };\n                    } else {\n                      return value;\n                    }\n                  }),\n                },\n              },\n            };\n          case '2':\n            return {\n              ...state,\n              dataTotal: {\n                ...state.dataTotal,\n                dataBuy: {\n                  ...state.dataTotal.dataBuy,\n                  data: state.dataTotal.dataBuy.data.map((value: any) => {\n                    if (value._id === payload.newsId) {\n                      return {\n                        ...value,\n                        isFollowing: true,\n                      };\n                    } else {\n                      return value;\n                    }\n                  }),\n                },\n              },\n            };\n          case '3':\n            return {\n              ...state,\n              dataTotal: {\n                ...state.dataTotal,\n                dataLease: {\n                  ...state.dataTotal.dataLease,\n                  data: state.dataTotal.dataLease.data.map((value: any) => {\n                    if (value._id === payload.newsId) {\n                      return {\n                        ...value,\n                        isFollowing: true,\n                      };\n                    } else {\n                      return value;\n                    }\n                  }),\n                },\n              },\n            };\n          default:\n            return {\n              ...state,\n            };\n        }\n      }\n    },\n    activeLoading: (state: SearchState, payload: any): SearchState => {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n    updateFilters: (state: SearchState, payload: FiltersChangePayload): SearchState => {\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...payload,\n        },\n      };\n    },\n    changeTabsOnHomePage: (state: SearchState, payload: string): SearchState => {\n      return {\n        ...state,\n        statusTab: payload,\n      };\n    },\n    changeStatusNewsTypeSearch: (state: SearchState, payload: string): SearchState => {\n      return {\n        ...state,\n        statusNewsTypeSearch: payload,\n      };\n    },\n    updateSort: (state: SearchState, payload: SortChangePayload): SearchState => {\n      return {\n        ...state,\n        sortBy: payload.sortBy,\n      };\n    },\n    getDataSuccess: (state: SearchState, payload: FindNewsResult) => {\n      return {\n        ...state,\n        data: payload.data,\n        before: payload.before,\n        after: payload.after,\n        isLoading: false,\n      };\n    },\n    getDataInTabsSuccess: (state: SearchState, payload: GetDataSuccessPayload): SearchState => {\n      switch (payload.newsType) {\n        case 'SELL':\n          return {\n            ...state,\n            dataTotal: {\n              ...state.dataTotal,\n              dataSell: payload.result,\n            },\n            isLoadingDataSell: false,\n          };\n          break;\n        case 'BUY':\n          return {\n            ...state,\n            dataTotal: {\n              ...state.dataTotal,\n              dataBuy: payload.result,\n            },\n            isLoadingDataBuy: false,\n          };\n          break;\n        case 'LEASE':\n          return {\n            ...state,\n            dataTotal: {\n              ...state.dataTotal,\n              dataLease: payload.result,\n            },\n            isLoadingDataLease: false,\n          };\n          break;\n        default:\n          return {\n            ...state,\n          };\n      }\n    },\n    getDataMostFollowSuccess: (state: SearchState, payload: any) => {\n      return {\n        ...state,\n        dataTotal: {\n          ...state.dataTotal,\n          dataMostFollow: payload,\n        },\n        isLoadingDataMostFollow: false,\n      };\n    },\n    getDataNewMachineSuccess: (state: SearchState, payload: any) => {\n      return {\n        ...state,\n        dataTotal: {\n          ...state.dataTotal,\n          dataNewMachine: payload,\n        },\n        isLoadingDataNewMachine: false,\n      };\n    },\n  },\n  effects: {\n    async handleFiltersChange(payload: FiltersChangePayload, rootState: any): Promise<void> {\n      try {\n        const searchState = rootState.searchModel;\n        const newFilters = {\n          keyword: payload.keyword || searchState.filters.keyword,\n          state: typeof payload.state === 'string' ? payload.state : searchState.filters.state,\n          priceType: typeof payload.priceType === 'string' ? payload.priceType : searchState.filters.priceType,\n          minPrice: typeof payload.minPrice === 'string' || typeof payload.minPrice === 'number' ? Number(payload.minPrice) > 0 ? Number(payload.minPrice) : undefined : searchState.filters.minPrice,\n          maxPrice: typeof payload.maxPrice === 'string' || typeof payload.maxPrice === 'number' ? Number(payload.maxPrice) > 0 ? Number(payload.maxPrice) : undefined : searchState.filters.maxPrice,\n          weightRange: typeof payload.weightRange === 'string' ? payload.weightRange : searchState.filters.weightRange,\n          newsType: typeof payload.newsType === 'string' ? payload.newsType : searchState.filters.newsType,\n          category: typeof payload.category === 'string' ? payload.category : searchState.filters.category,\n          searchState: payload.owner || searchState.filters.owner,\n          shop: payload.shop || searchState.filters.shop,\n          location: typeof payload.location === 'string' ? payload.location : searchState.filters.location,\n          type: typeof payload.type === 'string' ? payload.type : searchState.filters.type,\n          brand: typeof payload.brand === 'string' ? payload.brand : searchState.filters.brand,\n          model: typeof payload.model === 'string' ? payload.model : searchState.filters.model,\n        };\n        this.updateFilters(newFilters);\n        const serviceProxy = getServiceProxy();\n\n        const result = await serviceProxy.searchElasticsearch(\n          payload.keyword || searchState.filters.keyword,\n          typeof payload.state === 'string' ? payload.state : searchState.filters.state,\n          typeof payload.state === 'string' ? payload.priceType : searchState.filters.priceType,\n          typeof payload.minPrice === 'string' || typeof payload.minPrice === 'number' ? Number(payload.minPrice) > 0 ? Number(payload.minPrice) : undefined : searchState.filters.minPrice,\n          typeof payload.maxPrice === 'string' || typeof payload.maxPrice === 'number' ? Number(payload.maxPrice) > 0 ? Number(payload.maxPrice) : undefined : searchState.filters.maxPrice,\n          typeof payload.weightRange === 'string' ? payload.weightRange : searchState.filters.weightRange,\n          undefined,\n          typeof payload.newsType === 'string' ? payload.newsType : searchState.filters.newsType,\n          typeof payload.category === 'string' ? payload.category : searchState.filters.category,\n          payload.owner || searchState.filters.owner,\n          payload.shop || searchState.filters.shop,\n          typeof payload.location === 'string' ? payload.location : searchState.filters.location,\n          typeof payload.type === 'string' ? payload.type : searchState.filters.type,\n          typeof payload.brand === 'string' ? payload.brand : searchState.filters.brand,\n          typeof payload.model === 'string' ? payload.model : searchState.filters.model,\n          searchState.first,\n          searchState.sortBy,\n          undefined,\n          undefined,\n        );\n        this.getDataSuccess(result);\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n        // message.error(JSON.parse(error.response).message);\n      }\n    },\n    async handleSortChange(payload: SortChangePayload, rootState: any): Promise<void> {\n      try {\n        this.updateSort(payload);\n\n        const searchState = rootState.searchModel;\n        const serviceProxy = getServiceProxy();\n        const result = await serviceProxy.searchElasticsearch(\n          searchState.filters.keyword,\n          searchState.filters.state,\n          searchState.filters.priceType,\n          searchState.filters.minPrice,\n          searchState.filters.maxPrice,\n          searchState.filters.weightRange,\n          undefined,\n          searchState.filters.newsType,\n          searchState.filters.category,\n          searchState.filters.owner,\n          searchState.filters.shop,\n          searchState.filters.location,\n          searchState.filters.type,\n          searchState.filters.brand,\n          searchState.filters.model,\n          searchState.first,\n          payload.sortBy,\n          undefined,\n          undefined,\n        );\n        this.getDataSuccess(result);\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n        // message.error(JSON.parse(error.response).message);\n      }\n    },\n    async getNextPage(_payload, rootState: any): Promise<void> {\n      try {\n        const searchState = rootState.searchModel;\n        const serviceProxy = getServiceProxy();\n        const result = await serviceProxy.searchElasticsearch(\n          searchState.filters.keyword,\n          searchState.filters.state,\n          searchState.filters.priceType,\n          searchState.filters.minPrice,\n          searchState.filters.maxPrice,\n          searchState.filters.weightRange,\n          undefined,\n          searchState.filters.newsType,\n          searchState.filters.category,\n          searchState.filters.owner,\n          searchState.filters.shop,\n          searchState.filters.location,\n          searchState.filters.type,\n          searchState.filters.brand,\n          searchState.filters.model,\n          searchState.first,\n          searchState.sortBy,\n          undefined,\n          searchState.after,\n        );\n\n        this.getDataSuccess(result);\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n        // message.error(JSON.parse(error.response).message);\n      }\n    },\n    async getPrevPage(_payload, rootState: any): Promise<void> {\n      try {\n        const searchState = rootState.searchModel;\n        const serviceProxy = getServiceProxy();\n        const result = await serviceProxy.searchElasticsearch(\n          searchState.filters.keyword,\n          searchState.filters.state,\n          searchState.filters.priceType,\n          searchState.filters.minPrice,\n          searchState.filters.maxPrice,\n          searchState.filters.weightRange,\n          undefined,\n          searchState.filters.newsType,\n          searchState.filters.category,\n          searchState.filters.owner,\n          searchState.filters.shop,\n          searchState.filters.location,\n          searchState.filters.type,\n          searchState.filters.brand,\n          searchState.filters.model,\n          searchState.first,\n          searchState.sortBy,\n          searchState.before,\n          undefined,\n        );\n        this.getDataSuccess(result);\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n        // message.error(JSON.parse(error.response).message);\n      }\n    },\n  },\n});\n\nexport default searchModel;\n","import { init } from '@rematch/core';\nimport createLoadingPlugin from '@rematch/loading';\nimport profileModel from './models/profile/model';\nimport followModel from './models/follow/model';\nimport searchModel from './models/search/model';\nimport metadataModel from './models/metadata/model';\n\n// loading plugin\nconst loadingOptions = {};\nconst loading = createLoadingPlugin(loadingOptions);\n\n// init store\nexport const initStore = (initialState = {}) => {\n  return init({\n    models: {\n      profileModel,\n      followModel,\n      searchModel,\n      metadataModel,\n    },\n    redux: {\n      initialState,\n    },\n    plugins: [loading],\n  });\n};\n","import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { getServiceProxy } from '../services';\n\nconst __NEXT_REMATCH_STORE__ = '__NEXT_REMATCH_STORE__';\n\n// https://github.com/iliakan/detect-node\nconst checkServer = () =>\n  Object.prototype.toString.call(global.process) === '[object process]';\n\nexport const getOrCreateStore = (initStore: any, initialState: any) => {\n  // Always make a new store if server\n  if (checkServer() || typeof window === 'undefined') {\n    return initStore(initialState);\n  }\n\n  // Memoize store in global variable if client\n  if (!window[__NEXT_REMATCH_STORE__]) {\n    window[__NEXT_REMATCH_STORE__] = initStore(initialState);\n  }\n  return window[__NEXT_REMATCH_STORE__];\n};\n\nexport const withRematch = <P>(...args: any) => (Component: any) => {\n  // First argument is initStore, the rest are redux connect arguments and get passed\n  const [initStore, ...connectArgs] = args;\n  // Connect page to redux with connect arguments\n  const ConnectedComponent = connect.apply(null, connectArgs)(Component);\n\n  const ComponentWithRematch = (props: P = {} as any) => {\n    const { store, initialProps, initialState, ...others }: any = props;\n\n    // Wrap with redux Provider with store\n    // Create connected page with initialProps\n    return React.createElement(\n      Provider,\n      {\n        store:\n          store && store.dispatch\n            ? store\n            : getOrCreateStore(initStore, initialState),\n      },\n      React.createElement(ConnectedComponent, { ...initialProps, ...others }),\n    );\n  };\n\n  ComponentWithRematch.getInitialProps = async (props: any = {}) => {\n    const isServer = checkServer();\n\n    let authUser: any;\n    let shopResult: any;\n\n    if (isServer) {\n      authUser = props.req.authUser;\n\n      const serviceProxy = getServiceProxy(props.req.cookies.token);\n      if (authUser && authUser.id) {\n        shopResult = await serviceProxy.findShopByOwner(authUser.id);\n      }\n    }\n\n    const store = getOrCreateStore(initStore, {\n      profileModel: {\n        modal: {\n          login: false,\n          register: false,\n        },\n        authUser: authUser ? {\n          ...authUser,\n          shopDomain: shopResult && shopResult.domain ? shopResult.domain : undefined,\n        } : undefined,\n      },\n    });\n\n    // Run page getInitialProps with store and isServer\n    const initialProps = Component.getInitialProps\n      ? await Component.getInitialProps({ ...props, isServer, store })\n      : {};\n\n    return {\n      store,\n      initialState: store.getState(),\n      initialProps,\n    };\n  };\n\n  return ComponentWithRematch;\n};\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@rematch/core\");","module.exports = require(\"@rematch/loading\");","module.exports = require(\"antd/lib/avatar\");","module.exports = require(\"antd/lib/avatar/style\");","module.exports = require(\"antd/lib/badge\");","module.exports = require(\"antd/lib/badge/style\");","module.exports = require(\"antd/lib/button\");","module.exports = require(\"antd/lib/button/style\");","module.exports = require(\"antd/lib/col\");","module.exports = require(\"antd/lib/col/style\");","module.exports = require(\"antd/lib/divider\");","module.exports = require(\"antd/lib/divider/style\");","module.exports = require(\"antd/lib/dropdown\");","module.exports = require(\"antd/lib/dropdown/style\");","module.exports = require(\"antd/lib/form\");","module.exports = require(\"antd/lib/form/style\");","module.exports = require(\"antd/lib/icon\");","module.exports = require(\"antd/lib/icon/style\");","module.exports = require(\"antd/lib/input\");","module.exports = require(\"antd/lib/input/style\");","module.exports = require(\"antd/lib/layout\");","module.exports = require(\"antd/lib/layout/style\");","module.exports = require(\"antd/lib/list\");","module.exports = require(\"antd/lib/list/style\");","module.exports = require(\"antd/lib/menu\");","module.exports = require(\"antd/lib/menu/style\");","module.exports = require(\"antd/lib/message\");","module.exports = require(\"antd/lib/message/style\");","module.exports = require(\"antd/lib/modal\");","module.exports = require(\"antd/lib/modal/style\");","module.exports = require(\"antd/lib/row\");","module.exports = require(\"antd/lib/row/style\");","module.exports = require(\"antd/lib/select\");","module.exports = require(\"antd/lib/select/style\");","module.exports = require(\"antd/lib/spin\");","module.exports = require(\"antd/lib/spin/style\");","module.exports = require(\"antd/lib/tabs\");","module.exports = require(\"antd/lib/tabs/style\");","module.exports = require(\"antd/lib/tag\");","module.exports = require(\"antd/lib/tag/style\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"formik\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"js-cookie\");","module.exports = require(\"lodash\");","module.exports = require(\"moment\");","module.exports = require(\"next-i18next\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-device-detect\");","module.exports = require(\"react-firebaseui/StyledFirebaseAuth\");","module.exports = require(\"react-google-maps\");","module.exports = require(\"react-google-maps/lib/components/places/SearchBox\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-slick\");","module.exports = require(\"recompose\");","module.exports = require(\"uuid\");","module.exports = require(\"yup\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AACA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAsDA;AAlEA;AAAA;AAAA;AAoEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAHA;AAQA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AAzGA;AACA;AADA;AAAA;AACA;AA2GA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAIA;;;;AAPA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAMA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;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AACA;AAFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AAHA;AAOA;AACA;AARA;AAAA;AACA;AADA;AASA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AADA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AAHA;AAOA;AACA;AARA;AAAA;AACA;AADA;AASA;AACA;AAMA;AACA;AACA;AAFA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AADA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAaA;AAdA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAFA;AAAA;AAFA;AAOA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AApKA;AACA;AACA;AAEA;AACA;AACA;AADA;AAIA;AACA;AADA;AAGA;;;AAoLA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;A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AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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A;AACA;AAFA;AACA;AAlBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAuBA;AAAA;AACA;AAxBA;AAwBA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAnfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA6eA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAdA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAwCA;;;;AA9nBA;AACA;AAgoBA;;;;;;;;;;;;ACjrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;;;;;;;;;;;;;;AC7OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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;AACA;AAEA;AACA;AACA;AACA;AACA;AAcA;;;;;;;;;;;;;AA6CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;;;;;;AA3DA;;;;;;;AACA;AAEA;AACA;AAEA;AACA;AAuBA;AACA;AACA;AACA;;AAAA;AACA;;;;AADA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;;;;;;;AAtCA;AACA;AA8DA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;;;;;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;AAVA;AAAA;AAAA;AAeA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAhCA;AAAA;AAAA;AAmCA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAjEA;AAAA;AAAA;AAqEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAnFA;AAAA;AAAA;AAqFA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAtHA;AAAA;AAAA;AA2HA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA5IA;AAAA;AAAA;AA8IA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AA3KA;AAAA;AAAA;AA+KA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA7LA;AAAA;AAAA;AA+LA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA5NA;AAAA;AAAA;AAiOA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAlPA;AAAA;AAAA;AAoPA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAjRA;AAAA;AAAA;AAuRA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AA5SA;AAAA;AAAA;AA8SA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;AA3UA;AAAA;AAAA;AAqVA;AACA;AAAA;AACA;AAIA;AAGA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA3XA;AAAA;AAAA;AA6XA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA1ZA;AAAA;AAAA;AA+ZA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAjbA;AAAA;AAAA;AAmbA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAhdA;AAAA;AAAA;AAodA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAleA;AAAA;AAAA;AAoeA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAjgBA;AAAA;AAAA;AAsgBA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAvhBA;AAAA;AAAA;AAyhBA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAtjBA;AAAA;AAAA;AA4jBA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAhlBA;AAAA;AAAA;AAmlBA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;AAjnBA;AAAA;AAAA;AA2nBA;AACA;AAAA;AACA;AAIA;AAGA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAjqBA;AAAA;AAAA;AAmqBA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAhsBA;AAAA;AAAA;AAqsBA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAvtBA;AAAA;AAAA;AAytBA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA5vBA;AAAA;AAAA;AAiwBA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAlxBA;AAAA;AAAA;AAoxBA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAjzBA;AAAA;AAAA;AAszBA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAv0BA;AAAA;AAAA;AAy0BA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAt2BA;AAAA;AAAA;AA22BA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA53BA;AAAA;AAAA;AA83BA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA35BA;AAAA;AAAA;AAi6BA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAr7BA;AAAA;AAAA;AAw7BA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAt9BA;AAAA;AAAA;AA49BA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAh/BA;AAAA;AAAA;AAm/BA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAjhCA;AAAA;AAAA;AAshCA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAxiCA;AAAA;AAAA;AA0iCA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;AA7kCA;AAAA;AAAA;AAqlCA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAnnCA;AAAA;AAAA;AAqnCA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAlpCA;AAAA;AAAA;AAwpCA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AA5qCA;AAAA;AAAA;AA+qCA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;AA7sCA;AAAA;AAAA;AAqtCA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAnvCA;AAAA;AAAA;AAqvCA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAlxCA;AAAA;AAAA;AAuxCA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAzyCA;AAAA;AAAA;AA2yCA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA90CA;AAAA;AAAA;AAo1CA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAx2CA;AAAA;AAAA;AA22CA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAz4CA;AAAA;AAAA;AA84CA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAh6CA;AAAA;AAAA;AAk6CA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAr8CA;AAAA;AAAA;AAy8CA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAv9CA;AAAA;AAAA;AAy9CA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAt/CA;AAAA;AAAA;AA4/CA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAhhDA;AAAA;AAAA;AAmhDA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAjjDA;AAAA;AAAA;AAsjDA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAxkDA;AAAA;AAAA;AA0kDA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AA7mDA;AAAA;AAAA;AAinDA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA/nDA;AAAA;AAAA;AAioDA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;AA9pDA;AAAA;AAAA;AAsqDA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AApsDA;AAAA;AAAA;AAssDA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAnuDA;AAAA;AAAA;AAwuDA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AA1vDA;AAAA;AAAA;AA4vDA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;AA/xDA;AAAA;AAAA;AAuyDA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAr0DA;AAAA;AAAA;AAu0DA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;AAp2DA;AAAA;AAAA;AA82DA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAp5DA;AAAA;AAAA;AAs5DA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAn7DA;AAAA;AAAA;AAw7DA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAz8DA;AAAA;AAAA;AA28DA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAx+DA;AAAA;AAAA;AA8+DA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAlgEA;AAAA;AAAA;AAqgEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;AAniEA;AAAA;AAAA;AA2iEA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAzkEA;AAAA;AAAA;AA2kEA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAxmEA;AAAA;AAAA;AA8mEA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAloEA;AAAA;AAAA;AAqoEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAnqEA;AAAA;AAAA;AAwqEA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAzrEA;AAAA;AAAA;AA2rEA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAxtEA;AAAA;AAAA;AA6tEA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AA/uEA;AAAA;AAAA;AAivEA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;AApxEA;AAAA;AAAA;AA+xEA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAz0EA;AAAA;AAAA;AA20EA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAx2EA;AAAA;AAAA;AA62EA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA93EA;AAAA;AAAA;AAg4EA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA75EA;AAAA;AAAA;AAm6EA;AACA;AAAA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAx7EA;AAAA;AAAA;AA07EA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAv9EA;AAAA;AAAA;AA49EA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA7+EA;AAAA;AAAA;AA++EA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA5gFA;AAAA;AAAA;AAkhFA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAtiFA;AAAA;AAAA;AAyiFA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAvkFA;AAAA;AAAA;AA4kFA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AA9lFA;AAAA;AAAA;AAgmFA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;AAnoFA;AAAA;AAAA;AA8oFA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAxrFA;AAAA;AAAA;AA0rFA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAvtFA;AAAA;AAAA;AA4tFA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA7uFA;AAAA;AAAA;AA+uFA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA5wFA;AAAA;AAAA;AAkxFA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAtyFA;AAAA;AAAA;AAyyFA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAv0FA;AAAA;AAAA;AA60FA;AACA;AAAA;AACA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAn2FA;AAAA;AAAA;AAq2FA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;AAl4FA;AAAA;AAAA;AA44FA;AACA;AAAA;AACA;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAj7FA;AAAA;AAAA;AAm7FA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;AAh9FA;AAAA;AAAA;AAo+FA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAljGA;AAAA;AAAA;AAojGA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAjlGA;AAAA;AAAA;AAslGA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAxmGA;AAAA;AAAA;AA0mGA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;AA7oGA;AAAA;AAAA;AAspGA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAxrGA;AAAA;AAAA;AA0rGA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAvtGA;AAAA;AAAA;AA4tGA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AA9uGA;AAAA;AAAA;AAgvGA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAnxGA;AAAA;AAAA;AAuxGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAryGA;AAAA;AAAA;AAuyGA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAp0GA;AAAA;AAAA;AAy0GA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA11GA;AAAA;AAAA;AA41GA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAz3GA;AAAA;AAAA;AA63GA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA34GA;AAAA;AAAA;AA64GA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA16GA;AAAA;AAAA;AA+6GA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAh8GA;AAAA;AAAA;AAk8GA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA/9GA;AAAA;AAAA;AAq+GA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAz/GA;AAAA;AAAA;AA4/GA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AA1hHA;AAAA;AAAA;AA8hHA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA5iHA;AAAA;AAAA;AA8iHA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA3kHA;AAAA;AAAA;AAglHA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAlmHA;AAAA;AAAA;AAomHA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAvoHA;AAAA;AAAA;AA4oHA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA7pHA;AAAA;AAAA;AA+pHA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA5rHA;AAAA;AAAA;AAisHA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAltHA;AAAA;AAAA;AAotHA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAjvHA;AAAA;AAAA;AAuvHA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AA3wHA;AAAA;AAAA;AA8wHA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;AA5yHA;AAAA;AAAA;AAuzHA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAj2HA;AAAA;AAAA;AAm2HA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAh4HA;AAAA;AAAA;AAq4HA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAv5HA;AAAA;AAAA;AAy5HA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA57HA;AAAA;AAAA;AAi8HA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAl9HA;AAAA;AAAA;AAo9HA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAj/HA;AAAA;AAAA;AAu/HA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AA3gIA;AAAA;AAAA;AA8gIA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AA5iIA;AAAA;AAAA;AAgjIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA9jIA;AAAA;AAAA;AAgkIA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AA7lIA;AAAA;AAAA;AAkmIA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AApnIA;AAAA;AAAA;AAsnIA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAzpIA;AAAA;AAAA;AA8pIA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA/qIA;AAAA;AAAA;AAirIA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AA9sIA;AAAA;AAAA;AAotIA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAxuIA;AAAA;AAAA;AA2uIA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAzwIA;AAAA;AAAA;AAgyIA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AA13IA;AAAA;AAAA;AA43IA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAz5IA;AAAA;AAAA;AA+5IA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AAn7IA;AAAA;AAAA;AAs7IA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;AAp9IA;AAAA;AAAA;AA+9IA;AACA;AAAA;AACA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAzgJA;AAAA;AAAA;AA2gJA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAtiJA;AACA;AADA;AAAA;AA+rKA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AADA;A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ACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AArBA;AA/BA;AA2DA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AAmBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AACA;AAkBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AACA;AAkBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AACA;AAkBA;AACA;AA9DA;AAkEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AACA;AAkBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AACA;AAkBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAXA;AAFA;AAFA;AACA;AAkBA;AACA;AA9DA;AAkEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAFA;AAOA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;A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;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}