{"version":3,"sources":["../../src/client/bootstrap-modules.ts"],"names":["bootstrapModules","routes","logger","info","rootDir","rootLocation","moduleNames","excludedModules","moduleName","indexOf","setupRoutes","require","error"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AAGO,IAAMA,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,MAAT,QAASA,MAAT;;AAC9BC,yBAAOC,IAAP,CAAY,oCAAZ;;AACMC,YAAAA,OAFwB,aAEXC,kBAFW;AAAA;AAAA,mBAGJ,sBAAQD,OAAR,CAHI;;AAAA;AAGxBE,YAAAA,WAHwB;AAIxBC,YAAAA,eAJwB,GAII,CAAC,WAAD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKLD,WALK;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKnBE,YAAAA,UALmB;;AAAA,kBAMxBD,eAAe,CAACE,OAAhB,CAAwBD,UAAxB,MAAwC,CAAC,CANjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAS5BN,yBAAOC,IAAP,oCAAwCK,UAAxC,WAT4B,CAW5B;;;AACAN,yBAAOC,IAAP,qBAAyBK,UAAzB;;AACIE,YAAAA,WAbwB;;AAc5B,gBAAI;AACFA,cAAAA,WAAW,GAAGC,OAAO,qBAAcH,UAAd,aAAP,CAA0CE,WAAxD;AACD,aAFD,CAEE,OAAOE,KAAP,EAAc,CACd;AACD;;AACD,gBAAIF,WAAJ,EAAiB;AACfA,cAAAA,WAAW,CAAC;AAAET,gBAAAA,MAAM,EAANA;AAAF,eAAD,CAAX;AACD;;AArB2B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAuB9BC,yBAAOC,IAAP,CAAY,kCAAZ;;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBH,gBAAgB;AAAA;AAAA;AAAA,GAAtB","sourcesContent":["import { readdir } from 'fs-extra';\nimport { logger, rootLocation } from '../server/core';\nimport Routes from 'next-routes';\n\nexport const bootstrapModules = async ({ routes }: { routes: Routes }) => {\n  logger.info('[Client] Loading client modules...');\n  const rootDir = `${rootLocation}/client/modules`;\n  const moduleNames = await readdir(rootDir);\n  const excludedModules: string[] = ['.DS_Store'];\n  for (const moduleName of moduleNames) {\n    if (excludedModules.indexOf(moduleName) !== -1) {\n      continue;\n    }\n    logger.info(`[Client] Loading module '${moduleName}'...`);\n\n    // add aggregates graphql\n    logger.info(`[Client] [${moduleName}] Setup routes...`);\n    let setupRoutes: any;\n    try {\n      setupRoutes = require(`./modules/${moduleName}/routes`).setupRoutes;\n    } catch (error) {\n      // ignore service not found\n    }\n    if (setupRoutes) {\n      setupRoutes({ routes });\n    }\n  }\n  logger.info('[Client] Done loading modules...');\n};\n"],"file":"bootstrap-modules.js"}