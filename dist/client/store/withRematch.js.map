{"version":3,"sources":["../../../src/client/store/withRematch.ts"],"names":["__NEXT_REMATCH_STORE__","checkServer","Object","prototype","toString","call","global","process","getOrCreateStore","initStore","initialState","window","withRematch","args","Component","connectArgs","ConnectedComponent","connect","apply","ComponentWithRematch","props","store","initialProps","others","React","createElement","Provider","dispatch","getInitialProps","isServer","authUser","req","serviceProxy","cookies","token","id","findShopByOwner","shopResult","profileModel","modal","login","register","shopDomain","domain","undefined","getState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { getServiceProxy } from '../services';\n\nconst __NEXT_REMATCH_STORE__ = '__NEXT_REMATCH_STORE__';\n\n// https://github.com/iliakan/detect-node\nconst checkServer = () =>\n  Object.prototype.toString.call(global.process) === '[object process]';\n\nexport const getOrCreateStore = (initStore: any, initialState: any) => {\n  // Always make a new store if server\n  if (checkServer() || typeof window === 'undefined') {\n    return initStore(initialState);\n  }\n\n  // Memoize store in global variable if client\n  if (!window[__NEXT_REMATCH_STORE__]) {\n    window[__NEXT_REMATCH_STORE__] = initStore(initialState);\n  }\n  return window[__NEXT_REMATCH_STORE__];\n};\n\nexport const withRematch = <P>(...args: any) => (Component: any) => {\n  // First argument is initStore, the rest are redux connect arguments and get passed\n  const [initStore, ...connectArgs] = args;\n  // Connect page to redux with connect arguments\n  const ConnectedComponent = connect.apply(null, connectArgs)(Component);\n\n  const ComponentWithRematch = (props: P = {} as any) => {\n    const { store, initialProps, initialState, ...others }: any = props;\n\n    // Wrap with redux Provider with store\n    // Create connected page with initialProps\n    return React.createElement(\n      Provider,\n      {\n        store:\n          store && store.dispatch\n            ? store\n            : getOrCreateStore(initStore, initialState),\n      },\n      React.createElement(ConnectedComponent, { ...initialProps, ...others }),\n    );\n  };\n\n  ComponentWithRematch.getInitialProps = async (props: any = {}) => {\n    const isServer = checkServer();\n\n    let authUser: any;\n    let shopResult: any;\n\n    if (isServer) {\n      authUser = props.req.authUser;\n\n      const serviceProxy = getServiceProxy(props.req.cookies.token);\n      if (authUser && authUser.id) {\n        shopResult = await serviceProxy.findShopByOwner(authUser.id);\n      }\n    }\n\n    const store = getOrCreateStore(initStore, {\n      profileModel: {\n        modal: {\n          login: false,\n          register: false,\n        },\n        authUser: authUser ? {\n          ...authUser,\n          shopDomain: shopResult && shopResult.domain ? shopResult.domain : undefined,\n        } : undefined,\n      },\n    });\n\n    // Run page getInitialProps with store and isServer\n    const initialProps = Component.getInitialProps\n      ? await Component.getInitialProps({ ...props, isServer, store })\n      : {};\n\n    return {\n      store,\n      initialState: store.getState(),\n      initialProps,\n    };\n  };\n\n  return ComponentWithRematch;\n};\n"],"file":"withRematch.js"}