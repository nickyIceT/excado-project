{"version":3,"sources":["../../../src/client/services/index.ts"],"names":["getAuthHttp","idToken","fetch","url","option","headers","Authorization","credentials","getServiceProxy","httpOption","ServiceProxy","config","api"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAqB;AACvC,SAAO;AACLC,IAAAA,KAAK,EAAE,eAACC,GAAD,EAAWC,MAAX,EAA8C;AACnDA,MAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,aAAkCL,OAAlC;AACAG,MAAAA,MAAM,CAACC,OAAP,CAAe,6BAAf,IAAgD,GAAhD;AACAD,MAAAA,MAAM,CAACG,WAAP,GAAqB,SAArB;AACA,aAAO,8BAAMJ,GAAN,EAAWC,MAAX,CAAP;AACD;AANI,GAAP;AAQD,CATD;;AAWA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAgC;AAAA,MAA/BP,OAA+B,uEAArB,EAAqB;AACtD,MAAMQ,UAAU,GAAGT,WAAW,CAACC,OAAD,CAA9B;AACA,SAAO,IAAIS,4BAAJ,CACLC,eAAOR,GAAP,CAAWS,GADN,EAELH,UAFK,CAAP;AAID,CAND","sourcesContent":["import 'firebase/auth';\nimport { ServiceProxy } from './service-proxies';\nimport { config } from '@client/config';\nimport fetch from 'isomorphic-fetch';\n\nconst getAuthHttp = (idToken: string) => {\n  return {\n    fetch: (url: any, option: any): Promise<Response> => {\n      option.headers.Authorization = `${idToken}`;\n      option.headers['Access-Control-Allow-Origin'] = '*';\n      option.credentials = 'include';\n      return fetch(url, option);\n    },\n  };\n};\n\nconst getServiceProxy = (idToken = ''): ServiceProxy => {\n  const httpOption = getAuthHttp(idToken);\n  return new ServiceProxy(\n    config.url.api,\n    httpOption,\n  );\n};\n\nexport {\n  getServiceProxy,\n};\n"],"file":"index.js"}