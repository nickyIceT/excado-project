{"version":3,"sources":["../../../src/client/services/service-proxies.ts"],"names":["ServiceProxy","baseUrl","http","undefined","window","body","url_","replace","content_","JSON","stringify","options_","method","headers","fetch","then","_response","processRegisterUser","response","status","_headers","forEach","v","k","text","_responseText","throwException","Promise","resolve","processFindPermissions","result200","parse","jsonParseReviver","roleName","Error","encodeURIComponent","processCheckRoleNameExist","processGetAllRoles","roleId","processFindRoleById","processUpdateRole","search","permissions","first","sortBy","before","after","item","processFindRoles","processCreateRole","processFindProfile","userId","processFindPublicProfile","processUpdateProfile","roles","processFindUsers","processCreateUser","result201","phoneNo","processCheckPhoneNoExist","email","processCheckEmailExist","processFindUserById","processUpdateUser","adsenseId","processUpdateAdsense","processCreateAdsense","processGetAdsense","featureBrandId","processUpdateFeatureBrand","processGetFeatureBrands","processCreateFeatureBrand","rentalPeriodId","processUpdateRentalPeriod","processCreateRentalPeriod","processGetAllRentalPeriods","weightRangeId","processUpdateWeightRange","processCreateWeightRange","processGetAllWeightRanges","processGetCommonKeywords","processCreateRecentViewed","processGetRecentViewed","shopId","otherSortBy","processSearchNewsMostFollow","ownerId","processCountUnreadNotifications","processReadNotifications","processFindNotifications","reportId","processUpdateReport","processFindReportById","processCreateReport","state","reason","processFindReports","processFindShopByOwner","shopDomain","authId","processFindShopByDomain","processFindShopById","processUpdateShop","processCreateShop","isActive","owner","processFindShops","newsId","processFindNewsById","processUpdateNews","startDate","endDate","processFindNewsStatisticsInfo","processFindNewsByOwner","keyword","priceType","minPrice","maxPrice","newsType","shop","location","type","brand","model","processFindNews","processCreateNews","processFindBrands","processCreateBrand","processFindBrandList","brandSlug","processFindBrandDetail","processFindTopBrands","brandId","processFindBrandById","processUpdateBrand","processFindCategories","processCreateCategory","categorySlug","processFindCategoryDetail","categoryId","processFindCategoryById","processUpdateCategory","category","processFindModels","processCreateModel","modelId","processFindModelById","processUpdateModel","processFindProvinces","processCreateProvince","provinceId","processFindProvinceById","province","processUpdateProvince","weightRange","otherNewsType","processSearchElasticsearch","id","processFollow","processFindFollow","State","Reason","ActivateRolePayloadOperation","DeactivateRolePayloadOperation","UpdateRolePayloadOperation","FacebookLoginProvider","GoogleLoginProvider","PhoneLoginProvider","EmailLoginProvider","UpdateUserPayloadOperation","UpdateProfilePayloadOperation","ActivateUserPayloadOperation","DeactivateUserPayloadOperation","UpdateAvatarPayloadOperation","UpdateAdsensePayloadOperation","UpdateFeatureBrandPayloadOperation","UpdateRentalPeriodPayloadOperation","UpdateWeightRangePayloadOperation","ReadNotificationPayloadOperation","ReadAllNotificationsPayloadOperation","NotificationState","NotificationType","UpdateReportPayloadOperation","ReportState","ReportResolvedResult","CreateReportPayloadReason","UpdateIntroImagesShopPayloadOperation","UpdateLogoImageShopPayloadOperation","DeactivateShopPayloadOperation","ActivateShopPayloadOperation","UpdateShopPayloadOperation","UpdateBrandPayloadOperation","UpdateCategoryPayloadOperation","Payload9ResolvedResult","ReportsReason","SwaggerException","message","result","obj","isSwaggerException"],"mappings":"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","sourcesContent":["﻿/* tslint:disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v12.0.5.0 (NJsonSchema v9.13.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nexport class ServiceProxy {\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\n        this.http = http ? http : <any>window;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:3000/api\";\n    }\n\n    /**\n     * Register user\n     * @param body (optional) \n     * @return successful operation\n     */\n    registerUser(body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processRegisterUser(_response);\n        });\n    }\n\n    protected processRegisterUser(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find permissions list of all modules\n     * @return successful operation\n     */\n    findPermissions(): Promise<any> {\n        let url_ = this.baseUrl + \"/permissions\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindPermissions(_response);\n        });\n    }\n\n    protected processFindPermissions(response: Response): Promise<any> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <any>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<any>(<any>null);\n    }\n\n    /**\n     * Check role name exist\n     * @param roleName roleName\n     * @return successful operation\n     */\n    checkRoleNameExist(roleName: string): Promise<CheckRoleNameExistResult> {\n        let url_ = this.baseUrl + \"/roles/customs/check-name-exist/{roleName}\";\n        if (roleName === undefined || roleName === null)\n            throw new Error(\"The parameter 'roleName' must be defined.\");\n        url_ = url_.replace(\"{roleName}\", encodeURIComponent(\"\" + roleName)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCheckRoleNameExist(_response);\n        });\n    }\n\n    protected processCheckRoleNameExist(response: Response): Promise<CheckRoleNameExistResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CheckRoleNameExistResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CheckRoleNameExistResult>(<any>null);\n    }\n\n    /**\n     * Find all roles\n     * @return successful operation\n     */\n    getAllRoles(): Promise<GetAllRolesResult> {\n        let url_ = this.baseUrl + \"/roles/customs/get-all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAllRoles(_response);\n        });\n    }\n\n    protected processGetAllRoles(response: Response): Promise<GetAllRolesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAllRolesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAllRolesResult>(<any>null);\n    }\n\n    /**\n     * Find role by id\n     * @param roleId roleId\n     * @return successful operation\n     */\n    findRoleById(roleId: string): Promise<Role> {\n        let url_ = this.baseUrl + \"/roles/{roleId}\";\n        if (roleId === undefined || roleId === null)\n            throw new Error(\"The parameter 'roleId' must be defined.\");\n        url_ = url_.replace(\"{roleId}\", encodeURIComponent(\"\" + roleId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindRoleById(_response);\n        });\n    }\n\n    protected processFindRoleById(response: Response): Promise<Role> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Role>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Role>(<any>null);\n    }\n\n    /**\n     * Update role\n     * @param roleId roleId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateRole(roleId: string, body: any | undefined): Promise<Role> {\n        let url_ = this.baseUrl + \"/roles/{roleId}\";\n        if (roleId === undefined || roleId === null)\n            throw new Error(\"The parameter 'roleId' must be defined.\");\n        url_ = url_.replace(\"{roleId}\", encodeURIComponent(\"\" + roleId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateRole(_response);\n        });\n    }\n\n    protected processUpdateRole(response: Response): Promise<Role> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Role>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Role>(<any>null);\n    }\n\n    /**\n     * Find roles\n     * @param search (optional) search\n     * @param permissions (optional) filter by permissions\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findRoles(search: string | undefined, permissions: string[] | undefined, first: string, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindRolesResult> {\n        let url_ = this.baseUrl + \"/roles?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (permissions === null)\n            throw new Error(\"The parameter 'permissions' cannot be null.\");\n        else if (permissions !== undefined)\n            permissions && permissions.forEach(item => { url_ += \"permissions=\" + encodeURIComponent(\"\" + item) + \"&\"; });\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindRoles(_response);\n        });\n    }\n\n    protected processFindRoles(response: Response): Promise<FindRolesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindRolesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindRolesResult>(<any>null);\n    }\n\n    /**\n     * Create role\n     * @param body (optional) \n     * @return successful operation\n     */\n    createRole(body: any | undefined): Promise<Role> {\n        let url_ = this.baseUrl + \"/roles\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateRole(_response);\n        });\n    }\n\n    protected processCreateRole(response: Response): Promise<Role> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Role>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Role>(<any>null);\n    }\n\n    /**\n     * Find profile\n     * @return successful operation\n     */\n    findProfile(): Promise<User> {\n        let url_ = this.baseUrl + \"/profiles\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindProfile(_response);\n        });\n    }\n\n    protected processFindProfile(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Find use profile for guess view\n     * @param userId userId\n     * @return successful operation\n     */\n    findPublicProfile(userId: string): Promise<User> {\n        let url_ = this.baseUrl + \"/profiles/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindPublicProfile(_response);\n        });\n    }\n\n    protected processFindPublicProfile(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Update profile\n     * @param userId userId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateProfile(userId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/profiles/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateProfile(_response);\n        });\n    }\n\n    protected processUpdateProfile(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find users\n     * @param search (optional) search\n     * @param roles (optional) filter by roles\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findUsers(search: string | undefined, roles: string[] | undefined, first: number, sortBy: string, before: number | undefined, after: number | undefined): Promise<FindUserResult> {\n        let url_ = this.baseUrl + \"/users?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (roles === null)\n            throw new Error(\"The parameter 'roles' cannot be null.\");\n        else if (roles !== undefined)\n            roles && roles.forEach(item => { url_ += \"roles=\" + encodeURIComponent(\"\" + item) + \"&\"; });\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindUsers(_response);\n        });\n    }\n\n    protected processFindUsers(response: Response): Promise<FindUserResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindUserResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindUserResult>(<any>null);\n    }\n\n    /**\n     * Create user\n     * @param body (optional) \n     * @return successful operation\n     */\n    createUser(body: any | undefined): Promise<User> {\n        let url_ = this.baseUrl + \"/users\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateUser(_response);\n        });\n    }\n\n    protected processCreateUser(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Check phone number exist\n     * @param phoneNo phoneNo\n     * @return successful operation\n     */\n    checkPhoneNoExist(phoneNo: string): Promise<CheckPhoneNoExistResult> {\n        let url_ = this.baseUrl + \"/users/customs/check-phone-number-exist/{phoneNo}\";\n        if (phoneNo === undefined || phoneNo === null)\n            throw new Error(\"The parameter 'phoneNo' must be defined.\");\n        url_ = url_.replace(\"{phoneNo}\", encodeURIComponent(\"\" + phoneNo)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCheckPhoneNoExist(_response);\n        });\n    }\n\n    protected processCheckPhoneNoExist(response: Response): Promise<CheckPhoneNoExistResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CheckPhoneNoExistResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CheckPhoneNoExistResult>(<any>null);\n    }\n\n    /**\n     * Check email exist\n     * @param email email\n     * @return successful operation\n     */\n    checkEmailExist(email: string): Promise<CheckEmailExistResult> {\n        let url_ = this.baseUrl + \"/users/customs/check-email-exist/{email}\";\n        if (email === undefined || email === null)\n            throw new Error(\"The parameter 'email' must be defined.\");\n        url_ = url_.replace(\"{email}\", encodeURIComponent(\"\" + email)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCheckEmailExist(_response);\n        });\n    }\n\n    protected processCheckEmailExist(response: Response): Promise<CheckEmailExistResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CheckEmailExistResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CheckEmailExistResult>(<any>null);\n    }\n\n    /**\n     * Find user by id\n     * @param userId userId\n     * @return successful operation\n     */\n    findUserById(userId: string): Promise<User> {\n        let url_ = this.baseUrl + \"/users/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindUserById(_response);\n        });\n    }\n\n    protected processFindUserById(response: Response): Promise<User> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <User>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<User>(<any>null);\n    }\n\n    /**\n     * Update user\n     * @param userId userId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateUser(userId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/users/{userId}\";\n        if (userId === undefined || userId === null)\n            throw new Error(\"The parameter 'userId' must be defined.\");\n        url_ = url_.replace(\"{userId}\", encodeURIComponent(\"\" + userId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateUser(_response);\n        });\n    }\n\n    protected processUpdateUser(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * update adsense\n     * @param adsenseId adsenseId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateAdsense(adsenseId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/adsense/{adsenseId}\";\n        if (adsenseId === undefined || adsenseId === null)\n            throw new Error(\"The parameter 'adsenseId' must be defined.\");\n        url_ = url_.replace(\"{adsenseId}\", encodeURIComponent(\"\" + adsenseId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateAdsense(_response);\n        });\n    }\n\n    protected processUpdateAdsense(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create adsense\n     * @param body (optional) \n     * @return successful operation\n     */\n    createAdsense(body: any | undefined): Promise<Adsense> {\n        let url_ = this.baseUrl + \"/adsense\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateAdsense(_response);\n        });\n    }\n\n    protected processCreateAdsense(response: Response): Promise<Adsense> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Adsense>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Adsense>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Adsense>(<any>null);\n    }\n\n    /**\n     * Get adsense\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getAdsense(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetAdsenseResult> {\n        let url_ = this.baseUrl + \"/adsense?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAdsense(_response);\n        });\n    }\n\n    protected processGetAdsense(response: Response): Promise<GetAdsenseResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAdsenseResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAdsenseResult>(<any>null);\n    }\n\n    /**\n     * update feature brand\n     * @param featureBrandId featureBrandId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateFeatureBrand(featureBrandId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/feature-brands/{featureBrandId}\";\n        if (featureBrandId === undefined || featureBrandId === null)\n            throw new Error(\"The parameter 'featureBrandId' must be defined.\");\n        url_ = url_.replace(\"{featureBrandId}\", encodeURIComponent(\"\" + featureBrandId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateFeatureBrand(_response);\n        });\n    }\n\n    protected processUpdateFeatureBrand(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Get feature brands\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getFeatureBrands(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetFeatureBrandsResult> {\n        let url_ = this.baseUrl + \"/feature-brands?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetFeatureBrands(_response);\n        });\n    }\n\n    protected processGetFeatureBrands(response: Response): Promise<GetFeatureBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetFeatureBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetFeatureBrandsResult>(<any>null);\n    }\n\n    /**\n     * Create feature brand for ads\n     * @param body (optional) \n     * @return successful operation\n     */\n    createFeatureBrand(body: any | undefined): Promise<FeatureBrand> {\n        let url_ = this.baseUrl + \"/feature-brands\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateFeatureBrand(_response);\n        });\n    }\n\n    protected processCreateFeatureBrand(response: Response): Promise<FeatureBrand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FeatureBrand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <FeatureBrand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FeatureBrand>(<any>null);\n    }\n\n    /**\n     * Update rental period\n     * @param rentalPeriodId rental period id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateRentalPeriod(rentalPeriodId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/rental-periods/{rentalPeriodId}\";\n        if (rentalPeriodId === undefined || rentalPeriodId === null)\n            throw new Error(\"The parameter 'rentalPeriodId' must be defined.\");\n        url_ = url_.replace(\"{rentalPeriodId}\", encodeURIComponent(\"\" + rentalPeriodId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateRentalPeriod(_response);\n        });\n    }\n\n    protected processUpdateRentalPeriod(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create rental period item\n     * @param body (optional) \n     * @return successful operation\n     */\n    createRentalPeriod(body: any | undefined): Promise<RentalPeriod> {\n        let url_ = this.baseUrl + \"/rental-periods\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateRentalPeriod(_response);\n        });\n    }\n\n    protected processCreateRentalPeriod(response: Response): Promise<RentalPeriod> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <RentalPeriod>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <RentalPeriod>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<RentalPeriod>(<any>null);\n    }\n\n    /**\n     * Get rental periods\n     * @return successful operation\n     */\n    getAllRentalPeriods(): Promise<GetAllRentalPeriodsResult> {\n        let url_ = this.baseUrl + \"/rental-periods/customs/get-all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAllRentalPeriods(_response);\n        });\n    }\n\n    protected processGetAllRentalPeriods(response: Response): Promise<GetAllRentalPeriodsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAllRentalPeriodsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAllRentalPeriodsResult>(<any>null);\n    }\n\n    /**\n     * Update weight range\n     * @param weightRangeId weight range Id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateWeightRange(weightRangeId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/weight-ranges/{weightRangeId}\";\n        if (weightRangeId === undefined || weightRangeId === null)\n            throw new Error(\"The parameter 'weightRangeId' must be defined.\");\n        url_ = url_.replace(\"{weightRangeId}\", encodeURIComponent(\"\" + weightRangeId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateWeightRange(_response);\n        });\n    }\n\n    protected processUpdateWeightRange(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create weight range item\n     * @param body (optional) \n     * @return successful operation\n     */\n    createWeightRange(body: any | undefined): Promise<WeightRange> {\n        let url_ = this.baseUrl + \"/weight-ranges\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateWeightRange(_response);\n        });\n    }\n\n    protected processCreateWeightRange(response: Response): Promise<WeightRange> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <WeightRange>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <WeightRange>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<WeightRange>(<any>null);\n    }\n\n    /**\n     * Get weight ranges\n     * @return successful operation\n     */\n    getAllWeightRanges(): Promise<GetAllWeightRangesResult> {\n        let url_ = this.baseUrl + \"/weight-ranges/customs/get-all\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetAllWeightRanges(_response);\n        });\n    }\n\n    protected processGetAllWeightRanges(response: Response): Promise<GetAllWeightRangesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetAllWeightRangesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetAllWeightRangesResult>(<any>null);\n    }\n\n    /**\n     * Get common search keywords\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getCommonKeywords(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetCommonKeywordsResult> {\n        let url_ = this.baseUrl + \"/common-keywords?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetCommonKeywords(_response);\n        });\n    }\n\n    protected processGetCommonKeywords(response: Response): Promise<GetCommonKeywordsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetCommonKeywordsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetCommonKeywordsResult>(<any>null);\n    }\n\n    /**\n     * Create recent viewed item\n     * @param body (optional) \n     * @return successful operation\n     */\n    createRecentViewed(body: any | undefined): Promise<RecentViewedItem> {\n        let url_ = this.baseUrl + \"/recent-viewed\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateRecentViewed(_response);\n        });\n    }\n\n    protected processCreateRecentViewed(response: Response): Promise<RecentViewedItem> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <RecentViewedItem>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <RecentViewedItem>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<RecentViewedItem>(<any>null);\n    }\n\n    /**\n     * Get recent viewed items by users or uuid key\n     * @param first limit size\n     * @param sortBy order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    getRecentViewed(first: number, sortBy: string, before: any | undefined, after: any | undefined): Promise<GetRecentViewedResult> {\n        let url_ = this.baseUrl + \"/recent-viewed?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processGetRecentViewed(_response);\n        });\n    }\n\n    protected processGetRecentViewed(response: Response): Promise<GetRecentViewedResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <GetRecentViewedResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<GetRecentViewedResult>(<any>null);\n    }\n\n    /**\n     * Search news most follow\n     * @param shopId (optional) shop Id\n     * @param first limit size\n     * @param sortBy order by\n     * @param otherSortBy other order by\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    searchNewsMostFollow(shopId: number | undefined, first: number, sortBy: string, otherSortBy: string, before: any | undefined, after: any | undefined): Promise<SearchNewsMostFollowResult> {\n        let url_ = this.baseUrl + \"/search-news-most-follow?\";\n        if (shopId === null)\n            throw new Error(\"The parameter 'shopId' cannot be null.\");\n        else if (shopId !== undefined)\n            url_ += \"shopId=\" + encodeURIComponent(\"\" + shopId) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (otherSortBy === undefined || otherSortBy === null)\n            throw new Error(\"The parameter 'otherSortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"otherSortBy=\" + encodeURIComponent(\"\" + otherSortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processSearchNewsMostFollow(_response);\n        });\n    }\n\n    protected processSearchNewsMostFollow(response: Response): Promise<SearchNewsMostFollowResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <SearchNewsMostFollowResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<SearchNewsMostFollowResult>(<any>null);\n    }\n\n    /**\n     * Count unread notification\n     * @param ownerId owner id\n     * @return successful operation\n     */\n    countUnreadNotifications(ownerId: string): Promise<CountUnreadNotificationsResult> {\n        let url_ = this.baseUrl + \"/notifications/{ownerId}\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCountUnreadNotifications(_response);\n        });\n    }\n\n    protected processCountUnreadNotifications(response: Response): Promise<CountUnreadNotificationsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <CountUnreadNotificationsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<CountUnreadNotificationsResult>(<any>null);\n    }\n\n    /**\n     * Read notifications\n     * @param ownerId owner id\n     * @param body (optional) \n     * @return successful operation\n     */\n    readNotifications(ownerId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/notifications/{ownerId}\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processReadNotifications(_response);\n        });\n    }\n\n    protected processReadNotifications(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find notifications\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findNotifications(first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindNotificationsResult> {\n        let url_ = this.baseUrl + \"/notifications?\";\n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNotifications(_response);\n        });\n    }\n\n    protected processFindNotifications(response: Response): Promise<FindNotificationsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNotificationsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNotificationsResult>(<any>null);\n    }\n\n    /**\n     * Update report\n     * @param reportId report id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateReport(reportId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/reports/{reportId}\";\n        if (reportId === undefined || reportId === null)\n            throw new Error(\"The parameter 'reportId' must be defined.\");\n        url_ = url_.replace(\"{reportId}\", encodeURIComponent(\"\" + reportId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateReport(_response);\n        });\n    }\n\n    protected processUpdateReport(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find report by id\n     * @param reportId report id\n     * @return successful operation\n     */\n    findReportById(reportId: string): Promise<Report> {\n        let url_ = this.baseUrl + \"/reports/{reportId}\";\n        if (reportId === undefined || reportId === null)\n            throw new Error(\"The parameter 'reportId' must be defined.\");\n        url_ = url_.replace(\"{reportId}\", encodeURIComponent(\"\" + reportId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindReportById(_response);\n        });\n    }\n\n    protected processFindReportById(response: Response): Promise<Report> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Report>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Report>(<any>null);\n    }\n\n    /**\n     * Create report\n     * @param body (optional) \n     * @return successful operation\n     */\n    createReport(body: any | undefined): Promise<Report> {\n        let url_ = this.baseUrl + \"/reports\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateReport(_response);\n        });\n    }\n\n    protected processCreateReport(response: Response): Promise<Report> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Report>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Report>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Report>(<any>null);\n    }\n\n    /**\n     * Find reports\n     * @param search (optional) state filter\n     * @param state (optional) state filter\n     * @param reason (optional) reason filter\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findReports(search: string | undefined, state: State | undefined, reason: Reason | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindReportsResult> {\n        let url_ = this.baseUrl + \"/reports?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (state === null)\n            throw new Error(\"The parameter 'state' cannot be null.\");\n        else if (state !== undefined)\n            url_ += \"state=\" + encodeURIComponent(\"\" + state) + \"&\"; \n        if (reason === null)\n            throw new Error(\"The parameter 'reason' cannot be null.\");\n        else if (reason !== undefined)\n            url_ += \"reason=\" + encodeURIComponent(\"\" + reason) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindReports(_response);\n        });\n    }\n\n    protected processFindReports(response: Response): Promise<FindReportsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindReportsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindReportsResult>(<any>null);\n    }\n\n    /**\n     * Find shop by owner id\n     * @param ownerId shop owner id\n     * @return successful operation\n     */\n    findShopByOwner(ownerId: string): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop/get-by-owner/{ownerId}\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShopByOwner(_response);\n        });\n    }\n\n    protected processFindShopByOwner(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Find shop by id\n     * @param shopDomain shop domain\n     * @param authId (optional) authUserId\n     * @return successful operation\n     */\n    findShopByDomain(shopDomain: string, authId: string | undefined): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop/get-by-domain/{shopDomain}?\";\n        if (shopDomain === undefined || shopDomain === null)\n            throw new Error(\"The parameter 'shopDomain' must be defined.\");\n        url_ = url_.replace(\"{shopDomain}\", encodeURIComponent(\"\" + shopDomain)); \n        if (authId === null)\n            throw new Error(\"The parameter 'authId' cannot be null.\");\n        else if (authId !== undefined)\n            url_ += \"authId=\" + encodeURIComponent(\"\" + authId) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShopByDomain(_response);\n        });\n    }\n\n    protected processFindShopByDomain(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Find news by id\n     * @param shopId shop id\n     * @return successful operation\n     */\n    findShopById(shopId: string): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop/{shopId}\";\n        if (shopId === undefined || shopId === null)\n            throw new Error(\"The parameter 'shopId' must be defined.\");\n        url_ = url_.replace(\"{shopId}\", encodeURIComponent(\"\" + shopId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShopById(_response);\n        });\n    }\n\n    protected processFindShopById(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Update shop\n     * @param shopId shop id\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateShop(shopId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/shop/{shopId}\";\n        if (shopId === undefined || shopId === null)\n            throw new Error(\"The parameter 'shopId' must be defined.\");\n        url_ = url_.replace(\"{shopId}\", encodeURIComponent(\"\" + shopId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateShop(_response);\n        });\n    }\n\n    protected processUpdateShop(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Create shops\n     * @param body (optional) \n     * @return successful operation\n     */\n    createShop(body: any | undefined): Promise<Shop> {\n        let url_ = this.baseUrl + \"/shop\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateShop(_response);\n        });\n    }\n\n    protected processCreateShop(response: Response): Promise<Shop> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Shop>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Shop>(<any>null);\n    }\n\n    /**\n     * Find shops\n     * @param search (optional) search query\n     * @param isActive (optional) isActive filter\n     * @param owner (optional) owner filter\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findShops(search: string | undefined, isActive: boolean | undefined, owner: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindShopsResult> {\n        let url_ = this.baseUrl + \"/shop?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (isActive === null)\n            throw new Error(\"The parameter 'isActive' cannot be null.\");\n        else if (isActive !== undefined)\n            url_ += \"isActive=\" + encodeURIComponent(\"\" + isActive) + \"&\"; \n        if (owner === null)\n            throw new Error(\"The parameter 'owner' cannot be null.\");\n        else if (owner !== undefined)\n            url_ += \"owner=\" + encodeURIComponent(\"\" + owner) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindShops(_response);\n        });\n    }\n\n    protected processFindShops(response: Response): Promise<FindShopsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindShopsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindShopsResult>(<any>null);\n    }\n\n    /**\n     * Find news by id\n     * @param newsId newsId\n     * @return successful operation\n     */\n    findNewsById(newsId: string): Promise<FindNewsDetail> {\n        let url_ = this.baseUrl + \"/news/{newsId}\";\n        if (newsId === undefined || newsId === null)\n            throw new Error(\"The parameter 'newsId' must be defined.\");\n        url_ = url_.replace(\"{newsId}\", encodeURIComponent(\"\" + newsId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNewsById(_response);\n        });\n    }\n\n    protected processFindNewsById(response: Response): Promise<FindNewsDetail> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNewsDetail>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNewsDetail>(<any>null);\n    }\n\n    /**\n     * Update news\n     * @param newsId newsId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateNews(newsId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/news/{newsId}\";\n        if (newsId === undefined || newsId === null)\n            throw new Error(\"The parameter 'newsId' must be defined.\");\n        url_ = url_.replace(\"{newsId}\", encodeURIComponent(\"\" + newsId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateNews(_response);\n        });\n    }\n\n    protected processUpdateNews(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find news statistics for admin\n     * @param startDate startDate\n     * @param endDate endDate\n     * @return successful operation\n     */\n    findNewsStatisticsInfo(startDate: string, endDate: string): Promise<NewsStatisticsResult> {\n        let url_ = this.baseUrl + \"/news/statistics/info?\";\n        if (startDate === undefined || startDate === null)\n            throw new Error(\"The parameter 'startDate' must be defined and cannot be null.\");\n        else\n            url_ += \"startDate=\" + encodeURIComponent(\"\" + startDate) + \"&\"; \n        if (endDate === undefined || endDate === null)\n            throw new Error(\"The parameter 'endDate' must be defined and cannot be null.\");\n        else\n            url_ += \"endDate=\" + encodeURIComponent(\"\" + endDate) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNewsStatisticsInfo(_response);\n        });\n    }\n\n    protected processFindNewsStatisticsInfo(response: Response): Promise<NewsStatisticsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <NewsStatisticsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<NewsStatisticsResult>(<any>null);\n    }\n\n    /**\n     * Find news by owner\n     * @param ownerId ownerId\n     * @param status news status\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findNewsByOwner(ownerId: string, status: string, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindNewsResultWithFollow> {\n        let url_ = this.baseUrl + \"/news/get-by-owner/{ownerId}?\";\n        if (ownerId === undefined || ownerId === null)\n            throw new Error(\"The parameter 'ownerId' must be defined.\");\n        url_ = url_.replace(\"{ownerId}\", encodeURIComponent(\"\" + ownerId)); \n        if (status === undefined || status === null)\n            throw new Error(\"The parameter 'status' must be defined and cannot be null.\");\n        else\n            url_ += \"status=\" + encodeURIComponent(\"\" + status) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNewsByOwner(_response);\n        });\n    }\n\n    protected processFindNewsByOwner(response: Response): Promise<FindNewsResultWithFollow> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNewsResultWithFollow>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNewsResultWithFollow>(<any>null);\n    }\n\n    /**\n     * Find news\n     * @param keyword (optional) search keyword\n     * @param state (optional) product state (old/new)\n     * @param priceType (optional) price type (fixed/negociate)\n     * @param minPrice (optional) min price\n     * @param maxPrice (optional) max price\n     * @param newsType (optional) news type (sell/buy/...)\n     * @param owner (optional) news owner id\n     * @param shop (optional) shop id\n     * @param location (optional) location (only by city)\n     * @param type (optional) product type (may ui/may xuc/may dao)\n     * @param brand (optional) product's brand\n     * @param model (optional) product model\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findNews(keyword: string | undefined, state: string | undefined, priceType: string | undefined, minPrice: number | undefined, maxPrice: number | undefined, newsType: string | undefined, owner: string | undefined, shop: string | undefined, location: string | undefined, type: string | undefined, brand: string | undefined, model: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindNewsResult> {\n        let url_ = this.baseUrl + \"/news?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\"; \n        if (state === null)\n            throw new Error(\"The parameter 'state' cannot be null.\");\n        else if (state !== undefined)\n            url_ += \"state=\" + encodeURIComponent(\"\" + state) + \"&\"; \n        if (priceType === null)\n            throw new Error(\"The parameter 'priceType' cannot be null.\");\n        else if (priceType !== undefined)\n            url_ += \"priceType=\" + encodeURIComponent(\"\" + priceType) + \"&\"; \n        if (minPrice === null)\n            throw new Error(\"The parameter 'minPrice' cannot be null.\");\n        else if (minPrice !== undefined)\n            url_ += \"minPrice=\" + encodeURIComponent(\"\" + minPrice) + \"&\"; \n        if (maxPrice === null)\n            throw new Error(\"The parameter 'maxPrice' cannot be null.\");\n        else if (maxPrice !== undefined)\n            url_ += \"maxPrice=\" + encodeURIComponent(\"\" + maxPrice) + \"&\"; \n        if (newsType === null)\n            throw new Error(\"The parameter 'newsType' cannot be null.\");\n        else if (newsType !== undefined)\n            url_ += \"newsType=\" + encodeURIComponent(\"\" + newsType) + \"&\"; \n        if (owner === null)\n            throw new Error(\"The parameter 'owner' cannot be null.\");\n        else if (owner !== undefined)\n            url_ += \"owner=\" + encodeURIComponent(\"\" + owner) + \"&\"; \n        if (shop === null)\n            throw new Error(\"The parameter 'shop' cannot be null.\");\n        else if (shop !== undefined)\n            url_ += \"shop=\" + encodeURIComponent(\"\" + shop) + \"&\"; \n        if (location === null)\n            throw new Error(\"The parameter 'location' cannot be null.\");\n        else if (location !== undefined)\n            url_ += \"location=\" + encodeURIComponent(\"\" + location) + \"&\"; \n        if (type === null)\n            throw new Error(\"The parameter 'type' cannot be null.\");\n        else if (type !== undefined)\n            url_ += \"type=\" + encodeURIComponent(\"\" + type) + \"&\"; \n        if (brand === null)\n            throw new Error(\"The parameter 'brand' cannot be null.\");\n        else if (brand !== undefined)\n            url_ += \"brand=\" + encodeURIComponent(\"\" + brand) + \"&\"; \n        if (model === null)\n            throw new Error(\"The parameter 'model' cannot be null.\");\n        else if (model !== undefined)\n            url_ += \"model=\" + encodeURIComponent(\"\" + model) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindNews(_response);\n        });\n    }\n\n    protected processFindNews(response: Response): Promise<FindNewsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindNewsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindNewsResult>(<any>null);\n    }\n\n    /**\n     * Create news\n     * @param body (optional) \n     * @return successful operation\n     */\n    createNews(body: any | undefined): Promise<News> {\n        let url_ = this.baseUrl + \"/news\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateNews(_response);\n        });\n    }\n\n    protected processCreateNews(response: Response): Promise<News> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <News>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <News>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<News>(<any>null);\n    }\n\n    /**\n     * Find brands\n     * @param search (optional) search query to filter brands\n     * @param first search query to filter brands\n     * @param sortBy search query to filter brands\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findBrands(search: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindBrandsResult> {\n        let url_ = this.baseUrl + \"/brands?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrands(_response);\n        });\n    }\n\n    protected processFindBrands(response: Response): Promise<FindBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindBrandsResult>(<any>null);\n    }\n\n    /**\n     * Create brand\n     * @param body (optional) \n     * @return successful operation\n     */\n    createBrand(body: any | undefined): Promise<Brand> {\n        let url_ = this.baseUrl + \"/brands\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateBrand(_response);\n        });\n    }\n\n    protected processCreateBrand(response: Response): Promise<Brand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Brand>(<any>null);\n    }\n\n    /**\n     * Find brands list\n     * @return successful operation\n     */\n    findBrandList(): Promise<FindBrandsResult> {\n        let url_ = this.baseUrl + \"/brands/customs/find-brand-list\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrandList(_response);\n        });\n    }\n\n    protected processFindBrandList(response: Response): Promise<FindBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindBrandsResult>(<any>null);\n    }\n\n    /**\n     * Find brand detail by slug\n     * @param brandSlug brandSlug\n     * @return successful operation\n     */\n    findBrandDetail(brandSlug: string): Promise<Brand> {\n        let url_ = this.baseUrl + \"/brands/customs/find-brand-detail/{brandSlug}\";\n        if (brandSlug === undefined || brandSlug === null)\n            throw new Error(\"The parameter 'brandSlug' must be defined.\");\n        url_ = url_.replace(\"{brandSlug}\", encodeURIComponent(\"\" + brandSlug)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrandDetail(_response);\n        });\n    }\n\n    protected processFindBrandDetail(response: Response): Promise<Brand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Brand>(<any>null);\n    }\n\n    /**\n     * Find top brands\n     * @return successful operation\n     */\n    findTopBrands(): Promise<FindBrandsResult> {\n        let url_ = this.baseUrl + \"/brands/customs/find-top-brands\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindTopBrands(_response);\n        });\n    }\n\n    protected processFindTopBrands(response: Response): Promise<FindBrandsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindBrandsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindBrandsResult>(<any>null);\n    }\n\n    /**\n     * Find brand by id\n     * @param brandId brandId\n     * @return successful operation\n     */\n    findBrandById(brandId: string): Promise<Brand> {\n        let url_ = this.baseUrl + \"/brands/{brandId}\";\n        if (brandId === undefined || brandId === null)\n            throw new Error(\"The parameter 'brandId' must be defined.\");\n        url_ = url_.replace(\"{brandId}\", encodeURIComponent(\"\" + brandId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindBrandById(_response);\n        });\n    }\n\n    protected processFindBrandById(response: Response): Promise<Brand> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Brand>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Brand>(<any>null);\n    }\n\n    /**\n     * Update brand\n     * @param brandId brandId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateBrand(brandId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/brands/{brandId}\";\n        if (brandId === undefined || brandId === null)\n            throw new Error(\"The parameter 'brandId' must be defined.\");\n        url_ = url_.replace(\"{brandId}\", encodeURIComponent(\"\" + brandId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateBrand(_response);\n        });\n    }\n\n    protected processUpdateBrand(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find categories\n     * @return successful operation\n     */\n    findCategories(): Promise<FindCategoriesResult> {\n        let url_ = this.baseUrl + \"/categories\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindCategories(_response);\n        });\n    }\n\n    protected processFindCategories(response: Response): Promise<FindCategoriesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindCategoriesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindCategoriesResult>(<any>null);\n    }\n\n    /**\n     * Create category\n     * @param body (optional) \n     * @return successful operation\n     */\n    createCategory(body: any | undefined): Promise<Category> {\n        let url_ = this.baseUrl + \"/categories\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateCategory(_response);\n        });\n    }\n\n    protected processCreateCategory(response: Response): Promise<Category> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Category>(<any>null);\n    }\n\n    /**\n     * Find category detail by slug\n     * @param categorySlug categorySlug\n     * @return successful operation\n     */\n    findCategoryDetail(categorySlug: string): Promise<Category> {\n        let url_ = this.baseUrl + \"/categories/customs/find-category-detail/{categorySlug}\";\n        if (categorySlug === undefined || categorySlug === null)\n            throw new Error(\"The parameter 'categorySlug' must be defined.\");\n        url_ = url_.replace(\"{categorySlug}\", encodeURIComponent(\"\" + categorySlug)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindCategoryDetail(_response);\n        });\n    }\n\n    protected processFindCategoryDetail(response: Response): Promise<Category> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Category>(<any>null);\n    }\n\n    /**\n     * Find category by id\n     * @param categoryId categoryId\n     * @return successful operation\n     */\n    findCategoryById(categoryId: string): Promise<Category> {\n        let url_ = this.baseUrl + \"/categories/{categoryId}\";\n        if (categoryId === undefined || categoryId === null)\n            throw new Error(\"The parameter 'categoryId' must be defined.\");\n        url_ = url_.replace(\"{categoryId}\", encodeURIComponent(\"\" + categoryId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindCategoryById(_response);\n        });\n    }\n\n    protected processFindCategoryById(response: Response): Promise<Category> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Category>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Category>(<any>null);\n    }\n\n    /**\n     * Update category\n     * @param categoryId categoryId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateCategory(categoryId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/categories/{categoryId}\";\n        if (categoryId === undefined || categoryId === null)\n            throw new Error(\"The parameter 'categoryId' must be defined.\");\n        url_ = url_.replace(\"{categoryId}\", encodeURIComponent(\"\" + categoryId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateCategory(_response);\n        });\n    }\n\n    protected processUpdateCategory(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find models\n     * @param search (optional) search string\n     * @param brand (optional) brand\n     * @param category (optional) category\n     * @param first search query to filter brands\n     * @param sortBy search query to filter brands\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    findModels(search: string | undefined, brand: string | undefined, category: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<FindModelsResult> {\n        let url_ = this.baseUrl + \"/models?\";\n        if (search === null)\n            throw new Error(\"The parameter 'search' cannot be null.\");\n        else if (search !== undefined)\n            url_ += \"search=\" + encodeURIComponent(\"\" + search) + \"&\"; \n        if (brand === null)\n            throw new Error(\"The parameter 'brand' cannot be null.\");\n        else if (brand !== undefined)\n            url_ += \"brand=\" + encodeURIComponent(\"\" + brand) + \"&\"; \n        if (category === null)\n            throw new Error(\"The parameter 'category' cannot be null.\");\n        else if (category !== undefined)\n            url_ += \"category=\" + encodeURIComponent(\"\" + category) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindModels(_response);\n        });\n    }\n\n    protected processFindModels(response: Response): Promise<FindModelsResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindModelsResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindModelsResult>(<any>null);\n    }\n\n    /**\n     * Create model\n     * @param body (optional) \n     * @return successful operation\n     */\n    createModel(body: any | undefined): Promise<Model> {\n        let url_ = this.baseUrl + \"/models\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateModel(_response);\n        });\n    }\n\n    protected processCreateModel(response: Response): Promise<Model> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Model>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Model>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Model>(<any>null);\n    }\n\n    /**\n     * Find model by id\n     * @param modelId modelId\n     * @return successful operation\n     */\n    findModelById(modelId: string): Promise<Model> {\n        let url_ = this.baseUrl + \"/models/{modelId}\";\n        if (modelId === undefined || modelId === null)\n            throw new Error(\"The parameter 'modelId' must be defined.\");\n        url_ = url_.replace(\"{modelId}\", encodeURIComponent(\"\" + modelId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindModelById(_response);\n        });\n    }\n\n    protected processFindModelById(response: Response): Promise<Model> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Model>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Model>(<any>null);\n    }\n\n    /**\n     * Update model\n     * @param modelId modelId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateModel(modelId: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/models/{modelId}\";\n        if (modelId === undefined || modelId === null)\n            throw new Error(\"The parameter 'modelId' must be defined.\");\n        url_ = url_.replace(\"{modelId}\", encodeURIComponent(\"\" + modelId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateModel(_response);\n        });\n    }\n\n    protected processUpdateModel(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find provinces\n     * @return successful operation\n     */\n    findProvinces(): Promise<FindProvincesResult> {\n        let url_ = this.baseUrl + \"/provinces\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindProvinces(_response);\n        });\n    }\n\n    protected processFindProvinces(response: Response): Promise<FindProvincesResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <FindProvincesResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<FindProvincesResult>(<any>null);\n    }\n\n    /**\n     * Create province\n     * @param body (optional) \n     * @return successful operation\n     */\n    createProvince(body: any | undefined): Promise<Province> {\n        let url_ = this.baseUrl + \"/provinces\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processCreateProvince(_response);\n        });\n    }\n\n    protected processCreateProvince(response: Response): Promise<Province> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Province>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : <Province>JSON.parse(_responseText, this.jsonParseReviver);\n            return result201;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Province>(<any>null);\n    }\n\n    /**\n     * Find province by id\n     * @param provinceId provinceId\n     * @return successful operation\n     */\n    findProvinceById(provinceId: string): Promise<Province> {\n        let url_ = this.baseUrl + \"/provinces/{provinceId}\";\n        if (provinceId === undefined || provinceId === null)\n            throw new Error(\"The parameter 'provinceId' must be defined.\");\n        url_ = url_.replace(\"{provinceId}\", encodeURIComponent(\"\" + provinceId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindProvinceById(_response);\n        });\n    }\n\n    protected processFindProvinceById(response: Response): Promise<Province> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <Province>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<Province>(<any>null);\n    }\n\n    /**\n     * Update province\n     * @param province provinceId\n     * @param body (optional) \n     * @return successful operation\n     */\n    updateProvince(province: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/provinces/{provinceId}\";\n        if (province === undefined || province === null)\n            throw new Error(\"The parameter 'province' must be defined.\");\n        url_ = url_.replace(\"{province}\", encodeURIComponent(\"\" + province)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processUpdateProvince(_response);\n        });\n    }\n\n    protected processUpdateProvince(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Search by elasticsearch\n     * @param keyword (optional) search keyword\n     * @param state (optional) product state (old/new)\n     * @param priceType (optional) price type (fixed/negociate)\n     * @param minPrice (optional) min price\n     * @param maxPrice (optional) max price\n     * @param weightRange (optional) weight range\n     * @param otherNewsType (optional) news type (sell/buy/...)\n     * @param newsType (optional) news type (sell/buy/...)\n     * @param categoryId (optional) categoryID\n     * @param owner (optional) news owner id\n     * @param shop (optional) shop id\n     * @param location (optional) location (only by city)\n     * @param type (optional) product type (may ui/may xuc/may dao)\n     * @param brand (optional) product's brand\n     * @param model (optional) product model\n     * @param first number of records returned\n     * @param sortBy sort field\n     * @param before (optional) before token\n     * @param after (optional) after token\n     * @return successful operation\n     */\n    searchElasticsearch(keyword: string | undefined, state: string | undefined, priceType: string | undefined, minPrice: number | undefined, maxPrice: number | undefined, weightRange: string | undefined, otherNewsType: string | undefined, newsType: string | undefined, categoryId: string | undefined, owner: string | undefined, shop: string | undefined, location: string | undefined, type: string | undefined, brand: string | undefined, model: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<ElasticSearchResult> {\n        let url_ = this.baseUrl + \"/search?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\"; \n        if (state === null)\n            throw new Error(\"The parameter 'state' cannot be null.\");\n        else if (state !== undefined)\n            url_ += \"state=\" + encodeURIComponent(\"\" + state) + \"&\"; \n        if (priceType === null)\n            throw new Error(\"The parameter 'priceType' cannot be null.\");\n        else if (priceType !== undefined)\n            url_ += \"priceType=\" + encodeURIComponent(\"\" + priceType) + \"&\"; \n        if (minPrice === null)\n            throw new Error(\"The parameter 'minPrice' cannot be null.\");\n        else if (minPrice !== undefined)\n            url_ += \"minPrice=\" + encodeURIComponent(\"\" + minPrice) + \"&\"; \n        if (maxPrice === null)\n            throw new Error(\"The parameter 'maxPrice' cannot be null.\");\n        else if (maxPrice !== undefined)\n            url_ += \"maxPrice=\" + encodeURIComponent(\"\" + maxPrice) + \"&\"; \n        if (weightRange === null)\n            throw new Error(\"The parameter 'weightRange' cannot be null.\");\n        else if (weightRange !== undefined)\n            url_ += \"weightRange=\" + encodeURIComponent(\"\" + weightRange) + \"&\"; \n        if (otherNewsType === null)\n            throw new Error(\"The parameter 'otherNewsType' cannot be null.\");\n        else if (otherNewsType !== undefined)\n            url_ += \"otherNewsType=\" + encodeURIComponent(\"\" + otherNewsType) + \"&\"; \n        if (newsType === null)\n            throw new Error(\"The parameter 'newsType' cannot be null.\");\n        else if (newsType !== undefined)\n            url_ += \"newsType=\" + encodeURIComponent(\"\" + newsType) + \"&\"; \n        if (categoryId === null)\n            throw new Error(\"The parameter 'categoryId' cannot be null.\");\n        else if (categoryId !== undefined)\n            url_ += \"categoryId=\" + encodeURIComponent(\"\" + categoryId) + \"&\"; \n        if (owner === null)\n            throw new Error(\"The parameter 'owner' cannot be null.\");\n        else if (owner !== undefined)\n            url_ += \"owner=\" + encodeURIComponent(\"\" + owner) + \"&\"; \n        if (shop === null)\n            throw new Error(\"The parameter 'shop' cannot be null.\");\n        else if (shop !== undefined)\n            url_ += \"shop=\" + encodeURIComponent(\"\" + shop) + \"&\"; \n        if (location === null)\n            throw new Error(\"The parameter 'location' cannot be null.\");\n        else if (location !== undefined)\n            url_ += \"location=\" + encodeURIComponent(\"\" + location) + \"&\"; \n        if (type === null)\n            throw new Error(\"The parameter 'type' cannot be null.\");\n        else if (type !== undefined)\n            url_ += \"type=\" + encodeURIComponent(\"\" + type) + \"&\"; \n        if (brand === null)\n            throw new Error(\"The parameter 'brand' cannot be null.\");\n        else if (brand !== undefined)\n            url_ += \"brand=\" + encodeURIComponent(\"\" + brand) + \"&\"; \n        if (model === null)\n            throw new Error(\"The parameter 'model' cannot be null.\");\n        else if (model !== undefined)\n            url_ += \"model=\" + encodeURIComponent(\"\" + model) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processSearchElasticsearch(_response);\n        });\n    }\n\n    protected processSearchElasticsearch(response: Response): Promise<ElasticSearchResult> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <ElasticSearchResult>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<ElasticSearchResult>(<any>null);\n    }\n\n    /**\n     * Follow\n     * @param id newsId\n     * @param body (optional) \n     * @return successful operation\n     */\n    follow(id: string, body: any | undefined): Promise<void> {\n        let url_ = this.baseUrl + \"/follows/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ = <RequestInit>{\n            body: content_,\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\", \n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFollow(_response);\n        });\n    }\n\n    protected processFollow(response: Response): Promise<void> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 201) {\n            return response.text().then((_responseText) => {\n            return;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<void>(<any>null);\n    }\n\n    /**\n     * Find follow by user/news\n     * @param id id\n     * @param type type\n     * @param newsType (optional) type\n     * @param first first\n     * @param sortBy sortBy\n     * @param before (optional) before\n     * @param after (optional) after\n     * @return successful operation\n     */\n    findFollow(id: string, type: string, newsType: string | undefined, first: number, sortBy: string, before: string | undefined, after: string | undefined): Promise<any> {\n        let url_ = this.baseUrl + \"/follows?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined and cannot be null.\");\n        else\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\"; \n        if (type === undefined || type === null)\n            throw new Error(\"The parameter 'type' must be defined and cannot be null.\");\n        else\n            url_ += \"type=\" + encodeURIComponent(\"\" + type) + \"&\"; \n        if (newsType === null)\n            throw new Error(\"The parameter 'newsType' cannot be null.\");\n        else if (newsType !== undefined)\n            url_ += \"newsType=\" + encodeURIComponent(\"\" + newsType) + \"&\"; \n        if (first === undefined || first === null)\n            throw new Error(\"The parameter 'first' must be defined and cannot be null.\");\n        else\n            url_ += \"first=\" + encodeURIComponent(\"\" + first) + \"&\"; \n        if (sortBy === undefined || sortBy === null)\n            throw new Error(\"The parameter 'sortBy' must be defined and cannot be null.\");\n        else\n            url_ += \"sortBy=\" + encodeURIComponent(\"\" + sortBy) + \"&\"; \n        if (before === null)\n            throw new Error(\"The parameter 'before' cannot be null.\");\n        else if (before !== undefined)\n            url_ += \"before=\" + encodeURIComponent(\"\" + before) + \"&\"; \n        if (after === null)\n            throw new Error(\"The parameter 'after' cannot be null.\");\n        else if (after !== undefined)\n            url_ += \"after=\" + encodeURIComponent(\"\" + after) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ = <RequestInit>{\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        };\n\n        return this.http.fetch(url_, options_).then((_response: Response) => {\n            return this.processFindFollow(_response);\n        });\n    }\n\n    protected processFindFollow(response: Response): Promise<any> {\n        const status = response.status;\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\n        if (status === 200) {\n            return response.text().then((_responseText) => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : <any>JSON.parse(_responseText, this.jsonParseReviver);\n            return result200;\n            });\n        } else if (status === 400) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 401) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 500) {\n            return response.text().then((_responseText) => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return response.text().then((_responseText) => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Promise.resolve<any>(<any>null);\n    }\n}\n\nexport interface GetAllRolesResult {\n    roles: Role[];\n}\n\nexport interface CheckPhoneNoExistResult {\n    phoneNoExist: boolean;\n}\n\nexport interface CheckRoleNameExistResult {\n    roleNameExist: boolean;\n}\n\nexport interface RegisterUserPayload {\n    idToken: string;\n}\n\nexport interface FindRolesResult {\n    data: Role[];\n    before: any;\n    after: any;\n}\n\nexport interface ActivateRolePayload {\n    operation: ActivateRolePayloadOperation;\n}\n\nexport interface DeactivateRolePayload {\n    operation: DeactivateRolePayloadOperation;\n}\n\nexport interface UpdateRolePayload {\n    operation: UpdateRolePayloadOperation;\n    payload: Payload;\n}\n\nexport interface Role {\n    _id: string;\n    name: string;\n    description: string;\n    permissions: string[];\n}\n\nexport interface CreateRolePayload {\n    name: string;\n    description: string;\n    permissions: string[];\n}\n\nexport interface FindUserResult {\n    data: User[];\n    before: any;\n    after: any;\n    roles: any[];\n    completeSignUp: boolean;\n    isActive: boolean;\n    isDeleted: boolean;\n    lastModifiedAt: any;\n    _id: string;\n    permissions: any[];\n    email: string;\n    createdBy: string;\n    createdAt: any;\n    followBy: any[];\n}\n\nexport interface FacebookLogin {\n    uid: string;\n    email: string;\n    provider: FacebookLoginProvider;\n}\n\nexport interface GoogleLogin {\n    uid: string;\n    email: string;\n    provider: GoogleLoginProvider;\n}\n\nexport interface PhoneLogin {\n    phoneNo: string;\n    provider: PhoneLoginProvider;\n}\n\nexport interface EmailLogin {\n    email: string;\n    provider: EmailLoginProvider;\n}\n\nexport interface User {\n    _id: string;\n    email: string;\n    familyName: string;\n    givenName: string;\n    fullName: string;\n    phoneNo: string;\n    address: string;\n    description: string;\n    avatarUrl: string;\n    province: string;\n    dob: number;\n    gender: string;\n    loginDetail: any;\n    roles: string[];\n    completeSignUp: boolean;\n    followBy: any[];\n    isActive: boolean;\n    createdAt: number;\n    createdBy: number;\n    counterFollow: number;\n    isFollowing: boolean;\n}\n\nexport interface CheckEmailExistResult {\n    emailExist: boolean;\n}\n\nexport interface UpdateUserPayload {\n    operation: UpdateUserPayloadOperation;\n    payload: Payload2;\n}\n\nexport interface UpdateProfilePayload {\n    operation: UpdateProfilePayloadOperation;\n    payload: Payload3;\n}\n\nexport interface ChangePasswordPayload {\n    newPassword: string;\n}\n\nexport interface ActivateUserPayload {\n    operation: ActivateUserPayloadOperation;\n}\n\nexport interface DeactivateUserPayload {\n    operation: DeactivateUserPayloadOperation;\n}\n\nexport interface UpdateAvatarPayload {\n    operation: UpdateAvatarPayloadOperation;\n    data: Data;\n}\n\nexport interface CreateUserPayload {\n    email: string;\n    password: string;\n    roles: string[];\n    familyName: string;\n    givenName: string;\n}\n\nexport interface NewsStatisticsResult {\n    daysOfWeek: DaysOfWeek[];\n    hoursOfDay: HoursOfDay[];\n    brands: Brand[];\n    categories: Category[];\n    provinces: Province[];\n}\n\nexport interface UpdateAdsensePayload {\n    operation: UpdateAdsensePayloadOperation;\n    payload: Payload4;\n}\n\nexport interface CreateAdsensePayload {\n    name: string;\n    imageUrl: string;\n    hyperlink: string;\n    position: number;\n}\n\nexport interface GetAdsenseResult {\n    data: Adsense[];\n}\n\nexport interface Adsense {\n    _id: string;\n    name: string;\n    imageUrl: string;\n    hyperlink: string;\n    position: number;\n    createdAt: number;\n}\n\nexport interface UpdateFeatureBrandPayload {\n    operation: UpdateFeatureBrandPayloadOperation;\n    payload: Payload5;\n}\n\nexport interface GetFeatureBrandsResult {\n    data: FeatureBrand[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateFeatureBrandPayload {\n    brand: string;\n    logoImage: string;\n    hyperlink: string;\n    order: number;\n}\n\nexport interface FeatureBrand {\n    _id: string;\n    brand: any;\n    logoImage: string;\n    hyperlink: string;\n    order: number;\n    createdAt: number;\n}\n\nexport interface CreateRentalPeriodPayload {\n    min: number;\n    max: number;\n}\n\nexport interface UpdateRentalPeriodPayload {\n    operation: UpdateRentalPeriodPayloadOperation;\n    payload: Payload6;\n}\n\nexport interface UpdateWeightRangePayload {\n    operation: UpdateWeightRangePayloadOperation;\n    payload: Payload7;\n}\n\nexport interface CreateWeightRangePayload {\n    min: number;\n    max: number;\n}\n\nexport interface RentalPeriod {\n    _id: string;\n    min: number;\n    max: number;\n    createdAt: number;\n}\n\nexport interface GetAllRentalPeriodsResult {\n    data: RentalPeriod[];\n}\n\nexport interface WeightRange {\n    _id: string;\n    min: number;\n    max: number;\n    createdAt: number;\n}\n\nexport interface GetAllWeightRangesResult {\n    data: WeightRange[];\n}\n\nexport interface CommonKeyword {\n    keyword: string;\n    count: number;\n    createdAt: number;\n}\n\nexport interface GetCommonKeywordsResult {\n    data: CommonKeyword[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateRecentViewedPayload {\n    news: string;\n}\n\nexport interface RecentViewedItem {\n    _id: string;\n    uuid: string;\n    user: string;\n    news: any;\n    createdAt: number;\n    lastModifiedAt: number;\n}\n\nexport interface GetRecentViewedResult {\n    data: RecentViewedItem[];\n    before: string;\n    after: string;\n}\n\nexport interface SearchNewsMostFollowResult {\n    data: SearchNewsMostFollowItemResult[];\n    before: string;\n    after: string;\n}\n\nexport interface ReadNotificationPayload {\n    operation: ReadNotificationPayloadOperation;\n    payload: Payload8;\n}\n\nexport interface ReadAllNotificationsPayload {\n    operation: ReadAllNotificationsPayloadOperation;\n}\n\nexport interface CountUnreadNotificationsResult {\n    unreadNotifications: number;\n}\n\nexport interface Notification {\n    _id: string;\n    owner: any;\n    news: any;\n    state: NotificationState;\n    type: NotificationType;\n    createdAt: number;\n}\n\nexport interface FindNotificationsResult {\n    data: Notification[];\n    before: string;\n    after: string;\n}\n\nexport interface SearchNewsMostFollowItemResult {\n    _id: string;\n    imageUrls: string[];\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    isFollowing: boolean;\n    title: string;\n    state: string;\n    newsType: string;\n    counterFollow: number;\n    counterView: number;\n}\n\nexport interface FindReportsResult {\n    data: Report[];\n    before: string;\n    after: string;\n}\n\nexport interface UpdateReportPayload {\n    operation: UpdateReportPayloadOperation;\n    payload: Payload9;\n}\n\nexport interface Report {\n    _id: any;\n    news: any;\n    reports: Reports[];\n    state: ReportState;\n    resolvedResult: ReportResolvedResult;\n    resolvedBy: any;\n    resolvedAt: number;\n}\n\nexport interface CreateReportPayload {\n    news: string;\n    reason: CreateReportPayloadReason;\n    description: string;\n    email: string;\n    phoneNo: string;\n}\n\nexport interface UpdateIntroImagesShopPayload {\n    operation: UpdateIntroImagesShopPayloadOperation;\n    payload: Payload10;\n}\n\nexport interface UpdateLogoImageShopPayload {\n    operation: UpdateLogoImageShopPayloadOperation;\n    payload: Payload11;\n}\n\nexport interface DeactivateShopPayload {\n    operation: DeactivateShopPayloadOperation;\n}\n\nexport interface ActivateShopPayload {\n    operation: ActivateShopPayloadOperation;\n}\n\nexport interface UpdateShopPayload {\n    operation: UpdateShopPayloadOperation;\n    payload: Payload12;\n}\n\nexport interface CreateShopPayload {\n    owner: string;\n    domain: string;\n    name: string;\n    email: string;\n    address: string;\n    geocode: Geocode;\n    description: string;\n    phone: string;\n    introImages: string[];\n    logoImage: string;\n    expiryDate: number;\n}\n\nexport interface FindShopsResult {\n    data: Shop[];\n    before: string;\n    after: string;\n}\n\nexport interface Shop {\n    _id: string;\n    owner: any;\n    domain: string;\n    name: string;\n    address: string;\n    geocode: Geocode2;\n    description: string;\n    followBy: any[];\n    isFollowing: boolean;\n    phone: string;\n    email: string;\n    introImages: string[];\n    logoImage: string;\n}\n\nexport interface ElasticSearchResult {\n    data: ElasticSearchItemResult[];\n    before: string;\n    after: string;\n}\n\nexport interface ElasticSearchItemResult {\n    title: string;\n    state: string;\n    description: string;\n    imageUrls: string[];\n    price: number;\n    priceType: string;\n    newsType: string;\n    owner: string;\n    location: Location;\n    status: string;\n    usedHours: number;\n    serialNo: number;\n    categoryId: CategoryId;\n    brand: Brand2;\n    model: Model2;\n    weight: number;\n    year: number;\n    followBy: string[];\n    isDeleted: boolean;\n    createdBy: number;\n    createdAt: number;\n    lastModifiedAt: number;\n    elasticsearchID: string;\n    elasticsearchTitle: string;\n    isFollowing: boolean;\n    _id: string;\n}\n\nexport interface News {\n    _id: string;\n    title: string;\n    state: string;\n    description: string;\n    imageUrls: string[];\n    price: number;\n    priceType: string;\n    newsType: string;\n    owner: any;\n    shop: any;\n    location: any;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: any;\n    type: any;\n    brand: any;\n    model: any;\n    weight: number;\n    year: number;\n    weightRange: any;\n    rentalPeriod: any;\n    followBy: any[];\n    isFollowing: boolean;\n    createdAt: number;\n    counterFollow: number;\n    counterView: number;\n}\n\nexport interface FindNewsDetail {\n    _id: string;\n    title: string;\n    state: string;\n    description: string;\n    imageUrls: string[];\n    price: number;\n    priceType: string;\n    newsType: string;\n    owner: any;\n    shop: any;\n    location: any;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: any;\n    type: any;\n    brand: any;\n    model: any;\n    weight: number;\n    year: number;\n    weightRange: any;\n    rentalPeriod: any;\n    followBy: any[];\n    isFollowing: boolean;\n    createdAt: number;\n    counterView: number;\n    counterFollow: number;\n}\n\nexport interface CreateNewsPayload {\n    title: string;\n    state: string;\n    newsType: string;\n    priceType: string;\n    location: string;\n    owner: string;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: string;\n    type: string;\n    brand: string;\n    model: string;\n    weight: number;\n    year: number;\n}\n\nexport interface UpdateNewsPayload {\n    operation: string;\n    data: Data2;\n}\n\nexport interface FindNewsResult {\n    data: News[];\n    before: string;\n    after: string;\n}\n\nexport interface FindNewsResultWithFollow {\n    data: FindNewsDetail[];\n    before: string;\n    after: string;\n}\n\nexport interface Brand {\n    _id: string;\n    slug: string;\n    name: string;\n    logoImage: string;\n    totalNews: number;\n    brandCategories: Category[];\n    brandModels: Model[];\n    createdAt: number;\n}\n\nexport interface FindBrandsResult {\n    data: Brand[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateBrandPayload {\n    name: string;\n    logoImage: string;\n}\n\nexport interface UpdateBrandPayload {\n    operation: UpdateBrandPayloadOperation;\n    payload: any;\n}\n\nexport interface Category {\n    _id: string;\n    slug: string;\n    name: string;\n    imageUrl: string;\n    totalNews: number;\n    categoryBrands: Brand[];\n    categoryModels: Model[];\n    createdAt: number;\n}\n\nexport interface FindCategoriesResult {\n    data: Category[];\n}\n\nexport interface CreateCategoryPayload {\n    name: string;\n    imageUrl: string;\n}\n\nexport interface UpdateCategoryPayload {\n    operation: UpdateCategoryPayloadOperation;\n    payload: Payload13;\n}\n\nexport interface Model {\n    _id: string;\n    slug: string;\n    name: string;\n    brand: any;\n    category: any;\n    totalNews: number;\n    createdAt: number;\n}\n\nexport interface FindModelsResult {\n    data: Model[];\n    before: string;\n    after: string;\n}\n\nexport interface CreateModelPayload {\n    name: string;\n    slug: string;\n    brand: string;\n    model: string;\n}\n\nexport interface UpdateModelPayload {\n    _id: string;\n    name: string;\n    slug: string;\n    brand: string;\n    model: string;\n}\n\nexport interface Province {\n    _id: string;\n    slug: string;\n    name: string;\n    totalNews: number;\n}\n\nexport interface FindProvincesResult {\n    data: Province[];\n}\n\nexport interface CreateProvincePayload {\n    name: string;\n    slug: string;\n}\n\nexport interface UpdateProvincePayload {\n    _id: string;\n    name: string;\n    slug: string;\n}\n\nexport interface FollowPayload {\n    operation: string;\n    payload: Payload14;\n}\n\nexport interface FindUserFollowResult {\n    data: FindUserResult[];\n}\n\nexport enum State {\n    PENDING = \"PENDING\", \n    RESOLVED = \"RESOLVED\", \n}\n\nexport enum Reason {\n    WRONG_INFO = \"WRONG_INFO\", \n    SOLD = \"SOLD\", \n    VIOLATE = \"VIOLATE\", \n}\n\nexport enum ActivateRolePayloadOperation {\n    Activate = \"activate\", \n}\n\nexport enum DeactivateRolePayloadOperation {\n    Deactivate = \"deactivate\", \n}\n\nexport enum UpdateRolePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload {\n    name: string;\n    description: string;\n    permissions: string[];\n}\n\nexport enum FacebookLoginProvider {\n    Facebook = \"facebook\", \n}\n\nexport enum GoogleLoginProvider {\n    Google = \"google\", \n}\n\nexport enum PhoneLoginProvider {\n    Phone = \"phone\", \n}\n\nexport enum EmailLoginProvider {\n    Email = \"email\", \n}\n\nexport enum UpdateUserPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload2 {\n    roles: string[];\n    familyName: string;\n    givenName: string;\n    email: string;\n}\n\nexport enum UpdateProfilePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload3 {\n    familyName: string;\n    givenName: string;\n    phoneNo: string;\n    email: string;\n    address: string;\n    description: string;\n}\n\nexport enum ActivateUserPayloadOperation {\n    Activate = \"activate\", \n}\n\nexport enum DeactivateUserPayloadOperation {\n    Deactivate = \"deactivate\", \n}\n\nexport enum UpdateAvatarPayloadOperation {\n    UpdateAvatar = \"updateAvatar\", \n}\n\nexport interface Data {\n    avatarUrl: string;\n}\n\nexport interface DaysOfWeek {\n    _id: number;\n    totalNews: number;\n}\n\nexport interface HoursOfDay {\n    _id: number;\n    totalNews: number;\n}\n\nexport enum UpdateAdsensePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload4 {\n    name: string;\n    imageUrl: string;\n    hyperlink: string;\n    position: number;\n}\n\nexport enum UpdateFeatureBrandPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload5 {\n    brand: string;\n    logoImage: string;\n    hyperlink: string;\n    order: number;\n}\n\nexport enum UpdateRentalPeriodPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload6 {\n    min: number;\n    max: number;\n}\n\nexport enum UpdateWeightRangePayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload7 {\n    min: number;\n    max: number;\n}\n\nexport enum ReadNotificationPayloadOperation {\n    ReadNotification = \"readNotification\", \n}\n\nexport interface Payload8 {\n    notificationId: string;\n}\n\nexport enum ReadAllNotificationsPayloadOperation {\n    ReadAllNotifications = \"readAllNotifications\", \n}\n\nexport enum NotificationState {\n    READ = \"READ\", \n    UNREAD = \"UNREAD\", \n}\n\nexport enum NotificationType {\n    FOLLOW_USER = \"FOLLOW_USER\", \n    FOLLOW_SHOP = \"FOLLOW_SHOP\", \n    CREATE_NEWS = \"CREATE_NEWS\", \n}\n\nexport enum UpdateReportPayloadOperation {\n    ResolveReport = \"resolveReport\", \n}\n\nexport interface Payload9 {\n    resolvedResult: Payload9ResolvedResult;\n}\n\nexport interface Reports {\n    reason: ReportsReason;\n    description: string;\n    email: string;\n    phoneNo: string;\n    createdAt: number;\n}\n\nexport enum ReportState {\n    PENDING = \"PENDING\", \n    RESOLVED = \"RESOLVED\", \n}\n\nexport enum ReportResolvedResult {\n    SKIP = \"SKIP\", \n    DELETE = \"DELETE\", \n}\n\nexport enum CreateReportPayloadReason {\n    WRONG_INFO = \"WRONG_INFO\", \n    SOLD = \"SOLD\", \n    VIOLATE = \"VIOLATE\", \n}\n\nexport enum UpdateIntroImagesShopPayloadOperation {\n    UpdateCover = \"updateCover\", \n}\n\nexport interface Payload10 {\n    introImages: string[];\n}\n\nexport enum UpdateLogoImageShopPayloadOperation {\n    UpdateAvatar = \"updateAvatar\", \n}\n\nexport interface Payload11 {\n    logoImage: string;\n}\n\nexport enum DeactivateShopPayloadOperation {\n    Deactivate = \"deactivate\", \n}\n\nexport enum ActivateShopPayloadOperation {\n    Activate = \"activate\", \n}\n\nexport enum UpdateShopPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport interface Payload12 {\n    domain: string;\n    name: string;\n    address: string;\n    geocode: Geocode3;\n    phone: string;\n    email: string;\n    expiryDate: number;\n}\n\nexport interface Geocode {\n    lng: number;\n    lat: number;\n}\n\nexport interface Geocode2 {\n    lng: number;\n    lat: number;\n}\n\nexport interface Location {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n}\n\nexport interface CategoryId {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n}\n\nexport interface Brand2 {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n    totalNews: number;\n}\n\nexport interface Model2 {\n    isDeleted: boolean;\n    lastModifiedAt: number;\n    _id: string;\n    name: string;\n    slug: string;\n    brand: string;\n    category: string;\n}\n\nexport interface Data2 {\n    title: string;\n    state: string;\n    newsType: string;\n    priceType: string;\n    location: string;\n    owner: string;\n    status: string;\n    usedHours: number;\n    serialNo: string;\n    categoryId: string;\n    type: string;\n    brand: string;\n    model: string;\n    weight: number;\n    year: number;\n}\n\nexport enum UpdateBrandPayloadOperation {\n    UpdateDetail = \"updateDetail\", \n}\n\nexport enum UpdateCategoryPayloadOperation {\n    UdpateDetail = \"udpateDetail\", \n}\n\nexport interface Payload13 {\n    name: string;\n    imageUrl: string;\n}\n\nexport interface Payload14 {\n    userId: string;\n    newsId: string;\n}\n\nexport enum Payload9ResolvedResult {\n    SKIP = \"SKIP\", \n    DELETE = \"DELETE\", \n}\n\nexport enum ReportsReason {\n    WRONG_INFO = \"WRONG_INFO\", \n    SOLD = \"SOLD\", \n    VIOLATE = \"VIOLATE\", \n}\n\nexport interface Geocode3 {\n    lng: number;\n    lat: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {\n    if(result !== null && result !== undefined)\n        throw result;\n    else\n        throw new SwaggerException(message, status, response, headers, null);\n}"],"file":"service-proxies.js"}