{"version":3,"sources":["../../../src/client/pages/users.tsx"],"names":["Users","props","updateFilters","newsResult","profileData","searchKeyword","topBrands","profileState","profileReducers","followState","followReducers","context","userId","asPath","split","length","req","idToken","jsCookie","get","serviceProxies","cookies","token","Promise","all","searchElasticsearch","undefined","findPublicProfile","findTopBrands","data","React","Component","mapState","rootState","profileModel","searchModel","filters","keyword","followModel","mapDispatch","rootReducer","initStore"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport UserNewsScreen from '../modules/machine-news/screens/UserNewsScreen/UserNewsScreen';\nimport { Brand, User, ElasticSearchResult, CommonKeyword } from '../services/service-proxies';\nimport { withRematch, initStore, ProfileState, ProfileEffects, ProfileReducers, FollowEffects, FollowReducers, FollowState } from '../store';\nimport { getServiceProxy } from '../services';\nimport { NextContext } from 'next';\nimport * as jsCookie from 'js-cookie';\n\ninterface Props {\n  newsResult: ElasticSearchResult;\n  profileData: Partial<User>;\n  topBrands: Brand[];\n  searchKeyword: string;\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  followState: FollowState;\n  followReducers: FollowReducers & FollowEffects;\n  updateFilters: (payload: { [key: string]: string | number }) => void;\n}\ninterface State { }\nclass Users extends React.Component<Props, State> {\n  static async getInitialProps(context: NextContext) {\n    let profileData: Partial<User>;\n    let newsResult: ElasticSearchResult;\n    let topBrands: { data: Brand[] };\n\n    const userId = context.asPath.split('/')[context.asPath.split('/').length - 1];\n    let serviceProxies: any;\n    if (!context.req) {\n      const idToken = jsCookie.get('token');\n      serviceProxies = getServiceProxy(idToken);\n    }\n    else {\n      serviceProxies = getServiceProxy((context.req as any).cookies.token);\n    }\n    if (!context.req) {\n      [newsResult, profileData, topBrands] = await Promise.all([\n        serviceProxies.searchElasticsearch(\n          undefined,\n          'PUBLIC',\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          'SELL',\n          undefined,\n          userId,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          12,\n          'elasticsearchCreatedAt|desc',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findPublicProfile(userId),\n        serviceProxies.findTopBrands(),\n      ]);\n    } else {\n      [newsResult, profileData, topBrands] = await Promise.all([\n        serviceProxies.searchElasticsearch(\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          'SELL',\n          undefined,\n          userId,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          12,\n          'elasticsearchCreatedAt|desc',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findPublicProfile(userId),\n        serviceProxies.findTopBrands(),\n      ]);\n    }\n\n    return {\n      profileData,\n      newsResult,\n      topBrands: topBrands.data,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <UserNewsScreen\n          updateFilters={this.props.updateFilters}\n          newsResult={this.props.newsResult}\n          profileData={this.props.profileData}\n          searchKeyword={this.props.searchKeyword}\n          topBrands={this.props.topBrands}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n          followState={this.props.followState}\n          followReducers={this.props.followReducers}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n    searchKeyword: rootState.searchModel.filters.keyword,\n    followState: rootState.followModel,\n  };\n};\n\nconst mapDispatch = (rootReducer: any) => {\n  return {\n    profileReducers: rootReducer.profileModel,\n    followReducers: rootReducer.followModel,\n    updateFilters: rootReducer.searchModel.updateFilters,\n  };\n};\n\nexport default withRematch(initStore, mapState, mapDispatch)(Users);\n"],"file":"users.js"}