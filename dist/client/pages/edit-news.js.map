{"version":3,"sources":["../../../src/client/pages/edit-news.tsx"],"names":["EditNews","props","data","weightRanges","rentalPeriods","commonKeywords","updateFilters","searchKeyword","provinces","brands","categories","profileState","profileReducers","context","authUser","store","getState","profileModel","id","req","res","redirect","Router","push","serviceProxy","Promise","all","findNewsById","query","findProvinces","findBrands","undefined","findCategories","getAllWeightRanges","getAllRentalPeriods","React","Component","mapState","rootState","searchModel","filters","keyword","metadataModel","mapDispatch","rootReducer","initStore"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport EditNewsScreen from '../modules/machine-news/screens/EditNewsScreen/EditNewsScreen';\nimport { initStore, withRematch, ProfileState, ProfileReducers, ProfileEffects } from '../store';\nimport { Brand, Category, Model, Province, CommonKeyword, News, WeightRange, RentalPeriod } from '../services/service-proxies';\nimport { getServiceProxy } from '../services';\nimport { NextContext } from 'next';\nimport Router from 'next/router';\n\ninterface Props {\n  data: News;\n  searchKeyword: string;\n  commonKeywords: CommonKeyword[];\n  brands: Brand[];\n  categories: Category[];\n  provinces: Province[];\n  weightRanges: WeightRange[];\n  rentalPeriods: RentalPeriod[];\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  updateFilters: (payload: {[key: string]: string|number}) => void;\n}\ninterface State {}\nclass EditNews extends React.Component<Props, State> {\n  static async getInitialProps(context: NextContext) {\n    const authUser = (context as any).store.getState().profileModel.authUser;\n    if (!authUser || !authUser.id) {\n      context.req ? (context.res as any).redirect('/not-found') : Router.push(`/not-found`);\n    }\n\n    const serviceProxy = getServiceProxy();\n    const [data, provinces, brands, categories, weightRanges, rentalPeriods] = await Promise.all([\n      serviceProxy.findNewsById(context.query.id as any),\n      serviceProxy.findProvinces(),\n      serviceProxy.findBrands(\n        undefined,\n        50,\n        'slug|asc',\n        undefined,\n        undefined,\n      ),\n      serviceProxy.findCategories(),\n      serviceProxy.getAllWeightRanges(),\n      serviceProxy.getAllRentalPeriods(),\n    ]);\n\n    return {\n      data,\n      provinces: provinces.data,\n      brands: brands.data,\n      categories: categories.data,\n      weightRanges: weightRanges.data,\n      rentalPeriods: rentalPeriods.data,\n    };\n  }\n\n  render () {\n    return (\n      <div>\n        <EditNewsScreen\n          data={this.props.data}\n          weightRanges={this.props.weightRanges}\n          rentalPeriods={this.props.rentalPeriods}\n          commonKeywords={this.props.commonKeywords}\n          updateFilters={this.props.updateFilters}\n          searchKeyword={this.props.searchKeyword}\n          provinces={this.props.provinces}\n          brands={this.props.brands}\n          categories={this.props.categories}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n    searchKeyword: rootState.searchModel.filters.keyword,\n    commonKeywords: rootState.metadataModel.commonKeywords,\n  };\n};\n\nconst mapDispatch = (rootReducer: any) => {\n  return {\n    profileReducers: rootReducer.profileModel,\n    updateFilters: rootReducer.searchModel.updateFilters,\n  };\n};\n\nexport default withRematch(initStore, mapState, mapDispatch)(EditNews);\n"],"file":"edit-news.js"}