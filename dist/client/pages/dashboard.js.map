{"version":3,"sources":["../../../src/client/pages/dashboard.tsx"],"names":["Fragment","React","User","props","publicData","currentUserData","pendingData","rejectedData","stoppedData","deletedData","searchKeyword","topBrands","profileState","profileReducers","followState","followReducers","updateFilters","context","req","idToken","jsCookie","get","serviceProxies","findProfile","profileData","Promise","all","findNewsByOwner","_id","undefined","findTopBrands","cookies","token","data","Component","mapState","rootState","profileModel","followModel","searchModel","filters","keyword","mapDispatch","rootReducer","initStore"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport DashboardScreen from '../modules/machine-news/screens/DashboardScreen/DashboardScreen';\nimport { User as UserInterface, Brand, FindNewsResult, FindBrandsResult } from '../services/service-proxies';\nimport { withRematch, initStore, ProfileState, ProfileEffects, ProfileReducers, FollowEffects, FollowReducers, FollowState } from '../store';\nimport { getServiceProxy } from '../services';\nimport * as jsCookie from 'js-cookie';\nimport { NextContext } from 'next';\n\ninterface Props {\n  topBrands: Brand[];\n  searchKeyword: string;\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  followState: FollowState;\n  followReducers: FollowReducers & FollowEffects;\n  publicData: FindNewsResult;\n  pendingData: FindNewsResult;\n  rejectedData: FindNewsResult;\n  stoppedData: FindNewsResult;\n  deletedData: FindNewsResult;\n  currentUserData: Partial<UserInterface>;\n  updateFilters: (payload: { [key: string]: string | number }) => void;\n}\ninterface State { }\nconst Fragment = React.Fragment;\n\nclass User extends React.Component<Props, State> {\n  static async getInitialProps(context: NextContext) {\n    let publicData: FindNewsResult;\n    let pendingData: FindNewsResult;\n    let rejectedData: FindNewsResult;\n    let stoppedData: FindNewsResult;\n    let deletedData: FindNewsResult;\n    let topBrands: FindBrandsResult;\n    let currentUserData: Partial<UserInterface>;\n\n    if (!context.req) {\n      const idToken = jsCookie.get('token');\n      const serviceProxies = getServiceProxy(idToken);\n      const profileData = await serviceProxies.findProfile();\n\n      [currentUserData, publicData, pendingData, rejectedData, stoppedData, deletedData, topBrands] = await Promise.all([\n        serviceProxies.findProfile(),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'PUBLIC',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'PENDING',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'REJECTED',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'STOPPED',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'DELETED',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findTopBrands(),\n      ]);\n    } else {\n      const serviceProxies = getServiceProxy((context.req as any).cookies.token);\n      const profileData = await serviceProxies.findProfile();\n      [currentUserData, publicData, pendingData, rejectedData, stoppedData, deletedData, topBrands] = await Promise.all([\n        serviceProxies.findProfile(),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'PUBLIC',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'PENDING',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'REJECTED',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'STOPPED',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findNewsByOwner(\n          profileData._id,\n          'DELETED',\n          16,\n          'createdAt',\n          undefined,\n          undefined,\n        ),\n        serviceProxies.findTopBrands(),\n      ]);\n    }\n    return {\n      publicData,\n      pendingData,\n      rejectedData,\n      stoppedData,\n      deletedData,\n      topBrands: topBrands.data,\n      currentUserData,\n    };\n  }\n  render() {\n    return (\n      <Fragment>\n        <DashboardScreen\n          publicData={this.props.publicData}\n          currentUserData={this.props.currentUserData}\n          pendingData={this.props.pendingData}\n          rejectedData={this.props.rejectedData}\n          stoppedData={this.props.stoppedData}\n          deletedData={this.props.deletedData}\n          searchKeyword={this.props.searchKeyword}\n          topBrands={this.props.topBrands}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n          followState={this.props.followState}\n          followReducers={this.props.followReducers}\n          updateFilters={this.props.updateFilters}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n    followState: rootState.followModel,\n    searchKeyword: rootState.searchModel.filters.keyword,\n  };\n};\n\nconst mapDispatch = (rootReducer: any) => {\n  return {\n    profileReducers: rootReducer.profileModel,\n    followReducers: rootReducer.followModel,\n    updateFilters: rootReducer.searchModel.updateFilters,\n  };\n};\n\nexport default withRematch(initStore, mapState, mapDispatch)(User);\n"],"file":"dashboard.js"}