{"version":3,"sources":["../../../src/client/pages/category-detail.tsx"],"names":["CategoryDetail","props","categoryName","categoryDetail","topBrands","searchKeyword","profileState","profileReducers","updateFilters","context","categorySlug","asPath","split","length","serviceProxy","Promise","all","findCategoryDetail","findTopBrands","namespacesRequired","data","React","Component","mapState","rootState","profileModel","searchModel","filters","keyword","commonKeywords","metadataModel","mapDispatch","rootReducer","initStore"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYMA,c;;;;;;;;;;;;;6BAiBM;AACR,aACE,6BAAC,6BAAD;AACE,QAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC,YAD3B;AAEE,QAAA,cAAc,EAAE,KAAKD,KAAL,CAAWE,cAF7B;AAGE,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAHxB;AAIE,QAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI,aAJ5B;AAKE,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWK,YAL3B;AAME,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eAN9B;AAOE,QAAA,aAAa,EAAE,KAAKN,KAAL,CAAWO;AAP5B,QADF;AAWD;;;;;;iDA5B4BC,O;;;;;;;AACrBC,gBAAAA,Y,GAAeD,OAAO,CAACE,MAAR,CAAeC,KAAf,CAAqB,GAArB,EAA0BH,OAAO,CAACE,MAAR,CAAeC,KAAf,CAAqB,GAArB,EAA0BC,MAA1B,GAAmC,CAA7D,C;AACfC,gBAAAA,Y,GAAe,gC;;uBACqBC,OAAO,CAACC,GAAR,CAAY,CACpDF,YAAY,CAACG,kBAAb,CAAgCP,YAAhC,CADoD,EAEpDI,YAAY,CAACI,aAAb,EAFoD,CAAZ,C;;;;;AAAnCf,gBAAAA,c;AAAgBC,gBAAAA,S;iDAKhB;AACLe,kBAAAA,kBAAkB,EAAE,CAAC,QAAD,EAAW,cAAX,CADf;AAELhB,kBAAAA,cAAc,EAAdA,cAFK;AAGLC,kBAAAA,SAAS,EAAEA,SAAS,CAACgB,IAHhB;AAILlB,kBAAAA,YAAY,EAAE,wBAAUQ,YAAV;AAJT,iB;;;;;;;;;;;;;;;;;;;EATkBW,eAAMC,S;;AAgCnC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAoB;AACnC,SAAO;AACLlB,IAAAA,YAAY,EAAEkB,SAAS,CAACC,YADnB;AAELpB,IAAAA,aAAa,EAAEmB,SAAS,CAACE,WAAV,CAAsBC,OAAtB,CAA8BC,OAFxC;AAGLC,IAAAA,cAAc,EAAEL,SAAS,CAACM,aAAV,CAAwBD;AAHnC,GAAP;AAKD,CAND;;AAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAsB;AACxC,SAAO;AACLzB,IAAAA,eAAe,EAAEyB,WAAW,CAACP,YADxB;AAELjB,IAAAA,aAAa,EAAEwB,WAAW,CAACN,WAAZ,CAAwBlB;AAFlC,GAAP;AAID,CALD;;eAMe,wBAAYyB,gBAAZ,EAAuBV,QAAvB,EAAiCQ,WAAjC,EAA8C,0BAAe,iBAAf,EAAkC/B,cAAlC,CAA9C,C","sourcesContent":["import React from 'react';\nimport { withRematch, initStore, ProfileState, ProfileReducers, ProfileEffects } from '../store';\nimport { withNamespaces } from '../i18n';\nimport { NextContext } from 'next';\nimport { Category, Brand } from '../services/service-proxies';\nimport CategoryDetailScreen from '../modules/machine-news/screens/CategoryDetailScreen/CategoryDetailScreen';\nimport { getServiceProxy } from '../services';\nimport startCase from 'lodash/startCase';\n\ninterface Props {\n  categoryName: string;\n  topBrands: Brand[];\n  categoryDetail: Category;\n  searchKeyword: string;\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  updateFilters: (payload: {[key: string]: string|number}) => void;\n}\ninterface State {}\nclass CategoryDetail extends React.Component<Props, State> {\n  static async getInitialProps(context: NextContext) {\n    const categorySlug = context.asPath.split('/')[context.asPath.split('/').length - 1];\n    const serviceProxy = getServiceProxy();\n    const [categoryDetail, topBrands] = await Promise.all([\n      serviceProxy.findCategoryDetail(categorySlug),\n      serviceProxy.findTopBrands(),\n    ]);\n\n    return {\n      namespacesRequired: ['common', 'brand-detail'],\n      categoryDetail,\n      topBrands: topBrands.data,\n      categoryName: startCase(categorySlug),\n    };\n  }\n\n  render () {\n    return (\n      <CategoryDetailScreen\n        categoryName={this.props.categoryName}\n        categoryDetail={this.props.categoryDetail}\n        topBrands={this.props.topBrands}\n        searchKeyword={this.props.searchKeyword}\n        profileState={this.props.profileState}\n        profileReducers={this.props.profileReducers}\n        updateFilters={this.props.updateFilters}\n      />\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n    searchKeyword: rootState.searchModel.filters.keyword,\n    commonKeywords: rootState.metadataModel.commonKeywords,\n  };\n};\n\nconst mapDispatch = (rootReducer: any) => {\n  return {\n    profileReducers: rootReducer.profileModel,\n    updateFilters: rootReducer.searchModel.updateFilters,\n  };\n};\nexport default withRematch(initStore, mapState, mapDispatch)(withNamespaces('category-detail')(CategoryDetail));\n"],"file":"category-detail.js"}