{"version":3,"sources":["../../../src/client/pages/followed-list.tsx"],"names":["FollowList","props","commonKeywords","data","searchKeyword","topBrands","profileState","profileReducers","updateFilters","profileData","context","req","idToken","jsCookie","get","serviceProxies","findProfile","Promise","all","findFollow","_id","undefined","findTopBrands","followNewsResult","cookies","token","React","Component","mapState","rootState","profileModel","followState","followModel","searchModel","filters","keyword","metadataModel","mapDispatch","rootReducer","followReducer","initStore"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBMA,U;;;;;;;;;;;;;6BA8CK;AACP,aACE,0CACE,6BAAC,2BAAD;AACE,QAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,cAD7B;AAEE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAFnB;AAGE,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,aAH5B;AAIE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,SAJxB;AAKE,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWK,YAL3B;AAME,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eAN9B;AAOE,QAAA,aAAa,EAAE,KAAKN,KAAL,CAAWO,aAP5B;AAQE,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ;AAR1B,QADF,CADF;AAcD;;;;;;iDA5D4BC,O;;;;;;;oBAKvBA,OAAO,CAACC,G;;;;;AACNC,gBAAAA,O,GAAUC,QAAQ,CAACC,GAAT,CAAa,OAAb,C;AACVC,gBAAAA,c,GAAiB,+BAAgBH,OAAhB,C;;uBACHG,cAAc,CAACC,WAAf,E;;;AAApBP,gBAAAA,W;;uBAEsCQ,OAAO,CAACC,GAAR,CAAY,CAChDH,cAAc,CAACI,UAAf,CACEV,WAAW,CAACW,GADd,EAEE,MAFF,EAGE,MAHF,EAIE,EAJF,EAKE,KALF,EAMEC,SANF,EAOEA,SAPF,CADgD,EAUhDN,cAAc,CAACO,aAAf,EAVgD,CAAZ,C;;;;;AAArCC,gBAAAA,gB;AAAkBlB,gBAAAA,S;;;;;AAabU,gBAAAA,e,GAAiB,+BAAiBL,OAAO,CAACC,GAAT,CAAqBa,OAArB,CAA6BC,KAA7C,C;;uBACHV,eAAc,CAACC,WAAf,E;;;AAApBP,gBAAAA,W;;uBAEsCQ,OAAO,CAACC,GAAR,CAAY,CAChDH,eAAc,CAACI,UAAf,CACEV,WAAW,CAACW,GADd,EAEE,MAFF,EAGE,MAHF,EAIE,EAJF,EAKE,KALF,EAMEC,SANF,EAOEA,SAPF,CADgD,EAUhDN,eAAc,CAACO,aAAf,EAVgD,CAAZ,C;;;;;AAArCC,gBAAAA,gB;AAAkBlB,gBAAAA,S;;;iDAad;AACLF,kBAAAA,IAAI,EAAEoB,gBAAgB,CAACpB,IADlB;AAELE,kBAAAA,SAAS,EAAEA,SAAS,CAACF,IAFhB;AAGLM,kBAAAA,WAAW,EAAXA;AAHK,iB;;;;;;;;;;;;;;;;;;;EAxCgBiB,eAAMC,S;;AAgE/B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAoB;AACnC,SAAO;AACLvB,IAAAA,YAAY,EAAEuB,SAAS,CAACC,YADnB;AAELC,IAAAA,WAAW,EAAEF,SAAS,CAACG,WAFlB;AAGL5B,IAAAA,aAAa,EAAEyB,SAAS,CAACI,WAAV,CAAsBC,OAAtB,CAA8BC,OAHxC;AAILjC,IAAAA,cAAc,EAAE2B,SAAS,CAACO,aAAV,CAAwBlC;AAJnC,GAAP;AAMD,CAPD;;AASA,IAAMmC,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAsB;AACxC,SAAO;AACL/B,IAAAA,eAAe,EAAE+B,WAAW,CAACR,YADxB;AAELS,IAAAA,aAAa,EAAED,WAAW,CAACN,WAFtB;AAGLxB,IAAAA,aAAa,EAAE8B,WAAW,CAACL,WAAZ,CAAwBzB;AAHlC,GAAP;AAKD,CAND;;eAQe,wBAAYgC,gBAAZ,EAAuBZ,QAAvB,EAAiCS,WAAjC,EAA8CrC,UAA9C,C","sourcesContent":["import React from 'react';\nimport FollowedListScreen from '../modules/machine-news/screens/FollowedListScreen/FollowedListScreen';\nimport { initStore, withRematch, ProfileState, ProfileEffects, ProfileReducers, FollowState, FollowReducers, FollowEffects } from '../store';\nimport { Brand, Model, CommonKeyword } from '../services/service-proxies';\nimport { getServiceProxy } from '../services';\nimport * as jsCookie from 'js-cookie';\nimport { NextContext } from 'next';\n\ninterface Props {\n  commonKeywords: CommonKeyword[];\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  followState: FollowState;\n  followReducer: FollowReducers & FollowEffects;\n  topBrands: Brand[];\n  searchKeyword: string;\n  profileData: any;\n  data: any;\n  updateFilters: (payload: {[key: string]: string|number}) => void;\n}\ninterface State {}\nclass FollowList extends React.Component<Props, State> {\n  static async getInitialProps(context: NextContext) {\n  let followNewsResult: any;\n  let topBrands: any;\n  let profileData: any;\n\n   if (!context.req) {\n    const idToken = jsCookie.get('token');\n    const serviceProxies = getServiceProxy(idToken);\n    profileData = await serviceProxies.findProfile();\n\n    [followNewsResult, topBrands] = await Promise.all([\n      serviceProxies.findFollow(\n        profileData._id,\n        'news',\n        'SELL',\n        16,\n        '_id',\n        undefined,\n        undefined,\n      ),\n      serviceProxies.findTopBrands(),\n    ]);\n  } else {\n    const serviceProxies = getServiceProxy((context.req as any).cookies.token);\n    profileData = await serviceProxies.findProfile();\n\n    [followNewsResult, topBrands] = await Promise.all([\n      serviceProxies.findFollow(\n        profileData._id,\n        'news',\n        'SELL',\n        16,\n        '_id',\n        undefined,\n        undefined,\n      ),\n      serviceProxies.findTopBrands(),\n    ]);\n  }\n  return {\n    data: followNewsResult.data,\n    topBrands: topBrands.data,\n    profileData,\n  };\n}\n  render() {\n    return (\n      <div>\n        <FollowedListScreen\n          commonKeywords={this.props.commonKeywords}\n          data={this.props.data}\n          searchKeyword={this.props.searchKeyword}\n          topBrands={this.props.topBrands}\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n          updateFilters={this.props.updateFilters}\n          profileData={this.props.profileData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    profileState: rootState.profileModel,\n    followState: rootState.followModel,\n    searchKeyword: rootState.searchModel.filters.keyword,\n    commonKeywords: rootState.metadataModel.commonKeywords,\n  };\n};\n\nconst mapDispatch = (rootReducer: any) => {\n  return {\n    profileReducers: rootReducer.profileModel,\n    followReducer: rootReducer.followModel,\n    updateFilters: rootReducer.searchModel.updateFilters,\n  };\n};\n\nexport default withRematch(initStore, mapState, mapDispatch)(FollowList);\n"],"file":"followed-list.js"}