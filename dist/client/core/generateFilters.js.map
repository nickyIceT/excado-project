{"version":3,"sources":["../../../src/client/core/generateFilters.ts"],"names":["generateFilters","query","metadataState","availableFilters","keyword","minPrice","maxPrice","minWeight","weightRange","weightRanges","filter","item","min","Number","_id","state","newsType","category","categories","slug","brand","brands","location","provinces"],"mappings":";;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAaC,aAAb,EAA8C;AAC3E,MAAMC,gBAAqB,GAAG,EAA9B;;AAEA,MAAIF,KAAK,CAACG,OAAV,EAAmB;AACjBD,IAAAA,gBAAgB,CAACC,OAAjB,GAA2BH,KAAK,CAACG,OAAjC;AACD;;AACD,MAAIH,KAAK,CAACI,QAAV,EAAoB;AAClBF,IAAAA,gBAAgB,CAACE,QAAjB,GAA4BJ,KAAK,CAACI,QAAlC;AACD;;AACD,MAAIJ,KAAK,CAACK,QAAV,EAAoB;AAClBH,IAAAA,gBAAgB,CAACG,QAAjB,GAA4BL,KAAK,CAACK,QAAlC;AACD;;AACD,MAAIL,KAAK,CAACM,SAAV,EAAqB;AACnBJ,IAAAA,gBAAgB,CAACK,WAAjB,GAA+BN,aAAa,CAACO,YAAd,CAA2BC,MAA3B,CAAkC,UAACC,IAAD;AAAA,aAAeA,IAAI,CAACC,GAAL,KAAaC,MAAM,CAACZ,KAAK,CAACM,SAAP,CAAlC;AAAA,KAAlC,EAAuF,CAAvF,EAA0FO,GAAzH;AACD;;AACD,MAAIb,KAAK,CAACc,KAAV,EAAiB;AACfZ,IAAAA,gBAAgB,CAACY,KAAjB,GAAyBd,KAAK,CAACc,KAA/B;AACD;;AACD,MAAId,KAAK,CAACe,QAAV,EAAoB;AAClBb,IAAAA,gBAAgB,CAACa,QAAjB,GAA4Bf,KAAK,CAACe,QAAlC;AACD;;AACD,MAAIf,KAAK,CAACgB,QAAV,EAAoB;AAClBd,IAAAA,gBAAgB,CAACc,QAAjB,GAA4Bf,aAAa,CAACgB,UAAd,CAAyBR,MAAzB,CAAgC,UAACC,IAAD;AAAA,aAAeA,IAAI,CAACQ,IAAL,KAAclB,KAAK,CAACgB,QAAnC;AAAA,KAAhC,EAA6E,CAA7E,EAAgFH,GAA5G;AACD;;AACD,MAAIb,KAAK,CAACmB,KAAV,EAAiB;AACfjB,IAAAA,gBAAgB,CAACiB,KAAjB,GAAyBlB,aAAa,CAACmB,MAAd,CAAqBX,MAArB,CAA4B,UAACC,IAAD;AAAA,aAAeA,IAAI,CAACQ,IAAL,KAAclB,KAAK,CAACmB,KAAnC;AAAA,KAA5B,EAAsE,CAAtE,EAAyEN,GAAlG;AACD;;AACD,MAAIb,KAAK,CAACqB,QAAV,EAAoB;AAClBnB,IAAAA,gBAAgB,CAACmB,QAAjB,GAA4BpB,aAAa,CAACqB,SAAd,CAAwBb,MAAxB,CAA+B,UAACC,IAAD;AAAA,aAAeA,IAAI,CAACQ,IAAL,KAAclB,KAAK,CAACqB,QAAnC;AAAA,KAA/B,EAA4E,CAA5E,EAA+ER,GAA3G;AACD;;AAED,SAAOX,gBAAP;AACD,CAhCM","sourcesContent":["import { MetadataState } from '@client/store';\n\nexport const generateFilters = (query: any, metadataState: MetadataState) => {\n  const availableFilters: any = {};\n\n  if (query.keyword) {\n    availableFilters.keyword = query.keyword;\n  }\n  if (query.minPrice) {\n    availableFilters.minPrice = query.minPrice;\n  }\n  if (query.maxPrice) {\n    availableFilters.maxPrice = query.maxPrice;\n  }\n  if (query.minWeight) {\n    availableFilters.weightRange = metadataState.weightRanges.filter((item: any) => item.min === Number(query.minWeight))[0]._id;\n  }\n  if (query.state) {\n    availableFilters.state = query.state;\n  }\n  if (query.newsType) {\n    availableFilters.newsType = query.newsType;\n  }\n  if (query.category) {\n    availableFilters.category = metadataState.categories.filter((item: any) => item.slug === query.category)[0]._id;\n  }\n  if (query.brand) {\n    availableFilters.brand = metadataState.brands.filter((item: any) => item.slug === query.brand)[0]._id;\n  }\n  if (query.location) {\n    availableFilters.location = metadataState.provinces.filter((item: any) => item.slug === query.location)[0]._id;\n  }\n\n  return availableFilters;\n};\n"],"file":"generateFilters.js"}