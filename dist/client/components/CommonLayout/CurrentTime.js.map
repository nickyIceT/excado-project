{"version":3,"sources":["../../../../src/client/components/CommonLayout/CurrentTime.tsx"],"names":["timerID","CurrentTime","props","state","date","Date","setInterval","tick","clearInterval","setState","vietnameseDay","day","getDay","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","timeZone","getTimezoneOffset","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAIA,OAAJ;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAP,KAAb;AAFsB;AAGvB;;;;wCAEmB;AAAA;;AAClBL,MAAAA,OAAO,GAAGM,WAAW,CACnB;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OADmB,EAEnB,KAFmB,CAArB;AAID;;;2CAEsB;AACrBC,MAAAA,aAAa,CAACR,OAAD,CAAb;AACD;;;2BAEM;AACL,WAAKS,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AADM,OAAd;AAGD;;;6BACS;AACR,UAAMK,aAAa,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,SAAhC,EAA2C,SAA3C,EAAsD,SAAtD,EAAiE,UAAjE,CAAtB;AACA,UAAMC,GAAG,GAAGD,aAAa,CAAC,KAAKP,KAAL,CAAWC,IAAX,CAAgBQ,MAAhB,EAAD,CAAzB;AACA,UAAMR,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBS,OAAhB,KAA4B,EAA5B,cAAqC,KAAKV,KAAL,CAAWC,IAAX,CAAgBS,OAAhB,EAArC,IAAmE,KAAKV,KAAL,CAAWC,IAAX,CAAgBS,OAAhB,EAAhF;AACA,UAAMC,KAAK,GAAG,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,QAAhB,KAA6B,CAA7B,GAAiC,EAAjC,cAA0C,KAAKZ,KAAL,CAAWC,IAAX,CAAgBW,QAAhB,KAA6B,CAAvE,IAA6E,KAAKZ,KAAL,CAAWC,IAAX,CAAgBW,QAAhB,KAA6B,CAAxH;AACA,UAAMC,IAAI,GAAG,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,WAAhB,EAAb;AACA,UAAMC,KAAK,GAAG,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,QAAhB,KAA6B,EAA7B,cAAsC,KAAKhB,KAAL,CAAWC,IAAX,CAAgBe,QAAhB,EAAtC,IAAqE,KAAKhB,KAAL,CAAWC,IAAX,CAAgBe,QAAhB,EAAnF;AACA,UAAMC,OAAO,GAAG,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,UAAhB,KAA+B,EAA/B,cAAwC,KAAKlB,KAAL,CAAWC,IAAX,CAAgBiB,UAAhB,EAAxC,IAAyE,KAAKlB,KAAL,CAAWC,IAAX,CAAgBiB,UAAhB,EAAzF;AACA,UAAMC,QAAQ,gBAAS,KAAKnB,KAAL,CAAWC,IAAX,CAAgBmB,iBAAhB,KAAsC,CAAC,EAAvC,GAA4C,CAA5C,cAAoD,KAAKpB,KAAL,CAAWC,IAAX,CAAgBmB,iBAAhB,KAAsC,CAAC,EAA3F,IAAkG,KAAKpB,KAAL,CAAWC,IAAX,CAAgBmB,iBAAhB,KAAsC,CAAC,EAAlJ,CAAd;AAEA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACK;AAAM,QAAA,SAAS,EAAC;AAAhB,mBACIZ,GADJ,eACYP,IADZ,cACoBU,KADpB,cAC6BE,IAD7B,eACsCE,KADtC,cAC+CE,OAD/C,eAC2DE,QAD3D,OADL,CADF;AAOD;;;;EAvCuBE,KAAK,CAACC,S;;eA0CjBxB,W","sourcesContent":["import * as React from 'react';\nimport './CurrentTime.less';\ninterface Props { }\ninterface State {\n  date: any;\n}\n\nlet timerID: any;\n\nclass CurrentTime extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    timerID = setInterval(\n      () => this.tick(),\n      60000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n  render () {\n    const vietnameseDay = ['Thứ hai', 'Thứ ba', 'Thứ tư', 'Thứ năm', 'Thứ sáu', 'Thứ bảy', 'Chủ nhật'];\n    const day = vietnameseDay[this.state.date.getDay()];\n    const date = this.state.date.getDate() < 10 ? `0${this.state.date.getDate()}` : this.state.date.getDate();\n    const month = this.state.date.getMonth() + 1 < 10 ? `0${this.state.date.getMonth() + 1}` : this.state.date.getMonth() + 1;\n    const year = this.state.date.getFullYear();\n    const hours = this.state.date.getHours() < 10 ? `0${this.state.date.getHours()}` : this.state.date.getHours();\n    const minutes = this.state.date.getMinutes() < 10 ? `0${this.state.date.getMinutes()}` : this.state.date.getMinutes();\n    const timeZone = `GMT${this.state.date.getTimezoneOffset() / -60 > 0 ? `+${this.state.date.getTimezoneOffset() / -60}` : this.state.date.getTimezoneOffset() / -60}`;\n\n    return (\n      <div className='current-time'>\n           <span className='city-time'>\n           {`${day}, ${date}/${month}/${year}, ${hours}:${minutes} (${timeZone})`}\n           </span>\n      </div>\n    );\n  }\n}\n\nexport default CurrentTime;\n"],"file":"CurrentTime.js"}