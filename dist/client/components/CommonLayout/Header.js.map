{"version":3,"sources":["../../../../src/client/components/CommonLayout/Header.tsx"],"names":["Search","MainHeader","toggle","loadingNotification","notifications","data","before","undefined","after","sortBy","first","unreadNotifications","hasNotification","currentLanguage","config","i18n","defaultLang","searchBarStatus","props","profileState","authUser","id","idToken","jsCookie","get","serviceProxy","findPublicProfile","profileData","setState","userProfile","countUnreadNotifications","countNotificationResult","lang","window","location","reload","state","document","body","style","overflow","height","firebase","auth","signOut","href","dropdownVisible","length","findNotifications","notificationsResult","console","log","map","item","notificationState","UNREAD","READ","readNotifications","operation","error","notificationId","_id","payload","loadNotificationCount","loadProfileInfo","recaptchaVerifier","RecaptchaVerifier","language","translate","t","onTurnOffSearchBar","position","top","left","width","zIndex","backgroundColor","transition","display","justifyContent","border","color","value","changeLanguage","VN","EN","searchKeyword","e","updateFilters","keyword","target","borderRadius","onTurnOnSearchBar","handleHamburgerMenuClick","profileReducers","logOut","alignItems","Boolean","loadMoreNotifications","readAllNotifications","readNotification","loadNotifications","fontSize","avatarUrl","fullName","marginRight","marginLeft","openModal","modalName","marginTop","commonKeywords","slice","index","React","Component","Header"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAMA,MAAM,GAAG,eAAMA,MAArB;;IACMC,U;;;;;;;;;;;;;;;;;;4DACW;AACbC,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,mBAAmB,EAAE,KAFR;AAGbC,MAAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAE,EADO;AAEbC,QAAAA,MAAM,EAAEC,SAFK;AAGbC,QAAAA,KAAK,EAAED;AAHM,OAHF;AAQbE,MAAAA,MAAM,EAAE,gBARK;AASbC,MAAAA,KAAK,EAAE,EATM;AAUbC,MAAAA,mBAAmB,EAAE,CAVR;AAWbC,MAAAA,eAAe,EAAE,IAXJ;AAYbC,MAAAA,eAAe,EAAEC,eAAOC,IAAP,CAAYC,WAZhB;AAabC,MAAAA,eAAe,EAAE;AAbJ,K;;;;;;8BA8BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,IAAoC,MAAKF,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EADzD;AAAA;AAAA;AAAA;;AAERC,cAAAA,OAFQ,GAEEC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAFF;AAGRC,cAAAA,YAHQ,GAGO,+BAAgBH,OAAhB,CAHP;AAAA;AAAA,qBAIYG,YAAY,CAACC,iBAAb,CAA+B,MAAKR,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAAhE,CAJZ;;AAAA;AAIRM,cAAAA,WAJQ;;AAMd,oBAAKC,QAAL,CAAc;AACZC,gBAAAA,WAAW,EAAEF;AADD,eAAd;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;8BAYM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAElB,MAAKT,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,IAAoC,MAAKF,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAFnD;AAAA;AAAA;AAAA;;AAGdC,cAAAA,OAHc,GAGJC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAHI;AAIdC,cAAAA,YAJc,GAIC,+BAAgBH,OAAhB,CAJD;AAAA;AAAA,qBAKkBG,YAAY,CAACK,wBAAb,CAAsC,MAAKZ,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAAvE,CALlB;;AAAA;AAKdU,cAAAA,uBALc;;AAOpB,oBAAKH,QAAL,CAAc;AACZjB,gBAAAA,mBAAmB,EAAEoB,uBAAuB,CAACpB;AADjC,eAAd;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;wEAaJ,YAAM;AACxB,YAAKiB,QAAL,CAAc;AAAEX,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,K;;yEAEoB,YAAM;AACzB,YAAKW,QAAL,CAAc;AAAEX,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,K;;;;;;;gCAEgB,kBAAOe,IAAP;AAAA;AAAA;AAAA;AAAA;AACf,0CAAeA,IAAf;AACAC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8BAKU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnB,MAAKP,QAAL,CAAc;AAAE1B,gBAAAA,MAAM,EAAE,CAAC,MAAKkC,KAAL,CAAWlC;AAAtB,eAAd,CADmB;;AAAA;AAEzB,kBAAI,MAAKkC,KAAL,CAAWlC,MAAf,EAAuB;AACrBmC,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;AACAH,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,MAApB,GAA6B,OAA7B;AACD,eAHD,MAGO;AACLJ,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,MAA/B;AACAH,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,MAApB,GAA6B,MAA7B;AACD;;AARwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;6DAWlB,YAAM;AACbC,mBAASC,IAAT,GAAgBC,OAAhB;;AACAX,MAAAA,MAAM,CAACC,QAAP,CAAgBW,IAAhB,GAAuB,cAAvB;AACD,K;;;;;;;gCAEmB,kBAAOC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACdA,eAAe,IAAI,MAAKV,KAAL,CAAWhC,aAAX,CAAyBC,IAAzB,CAA8B0C,MAA9B,KAAyC,CAA5D,IAAiE,MAAKX,KAAL,CAAWxB,eAD9D;AAAA;AAAA;AAAA;;AAEhB,sBAAKgB,QAAL,CAAc;AACZzB,kBAAAA,mBAAmB,EAAE;AADT,iBAAd;;AAFgB;AAORmB,gBAAAA,OAPQ,GAOEC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAPF;AAQRC,gBAAAA,YARQ,GAQO,+BAAgBH,OAAhB,CARP;AAAA;AAAA,uBASoBG,YAAY,CAACuB,iBAAb,CAChC,MAAKZ,KAAL,CAAW1B,KADqB,EAEhC,MAAK0B,KAAL,CAAW3B,MAFqB,EAGhCF,SAHgC,EAIhCA,SAJgC,CATpB;;AAAA;AASR0C,gBAAAA,mBATQ;;AAgBd,sBAAKrB,QAAL,CAAc;AACZzB,kBAAAA,mBAAmB,EAAE,KADT;AAEZC,kBAAAA,aAAa,EAAE6C,mBAFH;AAGZrC,kBAAAA,eAAe,EAAEqC,mBAAmB,CAAC5C,IAApB,CAAyB0C,MAAzB,GAAkC;AAHvC,iBAAd;;AAhBc;AAAA;;AAAA;AAAA;AAAA;AAsBd;AACAG,gBAAAA,OAAO,CAACC,GAAR;;AAEA,sBAAKvB,QAAL,CAAc;AACZzB,kBAAAA,mBAAmB,EAAE;AADT,iBAAd;;AAzBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8BAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAClB,MAAKiC,KAAL,CAAWhC,aAAX,CAAyBI,KADP;AAAA;AAAA;AAAA;;AAEpB,oBAAKoB,QAAL,CAAc;AACZzB,gBAAAA,mBAAmB,EAAE;AADT,eAAd;;AAFoB;AAOZmB,cAAAA,OAPY,GAOFC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAPE;AAQZC,cAAAA,YARY,GAQG,+BAAgBH,OAAhB,CARH;AAAA;AAAA,qBASgBG,YAAY,CAACuB,iBAAb,CAChC,MAAKZ,KAAL,CAAW1B,KADqB,EAEhC,MAAK0B,KAAL,CAAW3B,MAFqB,EAGhCF,SAHgC,EAIhC,MAAK6B,KAAL,CAAWhC,aAAX,CAAyBI,KAJO,CAThB;;AAAA;AASZyC,cAAAA,mBATY;;AAgBlB,oBAAKrB,QAAL,CAAc;AACZzB,gBAAAA,mBAAmB,EAAE,KADT;AAEZC,gBAAAA,aAAa,EAAE6C;AAFH,eAAd;;AAhBkB;AAAA;;AAAA;AAAA;AAAA;AAqBlB;AACAC,cAAAA,OAAO,CAACC,GAAR;;AAEA,oBAAKvB,QAAL,CAAc;AACZzB,gBAAAA,mBAAmB,EAAE;AADT,eAAd;;AAxBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;8BA+BD;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB,oBAAKyB,QAAL,CAAc;AACZxB,gBAAAA,aAAa,oBACR,MAAKgC,KAAL,CAAWhC,aADH;AAEXC,kBAAAA,IAAI,EAAE,MAAK+B,KAAL,CAAWhC,aAAX,CAAyBC,IAAzB,CAA8B+C,GAA9B,CAAkC,UAACC,IAAD,EAAU;AAChD,wBAAIA,IAAI,CAACjB,KAAL,KAAekB,wBAAkBC,MAArC,EAA6C;AAC3C,+CACKF,IADL;AAEEjB,wBAAAA,KAAK,EAAEkB,wBAAkBE;AAF3B;AAID,qBALD,MAKO;AACL,6BAAOH,IAAP;AACD;AACF,mBATK;AAFK,kBADD;AAcZ1C,gBAAAA,mBAAmB,EAAE;AAdT,eAAd;;AAiBA,kBAAI;AACF,oBAAI,MAAKO,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,IAAoC,MAAKF,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAAzE,EAA6E;AACrEC,kBAAAA,OADqE,GAC3DC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAD2D;AAErEC,kBAAAA,YAFqE,GAEtD,+BAAgBH,OAAhB,CAFsD;AAG3EG,kBAAAA,YAAY,CAACgC,iBAAb,CAA+B,MAAKvC,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAAhE,EAAoE;AAClEqC,oBAAAA,SAAS,EAAE;AADuD,mBAApE;AAGD;AACF,eARD,CAQE,OAAOC,KAAP,EAAc;AACd;AACAT,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;;AA7BoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;gCAgCJ,kBAAOC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB,sBAAKhC,QAAL,CAAc;AACZxB,kBAAAA,aAAa,oBACR,MAAKgC,KAAL,CAAWhC,aADH;AAEXC,oBAAAA,IAAI,EAAE,MAAK+B,KAAL,CAAWhC,aAAX,CAAyBC,IAAzB,CAA8B+C,GAA9B,CAAkC,UAACC,IAAD;AAAA,6BAAUA,IAAI,CAACQ,GAAL,KAAaD,cAAb,qBAC7CP,IAD6C;AAEhDjB,wBAAAA,KAAK,EAAEkB,wBAAkBE;AAFuB,2BAG9CH,IAHoC;AAAA,qBAAlC;AAFK,oBADD;AAQZ1C,kBAAAA,mBAAmB,EAAE,MAAKyB,KAAL,CAAWzB,mBAAX,GAAiC;AAR1C,iBAAd;;AAWA,oBAAI;AACF,sBAAI,MAAKO,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,IAAoC,MAAKF,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAAzE,EAA6E;AACrEC,oBAAAA,OADqE,GAC3DC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAD2D;AAErEC,oBAAAA,YAFqE,GAEtD,+BAAgBH,OAAhB,CAFsD;AAG3EG,oBAAAA,YAAY,CAACgC,iBAAb,CAA+B,MAAKvC,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAAhE,EAAoE;AAClEqC,sBAAAA,SAAS,EAAE,kBADuD;AAElEI,sBAAAA,OAAO,EAAE;AACPF,wBAAAA,cAAc,EAAdA;AADO;AAFyD,qBAApE;AAMD;AACF,iBAXD,CAWE,OAAOD,KAAP,EAAc;AACd;AACAT,kBAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;;AA1BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAnKC;AAClB,WAAKI,qBAAL;AACA,WAAKC,eAAL;AAEA;AACC/B,MAAAA,MAAD,CAAgBgC,iBAAhB,GAAoC,IAAIvB,aAASC,IAAT,CAAcuB,iBAAlB,CAAoC,WAApC,EAAiD;AACnF,gBAAQ;AAD2E,OAAjD,CAApC;AAIA,WAAKtC,QAAL,CAAc;AACZf,QAAAA,eAAe,EAAEE,WAAKA,IAAL,CAAUoD;AADf,OAAd;AAGD;;;6BAoLQ;AAAA;;AACP,UAAMC,SAAS,GAAG,KAAKlD,KAAL,CAAWmD,CAA7B;AACA,aACE;AAAQ,QAAA,EAAE,EAAC;AAAX,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,wBAAa,kBAFf;AAGE,mCAAwB,8DAH1B;AAIE,oCAAyB;AAJ3B,QADF,EAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AACE,QAAA,OAAO,EAAE,KAAKC,kBADhB;AAEE,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWnB,eAAX,GAA6B;AAClCsD,UAAAA,QAAQ,EAAE,OADwB;AAElCC,UAAAA,GAAG,EAAE,CAF6B;AAGlCC,UAAAA,IAAI,EAAE,CAH4B;AAIlCC,UAAAA,KAAK,EAAE,MAJ2B;AAKlCjC,UAAAA,MAAM,EAAE,MAL0B;AAMlCkC,UAAAA,MAAM,EAAE,CAN0B;AAOlCC,UAAAA,eAAe,EAAE,iBAPiB;AAQlCC,UAAAA,UAAU,EAAE;AARsB,SAA7B,GAUH;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAZN,QARF,EAsBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,EAAE,EAAE;AAAT,SACE;AAAG,QAAA,IAAI,EAAC;AAAR,SACE;AAAK,QAAA,GAAG,EAAC,gCAAT;AAA0C,QAAA,KAAK,EAAC;AAAhD,QADF,CADF,CADF,EAME;AAAK,QAAA,EAAE,EAAE;AAAT,QANF,EAOE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,KAAK,EAAE;AAAEA,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC;AAAnB,SACE;AACE,QAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWvB,eADpB;AAEE,QAAA,KAAK,EAAE;AAAE6D,UAAAA,KAAK,EAAE,OAAT;AAAkBM,UAAAA,MAAM,EAAE,mBAA1B;AAA+CC,UAAAA,KAAK,EAAE;AAAtD,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,iBAAW,MAAI,CAACC,cAAL,CAAoBD,KAApB,CAAX;AAAA;AAHZ,SAKE,oCAAQ,MAAR;AAAe,QAAA,KAAK,EAAEpE,eAAOC,IAAP,CAAYqE;AAAlC,SAAuChB,SAAS,CAAC,WAAD,CAAhD,CALF,EAME,oCAAQ,MAAR;AAAe,QAAA,KAAK,EAAEtD,eAAOC,IAAP,CAAYsE;AAAlC,SAAuCjB,SAAS,CAAC,WAAD,CAAhD,CANF,CADF,CAPF,CAtBF,EAwCE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWnB,eAAX,GAA6B;AAAE0D,UAAAA,MAAM,EAAE;AAAV,SAA7B,GAA6C;AAAnF,SACE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAA9B,QADF,EAGG,KAAKvC,KAAL,CAAWnB,eAAX,GACC;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,EAAE,EAAE;AAAjC,SACE,oBAAC,MAAD;AACE,QAAA,WAAW,EAAEmD,SAAS,CAAC,eAAD,CADxB;AAEE,QAAA,QAAQ,EAAE;AAAA,iBACRnC,MAAM,CAACC,QAAP,CAAgBW,IAAhB,sBAAmC,MAAI,CAAC3B,KAAL,CAAWoE,aAAX,sBAAuC,MAAI,CAACpE,KAAL,CAAWoE,aAAlD,IAAoE,EAAvG,CADQ;AAAA,SAFZ;AAKE,QAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,iBAAO,MAAI,CAACrE,KAAL,CAAWsE,aAAX,CAAyB;AAAEC,YAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASR;AAApB,WAAzB,CAAP;AAAA,SALZ;AAME,QAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWoE,aANpB;AAOE,QAAA,KAAK,EAAE;AAAEZ,UAAAA,KAAK,EAAE,MAAT;AAAiBiB,UAAAA,YAAY,EAAE;AAA/B;AAPT,QADF,CADD,GAYC,oBAAC,KAAD,CAAO,QAAP,QACE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE;AAA/B,SACE;AAAG,QAAA,IAAI,EAAC;AAAR,SACE;AAAK,QAAA,GAAG,EAAC,gCAAT;AAA0C,QAAA,KAAK,EAAC;AAAhD,QADF,CADF,CADF,EAME;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,EAAE,EAAE;AAAhC,QANF,EAQE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAA9B,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAC,gCAAjC;AAAkE,QAAA,KAAK,EAAC,MAAxE;AAA+E,QAAA,OAAO,EAAE,KAAKC;AAA7F,QADF,CARF,EAWE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAA9B,SACE,oBAAC,sBAAD;AACE,QAAA,wBAAwB,EAAE,KAAKC,wBADjC;AAEE,QAAA,MAAM,EAAE,KAAKzD,KAAL,CAAWlC,MAFrB;AAGE,QAAA,YAAY,oBACP,KAAKgB,KAAL,CAAWC,YADJ;AAEVC,UAAAA,QAAQ,oBACH,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,QADrB,EAEH,KAAKgB,KAAL,CAAWP,WAFR;AAFE,UAHd;AAUE,QAAA,eAAe,EAAE,KAAKX,KAAL,CAAW4E,eAV9B;AAWE,QAAA,MAAM,EAAE,KAAKC;AAXf,QADF,CAXF,CAfJ,EA0CE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAA9B,QA1CF,CAxCF,EAqFE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAA9B,QADF,EAGE;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAA2B,QAAA,EAAE,EAAE;AAA/B,SACE,oBAAC,MAAD;AACE,QAAA,WAAW,EAAE3B,SAAS,CAAC,eAAD,CADxB;AAEE,QAAA,QAAQ,EAAE;AAAA,iBAAMnC,MAAM,CAACC,QAAP,CAAgBW,IAAhB,sBAAmC,MAAI,CAAC3B,KAAL,CAAWoE,aAAX,sBAAuC,MAAI,CAACpE,KAAL,CAAWoE,aAAlD,IAAoE,EAAvG,CAAN;AAAA,SAFZ;AAGE,QAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,iBAAO,MAAI,CAACrE,KAAL,CAAWsE,aAAX,CAAyB;AAAEC,YAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASR;AAApB,WAAzB,CAAP;AAAA,SAHZ;AAIE,QAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWoE,aAJpB;AAKE,QAAA,KAAK,EAAE;AAAEZ,UAAAA,KAAK,EAAE,KAAT;AAAgBjC,UAAAA,MAAM,EAAE,MAAxB;AAAgCkD,UAAAA,YAAY,EAAE;AAA9C;AALT,QADF,CAHF,EAYG,KAAKzE,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,IAAoC,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,EAArE,GACC;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,KAAK,EAAE;AAAEyD,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE,UAAnC;AAA+CiB,UAAAA,UAAU,EAAE;AAA3D;AAAxC,SACE;AACE,QAAA,OAAO,EACL,oBAAC,0CAAD;AACE,UAAA,mBAAmB,EAAE,KAAK5D,KAAL,CAAWjC,mBADlC;AAEE,UAAA,OAAO,EAAE8F,OAAO,CAAC,KAAK7D,KAAL,CAAWhC,aAAX,CAAyBI,KAA1B,CAFlB;AAGE,UAAA,qBAAqB,EAAE,KAAK0F,qBAH9B;AAIE,UAAA,oBAAoB,EAAE,KAAKC,oBAJ7B;AAKE,UAAA,gBAAgB,EAAE,KAAK/D,KAAL,CAAWhC,aAAX,CAAyBC,IAL7C;AAME,UAAA,gBAAgB,EAAE,KAAK+F;AANzB,UAFJ;AAWE,QAAA,OAAO,EAAE,CAAC,OAAD,CAXX;AAYE,QAAA,SAAS,EAAC,cAZZ;AAaE,QAAA,eAAe,EAAE,KAAKC,iBAbxB;AAcE,QAAA,gBAAgB,EAAC;AAdnB,SAgBE;AAAO,QAAA,KAAK,EAAE,KAAKjE,KAAL,CAAWzB;AAAzB,SACE,+BAAG;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAE;AAAEsE,UAAAA,KAAK,EAAE,SAAT;AAAoBqB,UAAAA,QAAQ,EAAE;AAA9B;AAAxC,QAAH,CADF,CAhBF,CADF,EAsBE;AACE,QAAA,OAAO,EACL,oBAAC,qBAAD;AACE,UAAA,YAAY,oBACP,KAAKpF,KAAL,CAAWC,YADJ;AAEVC,YAAAA,QAAQ,oBACH,KAAKgB,KAAL,CAAWP,WADR,EAEH,KAAKX,KAAL,CAAWC,YAAX,CAAwBC,QAFrB;AAGNmF,cAAAA,SAAS,EAAE,KAAKnE,KAAL,CAAWP,WAAX,GAAyB,KAAKO,KAAL,CAAWP,WAAX,CAAuB0E,SAAhD,GAA4DhG,SAHjE;AAINiG,cAAAA,QAAQ,EAAE,KAAKtF,KAAL,CAAWsF,QAAX,GAAsB,KAAKtF,KAAL,CAAWsF,QAAjC,GAA4C,KAAKpE,KAAL,CAAWP,WAAX,GAAyB,KAAKO,KAAL,CAAWP,WAAX,CAAuB2E,QAAhD,GAA2DjG;AAJ3G;AAFE,YADd;AAUE,UAAA,MAAM,EAAE,KAAKwF;AAVf,UAFJ;AAeE,QAAA,OAAO,EAAE,CAAC,OAAD,CAfX;AAgBE,QAAA,SAAS,EAAC,cAhBZ;AAiBE,QAAA,gBAAgB,EAAC;AAjBnB,SAmBE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,mBAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAE;AAAEU,UAAAA,WAAW,EAAE,MAAf;AAAuBC,UAAAA,UAAU,EAAE;AAAnC;AALT,SAOGtC,SAAS,CAAC,gBAAD,CAPZ,CAnBF,CAtBF,EAmDE;AAAG,QAAA,IAAI;AAAP,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,SAAS,EAAC,mBAJZ;AAKE,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT;AALT,SAOGN,SAAS,CAAC,mBAAD,CAPZ,CADF,CAnDF,CADD,GAiEG;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,KAAK,EAAE;AAAEU,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE,UAAnC;AAA+CiB,UAAAA,UAAU,EAAE;AAA3D;AAAxC,SACE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,mBAHZ;AAIE,QAAA,KAAK,EAAE;AAAES,UAAAA,WAAW,EAAE,MAAf;AAAuBC,UAAAA,UAAU,EAAE;AAAnC,SAJT;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACxF,KAAL,CAAW4E,eAAX,CAA2Ba,SAA3B,CAAqC;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAArC,CAAN;AAAA;AALX,SAOGxC,SAAS,CAAC,iBAAD,CAPZ,CADF,EAUE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,mBAHZ;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAClD,KAAL,CAAW4E,eAAX,CAA2Ba,SAA3B,CAAqC;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAArC,CAAN;AAAA;AAJX,SAMGxC,SAAS,CAAC,cAAD,CANZ,CAVF,CA7EN,CADF,EAmGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,EAAE,EAAE;AAAT,QADF,EAEE;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,KAAK,EAAE;AAClByC,UAAAA,SAAS,EAAE,KADO;AAElB/B,UAAAA,OAAO,EAAE,MAFS;AAGlBkB,UAAAA,UAAU,EAAE;AAHM;AAApB,SAKE,kCAAO5B,SAAS,CAAC,uBAAD,CAAhB,YALF,EAMG,KAAKlD,KAAL,CAAW4F,cAAX,CAA0BC,KAA1B,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC3D,GAAtC,CAA0C,UAACC,IAAD,EAAO2D,KAAP;AAAA,eACzC;AACE,UAAA,KAAK,EAAE;AAAE/B,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,GAAG,EAAE+B,KAFP;AAGE,UAAA,OAAO,EAAE,mBAAM;AACb/E,YAAAA,MAAM,CAACC,QAAP,CAAgBW,IAAhB,+BAA4CQ,IAAI,CAACoC,OAAjD;AACD;AALH,WAOE;AAAK,UAAA,KAAK,EAAC;AAAX,WAAqBpC,IAAI,CAACoC,OAA1B,CAPF,CADyC;AAAA,OAA1C,CANH,CAFF,EAoBE;AAAK,QAAA,EAAE,EAAE;AAAT,QApBF,CAnGF,CArFF,EA+ME,oBAAC,sBAAD;AACE,QAAA,YAAY,EAAE,KAAKvE,KAAL,CAAWC,YAD3B;AAEE,QAAA,eAAe,EAAE,KAAKD,KAAL,CAAW4E;AAF9B,QA/MF,EAmNE,oBAAC,4BAAD;AACE,QAAA,YAAY,EAAE,KAAK5E,KAAL,CAAWC,YAD3B;AAEE,QAAA,eAAe,EAAE,KAAKD,KAAL,CAAW4E;AAF9B,QAnNF,EAuNE;AAAK,QAAA,EAAE,EAAC;AAAR,QAvNF,CADF;AA2ND;;;;EA9asBmB,KAAK,CAACC,S;;AAibxB,IAAMC,MAAM,GAAG,0BAAe,QAAf,EAAyBlH,UAAzB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Row, Col, Button, Input, Dropdown, Icon, Badge, Tag, Select } from 'antd';\nimport './Header.less';\nimport { ProfileState, ProfileReducers, ProfileEffects } from '@client/store';\nimport DropdownMenu from './DropdownMenu';\nimport { RegisterModal } from './RegisterModal';\nimport { LoginModal } from './LoginModal';\nimport { config } from '@client/config';\nimport { initializeFirebaseApp, notificationState } from '@client/core';\nimport firebase from 'firebase/app';\nimport { changeLanguage, i18n, withNamespaces } from '@client/i18n';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport * as jsCookie from 'js-cookie';\nimport { Notification, CommonKeyword, User } from '../../services/service-proxies';\nimport { NotificationDropdown } from './NotificationDropdown';\nimport HamburgerMenu from './HamburgerMenu';\n\ninterface Props {\n  searchKeyword: string;\n  commonKeywords: CommonKeyword[];\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  fullName?: string;\n  updateFilters: (payload: { [key: string]: string | number }) => void;\n  t: (key: string) => string;\n}\ninterface State {\n  toggle: boolean;\n  loadingNotification: boolean;\n  notifications: {\n    data: Notification[];\n    before?: string;\n    after?: string\n  };\n  sortBy: string;\n  first: number;\n  unreadNotifications: number;\n  hasNotification: boolean;\n  currentLanguage: string;\n  searchBarStatus: boolean;\n  userProfile?: User;\n}\nconst Search = Input.Search;\nclass MainHeader extends React.Component<Props, State> {\n  state: State = {\n    toggle: false,\n    loadingNotification: false,\n    notifications: {\n      data: [],\n      before: undefined,\n      after: undefined,\n    },\n    sortBy: 'createdAt|desc',\n    first: 10,\n    unreadNotifications: 0,\n    hasNotification: true,\n    currentLanguage: config.i18n.defaultLang,\n    searchBarStatus: false,\n  };\n\n  componentDidMount() {\n    this.loadNotificationCount();\n    this.loadProfileInfo();\n\n    initializeFirebaseApp();\n    (window as any).recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      'size': 'invisible',\n    });\n\n    this.setState({\n      currentLanguage: i18n.i18n.language,\n    });\n  }\n\n  loadProfileInfo = async () => {\n    if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n      const idToken = jsCookie.get('token');\n      const serviceProxy = getServiceProxy(idToken);\n      const profileData = await serviceProxy.findPublicProfile(this.props.profileState.authUser.id);\n\n      this.setState({\n        userProfile: profileData,\n      });\n    }\n  }\n\n  loadNotificationCount = async () => {\n    // load notification count\n    if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n      const idToken = jsCookie.get('token');\n      const serviceProxy = getServiceProxy(idToken);\n      const countNotificationResult = await serviceProxy.countUnreadNotifications(this.props.profileState.authUser.id);\n\n      this.setState({\n        unreadNotifications: countNotificationResult.unreadNotifications,\n      });\n    }\n  }\n\n  onTurnOnSearchBar = () => {\n    this.setState({ searchBarStatus: true });\n  }\n\n  onTurnOffSearchBar = () => {\n    this.setState({ searchBarStatus: false });\n  }\n\n  changeLanguage = async (lang: string) => {\n    changeLanguage(lang);\n    window.location.reload();\n  }\n\n  handleHamburgerMenuClick = async () => {\n    await this.setState({ toggle: !this.state.toggle });\n    if (this.state.toggle) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    } else {\n      document.body.style.overflow = 'auto';\n      document.body.style.height = 'auto';\n    }\n  }\n\n  logOut = () => {\n    firebase.auth().signOut();\n    window.location.href = '/auth/logout';\n  }\n\n  loadNotifications = async (dropdownVisible: any) => {\n    if (dropdownVisible && this.state.notifications.data.length === 0 && this.state.hasNotification) {\n      this.setState({\n        loadingNotification: true,\n      });\n\n      try {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        const notificationsResult = await serviceProxy.findNotifications(\n          this.state.first,\n          this.state.sortBy,\n          undefined,\n          undefined,\n        );\n\n        this.setState({\n          loadingNotification: false,\n          notifications: notificationsResult,\n          hasNotification: notificationsResult.data.length > 0,\n        });\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n\n        this.setState({\n          loadingNotification: false,\n        });\n      }\n    }\n  }\n\n  loadMoreNotifications = async () => {\n    if (this.state.notifications.after) {\n      this.setState({\n        loadingNotification: true,\n      });\n\n      try {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        const notificationsResult = await serviceProxy.findNotifications(\n          this.state.first,\n          this.state.sortBy,\n          undefined,\n          this.state.notifications.after,\n        );\n\n        this.setState({\n          loadingNotification: false,\n          notifications: notificationsResult,\n        });\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n\n        this.setState({\n          loadingNotification: false,\n        });\n      }\n    }\n  }\n\n  readAllNotifications = async () => {\n    this.setState({\n      notifications: {\n        ...this.state.notifications,\n        data: this.state.notifications.data.map((item) => {\n          if (item.state === notificationState.UNREAD) {\n            return {\n              ...item,\n              state: notificationState.READ,\n            };\n          } else {\n            return item;\n          }\n        }) as any,\n      },\n      unreadNotifications: 0,\n    });\n\n    try {\n      if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        serviceProxy.readNotifications(this.props.profileState.authUser.id, {\n          operation: 'readAllNotifications',\n        });\n      }\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n\n  readNotification = async (notificationId: string) => {\n    this.setState({\n      notifications: {\n        ...this.state.notifications,\n        data: this.state.notifications.data.map((item) => item._id === notificationId ? {\n          ...item,\n          state: notificationState.READ,\n        } : item) as any,\n      },\n      unreadNotifications: this.state.unreadNotifications - 1,\n    });\n\n    try {\n      if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        serviceProxy.readNotifications(this.props.profileState.authUser.id, {\n          operation: 'readNotification',\n          payload: {\n            notificationId,\n          },\n        });\n      }\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n\n  render() {\n    const translate = this.props.t;\n    return (\n      <header id='header'>\n        <div\n          className='fb-customerchat'\n          data-page_id='2326851900883942'\n          data-logged_in_greeting='Chúng tôi có thể giúp gì cho bạn ? '\n          data-logged_out_greeting='Chúng tôi có thể giúp gì cho bạn ? '\n        >\n        </div>\n        <div className='dark-overlay'\n          onClick={this.onTurnOffSearchBar}\n          style={this.state.searchBarStatus ? {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 3,\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            transition: 'opacity .25s ease-in-out',\n          }\n            : { display: 'none' }\n          }></div>\n        <Row className='header-container'>\n          <Col lg={6}>\n            <a href='/'>\n              <img src='/static/images/logo-timmay.png' width='100%' />\n            </a>\n          </Col>\n          <Col lg={12}></Col>\n          <Col lg={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Select\n              value={this.state.currentLanguage}\n              style={{ width: '140px', border: '1px solid #000000', color: '#000000' }}\n              onChange={(value) => this.changeLanguage(value)}\n            >\n              <Select.Option value={config.i18n.VN}>{translate('common:vn')}</Select.Option>\n              <Select.Option value={config.i18n.EN}>{translate('common:en')}</Select.Option>\n            </Select>\n          </Col>\n        </Row>\n        <Row className='mobile-header' style={this.state.searchBarStatus ? { zIndex: 4 } : {}}>\n          <Col lg={1} md={1} xs={0} sm={0}>\n          </Col>\n          {this.state.searchBarStatus ?\n            <Col lg={22} md={22} sm={24} xs={24}>\n              <Search\n                placeholder={translate('common:search')}\n                onSearch={() =>\n                  window.location.href = `/tim-kiem${this.props.searchKeyword ? `?keyword=${this.props.searchKeyword}` : ''}`\n                }\n                onChange={(e) => this.props.updateFilters({ keyword: e.target.value })}\n                value={this.props.searchKeyword}\n                style={{ width: '100%', borderRadius: '0px' }}\n              />\n            </Col> :\n            <React.Fragment>\n              <Col lg={7} md={7} xs={12} sm={12}>\n                <a href='/'>\n                  <img src='/static/images/logo-timmay.png' width='100%' />\n                </a>\n              </Col>\n              <Col lg={11} md={11} xs={3} sm={3}>\n              </Col>\n              <Col lg={2} md={2} xs={4} sm={4}>\n                <img className='icon-search' src='/static/images/icon-search.png' width='30px' onClick={this.onTurnOnSearchBar} />\n              </Col>\n              <Col lg={2} md={2} xs={3} sm={3}>\n                <HamburgerMenu\n                  handleHamburgerMenuClick={this.handleHamburgerMenuClick}\n                  toggle={this.state.toggle}\n                  profileState={{\n                    ...this.props.profileState,\n                    authUser: {\n                      ...this.props.profileState.authUser,\n                      ...this.state.userProfile,\n                    } as any,\n                  }}\n                  profileReducers={this.props.profileReducers}\n                  logOut={this.logOut}\n                />\n              </Col>\n            </React.Fragment>}\n          <Col lg={1} md={1} xs={0} sm={0}>\n          </Col>\n        </Row>\n        <div className='header-desktop'>\n          <Row className='search-bar'>\n            <Col lg={6} md={8} sm={0} xs={0}>\n            </Col>\n            <Col lg={12} md={8} sm={0} xs={0}>\n              <Search\n                placeholder={translate('common:search')}\n                onSearch={() => window.location.href = `/tim-kiem${this.props.searchKeyword ? `?keyword=${this.props.searchKeyword}` : ''}`}\n                onChange={(e) => this.props.updateFilters({ keyword: e.target.value })}\n                value={this.props.searchKeyword}\n                style={{ width: '95%', height: '100%', borderRadius: '8px' }}\n              />\n            </Col>\n            {this.props.profileState.authUser && this.props.profileState.authUser.id ? (\n              <Col lg={6} md={8} sm={0} xs={0} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                <Dropdown\n                  overlay={\n                    <NotificationDropdown\n                      loadingNotification={this.state.loadingNotification}\n                      hasNext={Boolean(this.state.notifications.after)}\n                      loadMoreNotifications={this.loadMoreNotifications}\n                      readAllNotifications={this.readAllNotifications}\n                      notificationList={this.state.notifications.data}\n                      readNotification={this.readNotification}\n                    />\n                  }\n                  trigger={['click']}\n                  placement='bottomCenter'\n                  onVisibleChange={this.loadNotifications}\n                  overlayClassName='dropdown-menu'\n                >\n                  <Badge count={this.state.unreadNotifications}>\n                    <a><Icon type='bell' theme='filled' style={{ color: '#000000', fontSize: '24px' }} /></a>\n                  </Badge>\n                </Dropdown>\n\n                <Dropdown\n                  overlay={\n                    <DropdownMenu\n                      profileState={{\n                        ...this.props.profileState,\n                        authUser: {\n                          ...this.state.userProfile,\n                          ...this.props.profileState.authUser,\n                          avatarUrl: this.state.userProfile ? this.state.userProfile.avatarUrl : undefined,\n                          fullName: this.props.fullName ? this.props.fullName : this.state.userProfile ? this.state.userProfile.fullName : undefined,\n                        } as any,\n                      }}\n                      logOut={this.logOut}\n                    />\n                  }\n                  trigger={['click']}\n                  placement='bottomCenter'\n                  overlayClassName='dropdown-menu'\n                >\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    icon='user'\n                    style={{ marginRight: '10px', marginLeft: '16px' }}\n                  >\n                    {translate('common:account')}\n                  </Button>\n                </Dropdown>\n                <a href={`/dang-tin`}>\n                  <Button\n                    icon='plus'\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    style={{ width: '100%' }}\n                  >\n                    {translate('common:createNews')}\n                  </Button>\n                </a>\n              </Col>\n            ) : (\n                <Col lg={6} md={8} sm={0} xs={0} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    style={{ marginRight: '10px', marginLeft: '16px' }}\n                    onClick={() => this.props.profileReducers.openModal({ modalName: 'register' })}\n                  >\n                    {translate('common:register')}\n                  </Button>\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    onClick={() => this.props.profileReducers.openModal({ modalName: 'login' })}\n                  >\n                    {translate('common:login')}\n                  </Button>\n                </Col>\n              )}\n          </Row>\n          <Row className='popular-keyword'>\n            <Col lg={6}></Col>\n            <Col lg={12} style={{\n              marginTop: '6px',\n              display: 'flex',\n              alignItems: 'center',\n            }}>\n              <span>{translate('common:commonKeywords')}: &nbsp; </span>\n              {this.props.commonKeywords.slice(0, 4).map((item, index) => (\n                <a\n                  style={{ color: '#000000' }}\n                  key={index}\n                  onClick={() => {\n                    window.location.href = `/tim-kiem?keyword=${item.keyword}`;\n                  }}\n                >\n                  <Tag color='orange'>{item.keyword}</Tag>\n                </a>\n              ))}\n            </Col>\n            <Col lg={6}></Col>\n          </Row>\n        </div>\n        <LoginModal\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n        <RegisterModal\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n        <div id='recaptcha' />\n      </header>\n    );\n  }\n}\n\nexport const Header = withNamespaces('common')(MainHeader);\n"],"file":"Header.js"}