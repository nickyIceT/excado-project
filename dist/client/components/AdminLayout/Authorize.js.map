{"version":3,"sources":["../../../../src/client/components/AdminLayout/Authorize.tsx"],"names":["Authorize","Component","permission","authenticationRequired","layoutName","props","AuthorizeComponent","isAuthenticated","undefined","isAuthorized","openedSubMenu","selectedMenuItem","currentLanguage","firebase","auth","onAuthStateChanged","user","setState","getIdTokenResult","idTokenInfo","length","claims","permissions","filterPermission","filter","val","indexOf","authUser","id","user_id","email","fullName","name","avatarUrl","roles","initStore","dispatch","profileModel","updateProfileInfo","pathname","window","location","map","subMenu","items","item","path","i18n","language","config","defaultLang","state","Router","push","renderAdminLayout","React"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\nimport './Authorize.less';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Router from 'next/router';\nimport { getOrCreateStore, initStore } from '@client/store';\nimport { config } from '@client/config';\nimport { initializeFirebaseApp, getMenuConfigs } from '@client/core';\nimport { AdminLayout } from '@client/layouts';\nimport { i18n } from '@client/i18n';\n\ninterface AuthorizeProps {}\ninterface AuthorizeState {\n  isAuthenticated?: boolean;\n  isAuthorized?: boolean;\n  openedSubMenu: string;\n  selectedMenuItem: string;\n  currentLanguage: string;\n}\nexport const Authorize = (Component: any, permission: any, authenticationRequired?: boolean, layoutName?: string) => {\n  return (props: any) => {\n    class AuthorizeComponent extends React.Component<AuthorizeProps, AuthorizeState> {\n      state: AuthorizeState = {\n        isAuthenticated: undefined,\n        isAuthorized: undefined,\n        openedSubMenu: '',\n        selectedMenuItem: '',\n        currentLanguage: '',\n      };\n\n      componentDidMount () {\n        initializeFirebaseApp();\n        firebase.auth().onAuthStateChanged(async (user) => {\n          if (!user) {\n            this.setState({\n              isAuthenticated: false,\n            });\n          } else {\n            const idTokenInfo = await user.getIdTokenResult();\n            let isAuthorized = false;\n            if (!permission || permission.length === 0) {\n              isAuthorized = true;\n            } else if (permission && permission.length && idTokenInfo.claims.permissions) {\n              const filterPermission = permission.filter((val: string) => {\n                return idTokenInfo.claims.permissions.indexOf(val) === -1;\n              });\n\n              filterPermission && filterPermission.length ? isAuthorized = false : isAuthorized = true;\n            }\n\n            if (isAuthorized) {\n              const authUser = {\n                id: idTokenInfo.claims.user_id,\n                email: idTokenInfo.claims.email,\n                fullName: idTokenInfo.claims.name,\n                avatarUrl: idTokenInfo.claims.avatarUrl,\n                roles: idTokenInfo.claims.roles,\n                permissions: idTokenInfo.claims.permissions,\n              };\n              getOrCreateStore(initStore, {}).dispatch.profileModel.updateProfileInfo(authUser);\n\n              const pathname = window.location.pathname;\n              let openedSubMenu = '';\n              getMenuConfigs().map((subMenu: any) => {\n                subMenu.items.map((item: any) => {\n                  if (item.path === pathname) {\n                    openedSubMenu = subMenu.name;\n                  }\n                });\n              });\n\n              this.setState({\n                isAuthenticated: true,\n                isAuthorized,\n                openedSubMenu,\n                selectedMenuItem: pathname,\n                currentLanguage: i18n.i18n.language ? i18n.i18n.language : config.i18n.defaultLang,\n              });\n            } else {\n              this.setState({\n                isAuthenticated: true,\n                isAuthorized,\n              });\n            }\n          }\n        });\n      }\n\n      render () {\n        if (this.state.isAuthenticated === false) {\n          if (authenticationRequired) {\n            Router.push('/auth/login');\n          }\n        }\n\n        if (this.state.isAuthorized === false) {\n          Router.push('/_error');\n        }\n\n        const renderAdminLayout = () => {\n          return (\n            <div>\n              {(this.state.isAuthenticated && this.state.isAuthorized) || !authenticationRequired ? (\n                <AdminLayout\n                  openedSubMenu={this.state.openedSubMenu}\n                  selectedMenuItem={this.state.selectedMenuItem}\n                  currentLanguage={this.state.currentLanguage}\n                >\n                  <Component {...props} />\n                </AdminLayout>\n              ) : (\n                <div className='loader'>\n                  <Spin spinning={true} />\n                </div>\n              )}\n            </div>\n          );\n        };\n\n        switch (layoutName) {\n          case 'admin':\n            return renderAdminLayout();\n          default:\n            return renderAdminLayout();\n        }\n      }\n    }\n\n    return <AuthorizeComponent />;\n  };\n};\n"],"file":"Authorize.js"}