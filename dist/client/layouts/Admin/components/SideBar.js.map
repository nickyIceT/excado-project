{"version":3,"sources":["../../../../../src/client/layouts/Admin/components/SideBar.tsx"],"names":["SideBarMenu","selectedMenuItem","openedSubMenu","translate","props","t","getMenuItem","item","authUser","permission","path","name","getSubMenus","subMenu","render","items","icon","map","menuProps","menuCollapsed","openKeys","menuWidth","collapsedWidth","menuTheme","padding","width","openSubMenuChange","length","React","Component","mapState","rootState","profileModel","mapDispatch","_rootReducer","SideBar","initStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport './SideBar.less';\nimport { getMenuConfigs, checkPermission } from '@client/core';\nimport { initStore, AuthUser, withRematch } from '@client/store';\nimport { withNamespaces } from '@client/i18n';\n\ninterface Props {\n  menuCollapsed: boolean;\n  menuWidth: number;\n  collapsedWidth: number;\n  menuTheme: 'dark'|'light';\n  selectedMenuItem: string;\n  openedSubMenu: string;\n  openSubMenuChange: (newOpenSubMenu: string) => void;\n  t: (key: string) => string;\n}\ninterface State {}\nclass SideBarMenu extends React.Component<Props & {authUser: AuthUser}, State> {\n  state: State = {\n    selectedMenuItem: '',\n    openedSubMenu: '',\n  };\n\n  render () {\n    const translate = this.props.t;\n\n    const getMenuItem = (item: any) => {\n      if (checkPermission(this.props.authUser, item.permission)) {\n        return (\n          <Menu.Item key={item.path}>\n            <a href={item.path}>\n              <span>{translate(`common:${item.name}`)}</span>\n            </a>\n          </Menu.Item>\n        );\n      }\n      return;\n    };\n\n    const getSubMenus = (subMenu: any) => {\n      let render = false;\n      for (const item of subMenu.items) {\n        if (checkPermission(this.props.authUser, item.permission)) {\n          render = true;\n          break;\n        }\n      }\n      if (render) {\n        return (\n          <Menu.SubMenu key={subMenu.name} title={<span><Icon type={subMenu.icon} /><span>{translate(`common:${subMenu.name}`)}</span></span>}>\n            {subMenu.items.map((item: any) => getMenuItem(item))}\n          </Menu.SubMenu>\n        );\n      }\n      return;\n    };\n\n    const menuProps: any = {};\n    if (!this.props.menuCollapsed) {\n      menuProps.openKeys = [this.props.openedSubMenu];\n    }\n    return (\n      <Layout.Sider\n        trigger={null}\n        collapsible={true}\n        collapsed={this.props.menuCollapsed}\n        breakpoint='lg'\n        width={this.props.menuWidth}\n        collapsedWidth={this.props.collapsedWidth}\n        theme={this.props.menuTheme}\n        className='sider'\n      >\n        <div className='logo' id='logo'>\n            <a href='#'>\n              <img src='/static/images/logo-timmay.png' alt='logo' />\n              {/* <h1>Timmay.vn</h1> */}\n            </a>\n        </div>\n\n        <Menu\n          key='Menu'\n          mode='inline'\n          inlineCollapsed={this.props.menuCollapsed}\n          theme={this.props.menuTheme}\n          style={{ padding: '16px 0', width: '100%' }}\n          className='sider'\n          onOpenChange={(openKeys: string[]) => this.props.openSubMenuChange(openKeys[openKeys.length - 1])}\n          selectedKeys={[this.props.selectedMenuItem]}\n          {...menuProps}\n        >\n          {getMenuConfigs().map((item) => getSubMenus(item))}\n        </Menu>\n      </Layout.Sider>\n    );\n  }\n}\n\nconst mapState = (rootState: any) => {\n  return {\n    authUser: rootState.profileModel.authUser,\n  };\n};\n\nconst mapDispatch = (_rootReducer: any) => {\n  return {};\n};\n\nconst SideBar = withNamespaces('common')(withRematch<Props>(initStore, mapState, mapDispatch)(SideBarMenu));\n\nexport {\n  SideBar,\n};\n"],"file":"SideBar.js"}