{"version":3,"file":"static/webpack/static/development/pages/_error.js.59b8def842b7b4a4ffba.hot-update.js","sources":["webpack:///./components/CommonLayout/Header.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Row, Col, Button, Input, Dropdown, Icon, Badge, Tag, Select } from 'antd';\nimport './Header.less';\nimport { ProfileState, ProfileReducers, ProfileEffects } from '@client/store';\nimport DropdownMenu from './DropdownMenu';\nimport { RegisterModal } from './RegisterModal';\nimport { LoginModal } from './LoginModal';\nimport { config } from '@client/config';\nimport { initializeFirebaseApp, notificationState } from '@client/core';\nimport firebase from 'firebase/app';\nimport { changeLanguage, i18n, withNamespaces } from '@client/i18n';\nimport 'firebase/auth';\nimport { getServiceProxy } from '@client/services';\nimport * as jsCookie from 'js-cookie';\nimport { Notification, CommonKeyword, User } from '../../services/service-proxies';\nimport { NotificationDropdown } from './NotificationDropdown';\nimport HamburgerMenu from './HamburgerMenu';\n\ninterface Props {\n  searchKeyword: string;\n  commonKeywords: CommonKeyword[];\n  profileState: ProfileState;\n  profileReducers: ProfileReducers & ProfileEffects;\n  fullName?: string;\n  updateFilters: (payload: { [key: string]: string | number }) => void;\n  t: (key: string) => string;\n}\ninterface State {\n  toggle: boolean;\n  loadingNotification: boolean;\n  notifications: {\n    data: Notification[];\n    before?: string;\n    after?: string\n  };\n  sortBy: string;\n  first: number;\n  unreadNotifications: number;\n  hasNotification: boolean;\n  currentLanguage: string;\n  searchBarStatus: boolean;\n  userProfile?: User;\n}\nconst Search = Input.Search;\nclass MainHeader extends React.Component<Props, State> {\n  state: State = {\n    toggle: false,\n    loadingNotification: false,\n    notifications: {\n      data: [],\n      before: undefined,\n      after: undefined,\n    },\n    sortBy: 'createdAt|desc',\n    first: 10,\n    unreadNotifications: 0,\n    hasNotification: true,\n    currentLanguage: config.i18n.defaultLang,\n    searchBarStatus: false,\n  };\n\n  componentDidMount() {\n    this.loadNotificationCount();\n    this.loadProfileInfo();\n\n    initializeFirebaseApp();\n    (window as any).recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      'size': 'invisible',\n    });\n\n    this.setState({\n      currentLanguage: i18n.i18n.language,\n    });\n  }\n\n  loadProfileInfo = async () => {\n    if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n      const idToken = jsCookie.get('token');\n      const serviceProxy = getServiceProxy(idToken);\n      const profileData = await serviceProxy.findPublicProfile(this.props.profileState.authUser.id);\n\n      this.setState({\n        userProfile: profileData,\n      });\n    }\n  }\n\n  loadNotificationCount = async () => {\n    // load notification count\n    if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n      const idToken = jsCookie.get('token');\n      const serviceProxy = getServiceProxy(idToken);\n      const countNotificationResult = await serviceProxy.countUnreadNotifications(this.props.profileState.authUser.id);\n\n      this.setState({\n        unreadNotifications: countNotificationResult.unreadNotifications,\n      });\n    }\n  }\n\n  onTurnOnSearchBar = () => {\n    this.setState({ searchBarStatus: true });\n  }\n\n  onTurnOffSearchBar = () => {\n    this.setState({ searchBarStatus: false });\n  }\n\n  changeLanguage = async (lang: string) => {\n    changeLanguage(lang);\n    window.location.reload();\n  }\n\n  handleHamburgerMenuClick = async () => {\n    await this.setState({ toggle: !this.state.toggle });\n    if (this.state.toggle) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    } else {\n      document.body.style.overflow = 'auto';\n      document.body.style.height = 'auto';\n    }\n  }\n\n  logOut = () => {\n    firebase.auth().signOut();\n    window.location.href = '/auth/logout';\n  }\n\n  loadNotifications = async (dropdownVisible: any) => {\n    if (dropdownVisible && this.state.notifications.data.length === 0 && this.state.hasNotification) {\n      this.setState({\n        loadingNotification: true,\n      });\n\n      try {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        const notificationsResult = await serviceProxy.findNotifications(\n          this.state.first,\n          this.state.sortBy,\n          undefined,\n          undefined,\n        );\n\n        this.setState({\n          loadingNotification: false,\n          notifications: notificationsResult,\n          hasNotification: notificationsResult.data.length > 0,\n        });\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n\n        this.setState({\n          loadingNotification: false,\n        });\n      }\n    }\n  }\n\n  loadMoreNotifications = async () => {\n    if (this.state.notifications.after) {\n      this.setState({\n        loadingNotification: true,\n      });\n\n      try {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        const notificationsResult = await serviceProxy.findNotifications(\n          this.state.first,\n          this.state.sortBy,\n          undefined,\n          this.state.notifications.after,\n        );\n\n        this.setState({\n          loadingNotification: false,\n          notifications: notificationsResult,\n        });\n      } catch (error) {\n        // tslint:disable-next-line:no-console\n        console.log(error);\n\n        this.setState({\n          loadingNotification: false,\n        });\n      }\n    }\n  }\n\n  readAllNotifications = async () => {\n    this.setState({\n      notifications: {\n        ...this.state.notifications,\n        data: this.state.notifications.data.map((item) => {\n          if (item.state === notificationState.UNREAD) {\n            return {\n              ...item,\n              state: notificationState.READ,\n            };\n          } else {\n            return item;\n          }\n        }) as any,\n      },\n      unreadNotifications: 0,\n    });\n\n    try {\n      if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        serviceProxy.readNotifications(this.props.profileState.authUser.id, {\n          operation: 'readAllNotifications',\n        });\n      }\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n\n  readNotification = async (notificationId: string) => {\n    this.setState({\n      notifications: {\n        ...this.state.notifications,\n        data: this.state.notifications.data.map((item) => item._id === notificationId ? {\n          ...item,\n          state: notificationState.READ,\n        } : item) as any,\n      },\n      unreadNotifications: this.state.unreadNotifications - 1,\n    });\n\n    try {\n      if (this.props.profileState.authUser && this.props.profileState.authUser.id) {\n        const idToken = jsCookie.get('token');\n        const serviceProxy = getServiceProxy(idToken);\n        serviceProxy.readNotifications(this.props.profileState.authUser.id, {\n          operation: 'readNotification',\n          payload: {\n            notificationId,\n          },\n        });\n      }\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n\n  render() {\n    const translate = this.props.t;\n    return (\n      <header id='header'>\n        <div className='fb-customerchat'\n          data-attribution='setup_tool'\n          data-page_id='2371640139534245'\n          data-logged_in_greeting='Chúng tôi có thể giúp gì cho bạn ? '\n          data-logged_out_greeting='Chúng tôi có thể giúp gì cho bạn ? '\n        >\n        </div>\n        <div className='dark-overlay'\n          onClick={this.onTurnOffSearchBar}\n          style={this.state.searchBarStatus ? {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 3,\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            transition: 'opacity .25s ease-in-out',\n          }\n            : { display: 'none' }\n          }></div>\n        <Row className='header-container'>\n          <Col lg={6}>\n            <a href='/'>\n              <img src='/static/images/logo-timmay.png' width='100%' />\n            </a>\n          </Col>\n          <Col lg={12}></Col>\n          <Col lg={6} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Select\n              value={this.state.currentLanguage}\n              style={{ width: '140px', border: '1px solid #000000', color: '#000000' }}\n              onChange={(value) => this.changeLanguage(value)}\n            >\n              <Select.Option value={config.i18n.VN}>{translate('common:vn')}</Select.Option>\n              <Select.Option value={config.i18n.EN}>{translate('common:en')}</Select.Option>\n            </Select>\n          </Col>\n        </Row>\n        <Row className='mobile-header' style={this.state.searchBarStatus ? { zIndex: 4 } : {}}>\n          <Col lg={1} md={1} xs={0} sm={0}>\n          </Col>\n          {this.state.searchBarStatus ?\n            <Col lg={22} md={22} sm={24} xs={24}>\n              <Search\n                placeholder={translate('common:search')}\n                onSearch={() =>\n                  window.location.href = `/tim-kiem${this.props.searchKeyword ? `?keyword=${this.props.searchKeyword}` : ''}`\n                }\n                onChange={(e) => this.props.updateFilters({ keyword: e.target.value })}\n                value={this.props.searchKeyword}\n                style={{ width: '100%', borderRadius: '0px' }}\n              />\n            </Col> :\n            <React.Fragment>\n              <Col lg={7} md={7} xs={12} sm={12}>\n                <a href='/'>\n                  <img src='/static/images/logo-timmay.png' width='100%' />\n                </a>\n              </Col>\n              <Col lg={11} md={11} xs={3} sm={3}>\n              </Col>\n              <Col lg={2} md={2} xs={4} sm={4}>\n                <img className='icon-search' src='/static/images/icon-search.png' width='30px' onClick={this.onTurnOnSearchBar} />\n              </Col>\n              <Col lg={2} md={2} xs={3} sm={3}>\n                <HamburgerMenu\n                  handleHamburgerMenuClick={this.handleHamburgerMenuClick}\n                  toggle={this.state.toggle}\n                  profileState={{\n                    ...this.props.profileState,\n                    authUser: {\n                      ...this.props.profileState.authUser,\n                      ...this.state.userProfile,\n                    } as any,\n                  }}\n                  profileReducers={this.props.profileReducers}\n                  logOut={this.logOut}\n                />\n              </Col>\n            </React.Fragment>}\n          <Col lg={1} md={1} xs={0} sm={0}>\n          </Col>\n        </Row>\n        <div className='header-desktop'>\n          <Row className='search-bar'>\n            <Col lg={6} md={8} sm={0} xs={0}>\n            </Col>\n            <Col lg={12} md={8} sm={0} xs={0}>\n              <Search\n                placeholder={translate('common:search')}\n                onSearch={() => window.location.href = `/tim-kiem${this.props.searchKeyword ? `?keyword=${this.props.searchKeyword}` : ''}`}\n                onChange={(e) => this.props.updateFilters({ keyword: e.target.value })}\n                value={this.props.searchKeyword}\n                style={{ width: '95%', height: '100%', borderRadius: '8px' }}\n              />\n            </Col>\n            {this.props.profileState.authUser && this.props.profileState.authUser.id ? (\n              <Col lg={6} md={8} sm={0} xs={0} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                <Dropdown\n                  overlay={\n                    <NotificationDropdown\n                      loadingNotification={this.state.loadingNotification}\n                      hasNext={Boolean(this.state.notifications.after)}\n                      loadMoreNotifications={this.loadMoreNotifications}\n                      readAllNotifications={this.readAllNotifications}\n                      notificationList={this.state.notifications.data}\n                      readNotification={this.readNotification}\n                    />\n                  }\n                  trigger={['click']}\n                  placement='bottomCenter'\n                  onVisibleChange={this.loadNotifications}\n                  overlayClassName='dropdown-menu'\n                >\n                  <Badge count={this.state.unreadNotifications}>\n                    <a><Icon type='bell' theme='filled' style={{ color: '#000000', fontSize: '24px' }} /></a>\n                  </Badge>\n                </Dropdown>\n\n                <Dropdown\n                  overlay={\n                    <DropdownMenu\n                      profileState={{\n                        ...this.props.profileState,\n                        authUser: {\n                          ...this.state.userProfile,\n                          ...this.props.profileState.authUser,\n                          avatarUrl: this.state.userProfile ? this.state.userProfile.avatarUrl : undefined,\n                          fullName: this.props.fullName ? this.props.fullName : this.state.userProfile ? this.state.userProfile.fullName : undefined,\n                        } as any,\n                      }}\n                      logOut={this.logOut}\n                    />\n                  }\n                  trigger={['click']}\n                  placement='bottomCenter'\n                  overlayClassName='dropdown-menu'\n                >\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    icon='user'\n                    style={{ marginRight: '10px', marginLeft: '16px' }}\n                  >\n                    {translate('common:account')}\n                  </Button>\n                </Dropdown>\n                <a href={`/dang-tin`}>\n                  <Button\n                    icon='plus'\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    style={{ width: '100%' }}\n                  >\n                    {translate('common:createNews')}\n                  </Button>\n                </a>\n              </Col>\n            ) : (\n                <Col lg={6} md={8} sm={0} xs={0} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    style={{ marginRight: '10px', marginLeft: '16px' }}\n                    onClick={() => this.props.profileReducers.openModal({ modalName: 'register' })}\n                  >\n                    {translate('common:register')}\n                  </Button>\n                  <Button\n                    type='default'\n                    size='large'\n                    className='search-bar-button'\n                    onClick={() => this.props.profileReducers.openModal({ modalName: 'login' })}\n                  >\n                    {translate('common:login')}\n                  </Button>\n                </Col>\n              )}\n          </Row>\n          <Row className='popular-keyword'>\n            <Col lg={6}></Col>\n            <Col lg={12} style={{\n              marginTop: '6px',\n              display: 'flex',\n              alignItems: 'center',\n            }}>\n              <span>{translate('common:commonKeywords')}: &nbsp; </span>\n              {this.props.commonKeywords.slice(0, 4).map((item, index) => (\n                <a\n                  style={{ color: '#000000' }}\n                  key={index}\n                  onClick={() => {\n                    window.location.href = `/tim-kiem?keyword=${item.keyword}`;\n                  }}\n                >\n                  <Tag color='orange'>{item.keyword}</Tag>\n                </a>\n              ))}\n            </Col>\n            <Col lg={6}></Col>\n          </Row>\n        </div>\n        <LoginModal\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n        <RegisterModal\n          profileState={this.props.profileState}\n          profileReducers={this.props.profileReducers}\n        />\n        <div id='recaptcha' />\n      </header>\n    );\n  }\n}\n\nexport const Header = withNamespaces('common')(MainHeader);\n"],"mappings":"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","sourceRoot":""}